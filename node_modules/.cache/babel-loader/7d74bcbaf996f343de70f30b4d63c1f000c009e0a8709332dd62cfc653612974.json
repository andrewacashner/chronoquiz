{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/Clues.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Clues() {\n  _s();\n  let context = useContext(TimelineContext);\n  let game = context.get;\n  let clues = game.clues;\n  function Stubs(clues) {\n    const Stub = key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardStub\"\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }, this);\n    if (clues && !clues.isEmpty) {\n      let stubs = clues.allButLast();\n      return stubs.map(card => /*#__PURE__*/_jsxDEV(Stub, {}, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 32\n      }, this));\n    }\n  }\n  if (clues && !clues.isEmpty()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clueDeck\",\n      children: [/*#__PURE__*/_jsxDEV(Stubs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: clues.last()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Clues, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n_c = Clues;\nvar _c;\n$RefreshReg$(_c, \"Clues\");","map":{"version":3,"names":["useContext","TimelineContext","Card","jsxDEV","_jsxDEV","Clues","_s","context","game","get","clues","Stubs","Stub","key","className","fileName","_jsxFileName","lineNumber","columnNumber","isEmpty","stubs","allButLast","map","card","id","children","last","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/Clues.tsx"],"sourcesContent":["import { useContext } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport Card from \"./Card\";\n\nexport default function Clues() {\n  let context = useContext(TimelineContext);\n  let game = context.get;\n  let clues = game.clues;\n\n  function Stubs(clues): Array<React.ReactElement> {\n    const Stub = (key) => <div key={key} className=\"cardStub\" />;\n    if (clues && !clues.isEmpty) {\n      let stubs = clues.allButLast();\n      return stubs.map(card => <Stub key={card.id} />);\n    }\n  }\n\n  if (clues && !clues.isEmpty()) {\n    return(\n      <div className=\"clueDeck\">\n        <Stubs />\n        <Card>{clues.last()}</Card>\n      </div>\n    );\n  }\n}\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,eAAe,MAAM,0BAA0B;AACtD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,IAAIC,OAAO,GAAGP,UAAU,CAACC,eAAe,CAAC;EACzC,IAAIO,IAAI,GAAGD,OAAO,CAACE,GAAG;EACtB,IAAIC,KAAK,GAAGF,IAAI,CAACE,KAAK;EAEtB,SAASC,KAAKA,CAACD,KAAK,EAA6B;IAC/C,MAAME,IAAI,GAAIC,GAAG,iBAAKT,OAAA;MAAeU,SAAS,EAAC;IAAU,GAAzBD,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwB,CAAC;IAC5D,IAAIR,KAAK,IAAI,CAACA,KAAK,CAACS,OAAO,EAAE;MAC3B,IAAIC,KAAK,GAAGV,KAAK,CAACW,UAAU,CAAC,CAAC;MAC9B,OAAOD,KAAK,CAACE,GAAG,CAACC,IAAI,iBAAInB,OAAA,CAACQ,IAAI,MAAMW,IAAI,CAACC,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IAClD;EACF;EAEA,IAAIR,KAAK,IAAI,CAACA,KAAK,CAACS,OAAO,CAAC,CAAC,EAAE;IAC7B,oBACEf,OAAA;MAAKU,SAAS,EAAC,UAAU;MAAAW,QAAA,gBACvBrB,OAAA,CAACO,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTd,OAAA,CAACF,IAAI;QAAAuB,QAAA,EAAEf,KAAK,CAACgB,IAAI,CAAC;MAAC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAEV;AACF;AAACZ,EAAA,CArBuBD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}