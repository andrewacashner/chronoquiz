{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n  const startingTimeline = useCallback(() => {\n    return new Timeline({\n      creator: currentUser.username\n    });\n  }, [currentUser.username]);\n  let [timeline, setTimeline] = useState(startingTimeline());\n  console.debug(timeline);\n  let [saveReady, setSaveReady] = useState(false);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  // TODO update when new timeline created\n\n  let [timelineID, setTimelineID] = useState(null);\n  // TODO replace with field of timeline?\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        var _Timeline$creator, _Timeline$creator2;\n        let json = await response.json();\n        console.debug(json);\n        let newTimeline = new Timeline({\n          id: json.id,\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: (_Timeline$creator = Timeline.creator) !== null && _Timeline$creator !== void 0 ? _Timeline$creator : currentUser.username,\n          facts: json.facts.map(f => Fact.newFromYear(f))\n        });\n        setMetadata({\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: (_Timeline$creator2 = Timeline.creator) !== null && _Timeline$creator2 !== void 0 ? _Timeline$creator2 : currentUser.username\n        });\n        setFacts(json.facts.map(f => Fact.newFromYear(f)));\n        setTimeline(newTimeline);\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        setTimeline(startingTimeline());\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, startingTimeline, userToken]);\n  function Chooser() {\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  function setTimelineMetadata(newMetadata) {\n    setTimeline(prev => new Timeline({\n      ...prev,\n      title: newMetadata.title,\n      description: newMetadata.description,\n      keywords: Timeline.parseKeywords(newMetadata.keywords),\n      creator: newMetadata.creator\n    }));\n  }\n  let [metadata, setMetadata] = useState({\n    title: '',\n    description: '',\n    keywordString: [],\n    creator: currentUser.username\n  });\n  function MetadataPanel() {\n    function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      setMetadata({\n        title: data.get(\"title\"),\n        description: data.get(\"description\"),\n        keywordString: data.get(\"keywords\"),\n        creator: data.get(\"creator\")\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(metadata);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        onSubmit: updateMetadata,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              defaultValue: metadata.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              defaultValue: metadata.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              defaultValue: metadata.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              defaultValue: metadata.creator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Metadata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          setTimeline(prev => prev.removeFact(item));\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        setTestCard(item);\n        setTimeline(prev => prev.removeFact(item));\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: editFact,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: deleteFact,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Enter timeline events using the form below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timeline ? timeline.facts.map(currentFact) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), timeline ? null : /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n  const startingCard = () => new Fact({\n    date: new Date(),\n    info: \"Description\",\n    img: \"https://picsum.photos/200.jpg\"\n  });\n  let [testCard, setTestCard] = useState(startingCard());\n  function NewFactForm() {\n    function setTimelineFacts(facts) {\n      let newTimeline = new Timeline({\n        ...timeline,\n        facts: facts\n      });\n      newTimeline.sortByDate();\n      setTimeline(newTimeline);\n    }\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        setTimelineFacts([...timeline.facts, testCard]);\n        console.debug(\"Added fact to timeline\");\n        setTestCard(startingCard());\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": fact.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: fact.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: fact.img,\n          src: fact.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: fact.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this);\n    }\n    function setDate(event) {\n      let newDate = new Date();\n      newDate.setFullYear(Number(event.target.value));\n      setTestCard(prev => new Fact({\n        ...prev,\n        date: newDate\n      }));\n    }\n    function setInfo(event) {\n      let newInfo = event.target.value;\n      setTestCard(prev => new Fact({\n        ...prev,\n        info: newInfo\n      }));\n    }\n    function setImg(event) {\n      let newImg = event.target.value;\n      setTestCard(prev => new Fact({\n        ...prev,\n        img: newImg\n      }));\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: startingCard().year,\n              onChange: setDate,\n              defaultValue: testCard.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onChange: setInfo,\n              defaultValue: testCard.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              onChange: setImg,\n              defaultValue: testCard.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: testCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this);\n  }\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timeline.title}'`);\n    setTimelineMetadata(metadata);\n    setSaveReady(true);\n  }\n  function ResetButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset\",\n      type: \"button\",\n      onClick: resetTimeline,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTimeline(startingTimeline());\n    }\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    }\n  }, [saveReady, timeline, currentUser, userToken]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Chronoquiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"vs62RXz3ZIs2bwzTLJ42v85AZ9A=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useContext","useEffect","useCallback","useNavigate","User","Fact","Timeline","UserContext","jsxDEV","_jsxDEV","Create","_s","userContext","authenticated","get","currentUser","userToken","navigate","startingTimeline","creator","username","timeline","setTimeline","console","debug","saveReady","setSaveReady","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","event","preventDefault","data","FormData","target","id","response","fetch","SERVER","method","headers","Headers","ok","_Timeline$creator","_Timeline$creator2","json","newTimeline","title","description","keywords","parseKeywords","facts","map","f","newFromYear","setMetadata","setFacts","status","statusText","Chooser","timelineOption","value","onSubmit","for","name","defaultValue","type","setTimelineMetadata","newMetadata","prev","metadata","keywordString","MetadataPanel","updateMetadata","log","htmlFor","CurrentFactsPanel","currentFact","item","deleteFact","window","confirm","date","getFullYear","removeFact","editFact","setTestCard","onClick","year","info","img","crypto","randomUUID","startingCard","Date","testCard","NewFactForm","setTimelineFacts","sortByDate","newFact","CardPreview","fact","alt","src","setDate","newDate","setFullYear","Number","setInfo","newInfo","setImg","newImg","max","onChange","SaveButton","saveTimeline","action","ResetButton","resetTimeline","postTimeline","body","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nexport default function Create() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n\n  const startingTimeline = useCallback(() => {\n    return new Timeline({\n      creator: currentUser.username\n    });\n  }, [currentUser.username]);\n\n  let [timeline, setTimeline] = useState(startingTimeline());\n  console.debug(timeline);\n\n  let [saveReady, setSaveReady] = useState(false);\n  \n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  // TODO update when new timeline created\n\n  let [timelineID, setTimelineID] = useState(null);\n  // TODO replace with field of timeline?\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n        let newTimeline = new Timeline({\n          id: json.id,\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: Timeline.creator ?? currentUser.username,\n          facts: json.facts.map(f => Fact.newFromYear(f))\n        });\n        setMetadata({\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: Timeline.creator ?? currentUser.username,\n        });\n        setFacts(json.facts.map(f => Fact.newFromYear(f)));\n\n        setTimeline(newTimeline);\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        setTimeline(startingTimeline());\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, startingTimeline, userToken]);\n\n\n  function Chooser() {\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label for=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\">\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n\n  function setTimelineMetadata(newMetadata) {\n     setTimeline(prev => new Timeline({\n      ...prev,\n      title: newMetadata.title,\n      description: newMetadata.description,\n      keywords: Timeline.parseKeywords(newMetadata.keywords),\n      creator: newMetadata.creator\n     }));\n  }\n\n  let [metadata, setMetadata] = useState({\n    title: '',\n    description: '',\n    keywordString: [],\n    creator: currentUser.username\n  });\n\n  function MetadataPanel() {\n        function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      setMetadata({\n        title: data.get(\"title\"),\n        description: data.get(\"description\"),\n        keywordString: data.get(\"keywords\"),\n        creator: data.get(\"creator\")\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(metadata);\n    }\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\" onSubmit={updateMetadata}>\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                defaultValue={metadata.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                defaultValue={metadata.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                defaultValue={metadata.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                defaultValue={metadata.creator}/>\n            </div>\n          </div>\n          <button type=\"submit\">Update Metadata</button>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n\n    function currentFact(item) {\n\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          setTimeline(prev => prev.removeFact(item));\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        setTestCard(item);\n        setTimeline(prev => prev.removeFact(item));\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td><button type=\"button\" onClick={editFact}>Edit</button>\n            <button type=\"button\" onClick={deleteFact}>Delete</button></td>\n          <td>{item.id}</td>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <p className=\"instructions\">Enter timeline events using the form below</p>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>ID</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timeline ? timeline.facts.map(currentFact) : null }\n          </tbody>\n        </table>\n        { timeline ? null : <Instructions /> }\n      </section>\n    );\n  }\n\n  const startingCard = () => new Fact({\n    date: new Date(),\n    info: \"Description\", \n    img: \"https://picsum.photos/200.jpg\"\n  });\n\n  let [testCard, setTestCard] = useState(startingCard());\n\n  function NewFactForm() {\n\n    function setTimelineFacts(facts: Array<Fact>) {\n      let newTimeline = new Timeline({\n        ...timeline,\n        facts: facts\n      });\n      newTimeline.sortByDate();\n      setTimeline(newTimeline);\n    }\n\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        setTimelineFacts([...timeline.facts, testCard]);\n        console.debug(\"Added fact to timeline\");\n        setTestCard(startingCard());\n      }\n    }\n\n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={fact.year} data-noselect=\"noselect\">\n          <span className=\"date\">{fact.year}</span>\n          <img alt={fact.img} src={fact.img} />\n          <span className=\"info\">{fact.info}</span>\n        </div>\n      );\n    }\n\n    function setDate(event) {\n      let newDate = new Date();\n      newDate.setFullYear(Number(event.target.value));\n      setTestCard(prev => new Fact({ ...prev, date: newDate }));\n    }\n\n    function setInfo(event) {\n      let newInfo = event.target.value;\n      setTestCard(prev => new Fact({ ...prev, info: newInfo }));\n    }\n\n    function setImg(event) {\n      let newImg = event.target.value;\n      setTestCard(prev => new Fact({ ...prev, img: newImg }));\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={startingCard().year}\n                onChange={setDate}\n                defaultValue={testCard.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onChange={setInfo}\n                defaultValue={testCard.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onChange={setImg}\n                defaultValue={testCard.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={testCard} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function SaveButton() {\n    return(\n      <button id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timeline.title}'`);\n    setTimelineMetadata(metadata);\n    setSaveReady(true);\n  }\n\n  function ResetButton() {\n    return(\n      <button id=\"reset\" type=\"button\" onClick={resetTimeline}>Reset</button>\n    );\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTimeline(startingTimeline());\n    }\n  }\n\n   \n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    } \n  }, [saveReady, timeline, currentUser, userToken]);\n\n\n  return(\n    <main>\n      <h1>Create a Chronoquiz</h1>\n      <Instructions />\n      <Chooser />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <SaveButton />\n      <ResetButton />\n    </main>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}