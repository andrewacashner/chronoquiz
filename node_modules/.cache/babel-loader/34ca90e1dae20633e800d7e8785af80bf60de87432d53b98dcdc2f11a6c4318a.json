{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\nimport Game from \"../classes/Game\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isInputValid(json) {\n  return typeof json === \"object\" && Array.isArray(json) && json.length > 0 && json.every(fact => \"date\" in fact && \"info\" in fact);\n}\nasync function newSafeCard(json) {\n  try {\n    let card = await Card.newSafeCard(json);\n    if (card && card.isSafe) {\n      return card;\n    } else {\n      throw new Error(`Faulty card input {date: '${entry.date}', info: '${entry.info.slice(0, 15)}...'}; skipping`);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\nasync function clueListFromJson(json) {\n  let cards = [];\n  try {\n    if (json && json.length > 0) {\n      for (let entry of json) {\n        let card = await newSafeCard(entry);\n        if (card) {\n          cards.push(card);\n        }\n      }\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  return new FactList(cards);\n}\nexport default function InputForm() {\n  _s();\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n  let [url, setUrl] = useState(\"\");\n  let [json, setJson] = useState(null);\n  let [uploadVisible, setUploadVisible] = useState(false);\n  let [playVisible, setPlayVisible] = useState(true);\n  function getUrl(event) {\n    event.preventDefault();\n    let source = event.target.source.value;\n    let files = event.target.fileInput.files;\n    let newUrl = files.length > 0 ? URL.createObjectURL(files[0]) : `./input/${source}.json`;\n    setUrl(newUrl);\n    setPlayVisible(false);\n  }\n  useEffect(() => {\n    async function fetchUrl() {\n      if (url) {\n        console.log(`Loading file ${url}`);\n        try {\n          let response = await fetch(url);\n          let json;\n          let contentType = response.headers.get(\"content-type\");\n          if (contentType && contentType.includes(\"application/json\")) {\n            json = await response.json();\n          } else {\n            throw new Error(`No JSON input: ${response}`);\n          }\n          if (isInputValid(json)) {\n            setJson(json);\n          } else {\n            throw new Error(`Unusable JSON input: ${newJson}`);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    fetchUrl();\n  }, [url]);\n  useEffect(() => {\n    async function loadClues(json) {\n      try {\n        let newClues = await clueListFromJson(json);\n        newClues.setupClues();\n        setGame(prevGame => new Game({\n          clues: newClues,\n          timeline: prevGame.timeline,\n          score: prevGame.score\n        }));\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    loadClues(json);\n  }, [json, setGame]);\n  function showUploadButton(event) {\n    let value = event.target.value;\n    setUploadVisible(value === \"upload\");\n  }\n  function visibility(isVisible) {\n    return isVisible ? \"show\" : \"hide\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"inputForm\",\n    onSubmit: getUrl,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"source\",\n      children: \"Choose a timeline:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"source\",\n      id: \"source\",\n      onChange: showUploadButton,\n      required: true,\n      defaultValue: \"music\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"music\",\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wars\",\n        children: \"Wars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"upload\",\n        children: \"Upload a custom timeline...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"file\",\n      className: visibility(uploadVisible),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: [\"Upload JSON timeline file (\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"about.html\",\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 63\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        accept: \".json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: visibility(playVisible),\n      type: \"submit\",\n      id: \"playbutton\",\n      children: \"Play!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"9YLq+iutnnLoTTe1KpT6U9/5Sio=\");\n_c = InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useContext","useState","useEffect","Card","FactList","Game","TimelineContext","jsxDEV","_jsxDEV","isInputValid","json","Array","isArray","length","every","fact","newSafeCard","card","isSafe","Error","entry","date","info","slice","e","console","error","clueListFromJson","cards","push","InputForm","_s","context","setGame","set","url","setUrl","setJson","uploadVisible","setUploadVisible","playVisible","setPlayVisible","getUrl","event","preventDefault","source","target","value","files","fileInput","newUrl","URL","createObjectURL","fetchUrl","log","response","fetch","contentType","headers","get","includes","newJson","loadClues","newClues","setupClues","prevGame","clues","timeline","score","showUploadButton","visibility","isVisible","id","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","required","defaultValue","className","href","type","accept","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\n\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\nimport Game from \"../classes/Game\";\n\nimport TimelineContext from \"../store/TimelineContext\";\n\nfunction isInputValid(json: any): boolean {\n  return typeof json === \"object\"\n  && Array.isArray(json) \n  && json.length > 0 \n  && json.every(fact => (\"date\" in fact) && (\"info\" in fact));\n}\n\nasync function newSafeCard(json: object): Card {\n  try {\n    let card = await Card.newSafeCard(json);\n    if (card && card.isSafe) {\n      return card;\n    } else {\n      throw new Error(`Faulty card input {date: '${entry.date}', info: '${entry.info.slice(0, 15)}...'}; skipping`);\n    }\n  } catch(e) {\n    console.error(e);\n  }\n}\n\nasync function clueListFromJson(json: object): FactList { \n  let cards = [];\n  try {\n    if (json && json.length > 0) {\n      for (let entry of json) {\n        let card = await newSafeCard(entry);\n        if (card) {\n          cards.push(card);\n        }\n      }\n    }\n  } catch(e) {\n    console.error(e);\n  }\n  return new FactList(cards);\n}\n\n\nexport default function InputForm() {\n\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n\n  let [url, setUrl] = useState(\"\");\n  let [json, setJson] = useState(null);\n  let [uploadVisible, setUploadVisible] = useState(false);\n  let [playVisible, setPlayVisible] = useState(true);\n\n  function getUrl(event: React.FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n    let source = event.target.source.value;\n    let files = event.target.fileInput.files;\n    let newUrl = (files.length > 0) \n                  ? URL.createObjectURL(files[0]) \n                  : `./input/${source}.json`;\n    setUrl(newUrl);\n    setPlayVisible(false); \n  }\n  \n  useEffect(() => {\n    async function fetchUrl(): void {\n      if (url) {\n        console.log(`Loading file ${url}`);\n\n        try {\n          let response = await fetch(url);\n\n          let json;\n          let contentType = response.headers.get(\"content-type\");\n          \n          if (contentType && contentType.includes(\"application/json\")) {\n            json = await response.json();\n          } else {\n            throw new Error(`No JSON input: ${response}`);\n          }\n\n          if (isInputValid(json)) {\n            setJson(json);\n          } else {\n            throw new Error(`Unusable JSON input: ${newJson}`);\n          }\n        } catch(e) { \n          console.error(e); \n        }\n      }\n    }\n    fetchUrl();\n  }, [url]);\n\n  useEffect(() => {\n    async function loadClues(json) {\n      try {\n        let newClues = await clueListFromJson(json);\n        newClues.setupClues();\n        setGame(prevGame => new Game({ \n          clues: newClues,\n          timeline: prevGame.timeline,\n          score: prevGame.score\n        }));\n      } catch(e) {\n        console.error(e);\n      }\n    }\n\n    loadClues(json);\n  }, [json, setGame])\n\n\n  function showUploadButton(event: React.FormEvent<HTMLFormElement>): void {\n    let value = event.target.value;\n    setUploadVisible(value === \"upload\");\n  }\n\n  function visibility(isVisible: boolean): string {\n    return (isVisible) ? \"show\" : \"hide\";\n  }\n\n  return(\n    <form id=\"inputForm\" onSubmit={getUrl}>\n      <label htmlFor=\"source\">Choose a timeline:</label>\n      <select name=\"source\" id=\"source\" \n        onChange={showUploadButton}\n        required defaultValue=\"music\">\n        <option value=\"music\">Music</option>\n        <option value=\"wars\">Wars</option>\n        <option value=\"upload\">Upload a custom timeline...</option>\n      </select>\n      <div id=\"file\" className={visibility(uploadVisible)}>\n        <label htmlFor=\"fileInput\">Upload JSON timeline file (<a href=\"about.html\">?</a>)</label>\n        <input id=\"fileInput\" type=\"file\" accept=\".json\" />\n      </div>\n      <button className={visibility(playVisible)} \n      type=\"submit\" id=\"playbutton\">Play!</button>\n    </form>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}