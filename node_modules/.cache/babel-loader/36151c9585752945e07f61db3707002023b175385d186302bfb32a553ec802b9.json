{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _FactList;\nimport { default as Color } from \"./RgbColorMix\";\nvar _sortByDate = /*#__PURE__*/_classPrivateFieldLooseKey(\"sortByDate\");\nvar _setColors = /*#__PURE__*/_classPrivateFieldLooseKey(\"setColors\");\nvar _shuffle = /*#__PURE__*/_classPrivateFieldLooseKey(\"shuffle\");\nexport default class FactList {\n  constructor(cards = []) {\n    // Shuffle the array, using the Fisher-Yates/Knuth shuffle\n    // (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n    Object.defineProperty(this, _shuffle, {\n      value: _shuffle2\n    });\n    // Set the colors of the cards in this list, in chronological order, to\n    // evenly spaced intervals along the spectrum.\n    Object.defineProperty(this, _setColors, {\n      value: _setColors2\n    });\n    // PRIVATE METHODS\n    // Sort the array by the date field, ascending.\n    Object.defineProperty(this, _sortByDate, {\n      value: _sortByDate2\n    });\n    this.items = void 0;\n    this.items = cards;\n  }\n  // PUBLIC METHODS\n  setupClues() {\n    _classPrivateFieldLooseBase(this, _setColors)[_setColors]();\n    _classPrivateFieldLooseBase(this, _shuffle)[_shuffle]();\n  }\n  isEmpty() {\n    return this.items.length === 0;\n  }\n  allButLast() {\n    return this.items.slice(0, -1);\n  }\n  last() {\n    return this.items.at(-1);\n  }\n}\n_FactList = FactList;\nfunction _sortByDate2() {\n  this.sort((c1, c2) => {\n    return c1.date - c2.date;\n  });\n  return this;\n}\nfunction _setColors2() {\n  _classPrivateFieldLooseBase(this, _sortByDate)[_sortByDate]();\n  let spectrum = Color.colorSpectrum();\n  this.forEach((card, index) => {\n    this[index].color = Color.colorAtIndex(index, this.length, spectrum);\n  });\n  return this;\n}\nfunction _shuffle2() {\n  function randomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  let items = this.items;\n  for (let i = items.length - 1; i > 0; --i) {\n    let j = randomInt(i);\n    [items[i], items[j]] = [items[j], items[i]];\n  }\n  return this;\n}","map":{"version":3,"names":["default","Color","_sortByDate","_classPrivateFieldLooseKey","_setColors","_shuffle","FactList","constructor","cards","Object","defineProperty","value","_shuffle2","_setColors2","_sortByDate2","items","setupClues","_classPrivateFieldLooseBase","isEmpty","length","allButLast","slice","last","at","_FactList","sort","c1","c2","date","spectrum","colorSpectrum","forEach","card","index","color","colorAtIndex","randomInt","max","Math","floor","random","i","j"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/FactList.tsx"],"sourcesContent":["import Card from \"Card\";\nimport { default as Color } from \"./RgbColorMix\";\n\nexport default class FactList {\n  items: Array<Card>;\n\n  constructor(cards: Array<Card> = []) {\n    this.items = cards;\n  }\n\n  // PRIVATE METHODS\n  \n  // Sort the array by the date field, ascending.\n  #sortByDate(): FactList {\n    this.sort((c1, c2) => { return c1.date - c2.date });\n    return this;\n  }\n  \n  // Set the colors of the cards in this list, in chronological order, to\n  // evenly spaced intervals along the spectrum.\n  #setColors(): FactList {\n    this.#sortByDate();\n    let spectrum = Color.colorSpectrum();\n\n    this.forEach((card, index) => {\n      this[index].color = Color.colorAtIndex(index, this.length, spectrum);\n    });\n    return this;\n  } \n\n  // Shuffle the array, using the Fisher-Yates/Knuth shuffle\n  // (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n  #shuffle(): FactList {\n    \n    function randomInt(max: number): number {\n      return Math.floor(Math.random() * max);\n    } \n\n    let items = this.items;\n\n    for (let i = items.length - 1; i > 0; --i) {\n      let j = randomInt(i);\n      [items[i], items[j]] = [items[j], items[i]];\n    }\n\n    return this;\n  }\n\n  // PUBLIC METHODS\n  setupClues() {\n    this.#setColors();\n    this.#shuffle();\n  }\n\n  isEmpty(): boolean {\n    return this.items.length === 0;\n  }\n\n  allButLast(): Array<Card> {\n    return this.items.slice(0, -1);\n  }\n\n  last(): Card {\n    return this.items.at(-1);\n  }\n}\n\n"],"mappings":";;;AACA,SAASA,OAAO,IAAIC,KAAK,QAAQ,eAAe;AAAC,IAAAC,WAAA,gBAAAC,0BAAA;AAAA,IAAAC,UAAA,gBAAAD,0BAAA;AAAA,IAAAE,QAAA,gBAAAF,0BAAA;AAEjD,eAAe,MAAMG,QAAQ,CAAC;EAG5BC,WAAWA,CAACC,KAAkB,GAAG,EAAE,EAAE;IAwBrC;IACA;IAAAC,MAAA,CAAAC,cAAA,OAAAL,QAAA;MAAAM,KAAA,EAAAC;IAAA;IAbA;IACA;IAAAH,MAAA,CAAAC,cAAA,OAAAN,UAAA;MAAAO,KAAA,EAAAE;IAAA;IATA;IAEA;IAAAJ,MAAA,CAAAC,cAAA,OAAAR,WAAA;MAAAS,KAAA,EAAAG;IAAA;IAAA,KARAC,KAAK;IAGH,IAAI,CAACA,KAAK,GAAGP,KAAK;EACpB;EAwCA;EACAQ,UAAUA,CAAA,EAAG;IACXC,2BAAA,KAAI,EAAAb,UAAA,EAAAA,UAAA;IACJa,2BAAA,KAAI,EAAAZ,QAAA,EAAAA,QAAA;EACN;EAEAa,OAAOA,CAAA,EAAY;IACjB,OAAO,IAAI,CAACH,KAAK,CAACI,MAAM,KAAK,CAAC;EAChC;EAEAC,UAAUA,CAAA,EAAgB;IACxB,OAAO,IAAI,CAACL,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC;EAEAC,IAAIA,CAAA,EAAS;IACX,OAAO,IAAI,CAACP,KAAK,CAACQ,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1B;AACF;AAACC,SAAA,GA9DoBlB,QAAQ;AAAA,SAAAQ,aAAA,EAUH;EACtB,IAAI,CAACW,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAK;IAAE,OAAOD,EAAE,CAACE,IAAI,GAAGD,EAAE,CAACC,IAAI;EAAC,CAAC,CAAC;EACnD,OAAO,IAAI;AACb;AAAC,SAAAf,YAAA,EAIsB;EACrBI,2BAAA,KAAI,EAAAf,WAAA,EAAAA,WAAA;EACJ,IAAI2B,QAAQ,GAAG5B,KAAK,CAAC6B,aAAa,CAAC,CAAC;EAEpC,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC5B,IAAI,CAACA,KAAK,CAAC,CAACC,KAAK,GAAGjC,KAAK,CAACkC,YAAY,CAACF,KAAK,EAAE,IAAI,CAACd,MAAM,EAAEU,QAAQ,CAAC;EACtE,CAAC,CAAC;EACF,OAAO,IAAI;AACb;AAAC,SAAAjB,UAAA,EAIoB;EAEnB,SAASwB,SAASA,CAACC,GAAW,EAAU;IACtC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,GAAG,CAAC;EACxC;EAEA,IAAItB,KAAK,GAAG,IAAI,CAACA,KAAK;EAEtB,KAAK,IAAI0B,CAAC,GAAG1B,KAAK,CAACI,MAAM,GAAG,CAAC,EAAEsB,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;IACzC,IAAIC,CAAC,GAAGN,SAAS,CAACK,CAAC,CAAC;IACpB,CAAC1B,KAAK,CAAC0B,CAAC,CAAC,EAAE1B,KAAK,CAAC2B,CAAC,CAAC,CAAC,GAAG,CAAC3B,KAAK,CAAC2B,CAAC,CAAC,EAAE3B,KAAK,CAAC0B,CAAC,CAAC,CAAC;EAC7C;EAEA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}