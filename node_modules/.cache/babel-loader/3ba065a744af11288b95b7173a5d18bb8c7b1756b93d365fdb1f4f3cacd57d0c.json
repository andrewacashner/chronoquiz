{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n// import TimelineContext from \"../store/TimelineContext\";\n// import useTimelineSelection from \"../hooks/useTimelineSelection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function fetchTimeline(url) {\n  let response = await fetch(url);\n  let json = await response.json();\n  return json;\n}\nexport default function InputForm() {\n  _s();\n  //  let context = useContext(TimelineContext);\n  // let setGame = context.set;\n\n  //  // TODO doesn't work (infinite loop of re-renders)\n  //  let loadTimeline = useTimelineSelection(null, setGame);\n  //  useEffect(() => loadTimeline());\n  //\n  //  function setupTimeline(event: React.FormEvent<HTMLFormElement>): void {\n  //    loadTimeline(event, setGame);\n  //  }\n\n  let [url, setUrl] = useState(\"./input/raccoon.json\");\n  function getUrl(event) {\n    let source = event.target.source.value;\n    let files = event.target.fileInput.files;\n    if (files.length > 0) {\n      setUrl(URL.createObjectURL(files[0]));\n    } else {\n      setUrl(`../input/${source}.json`);\n    }\n  }\n  let [json, setJson] = useState(\"{ 'status': 'placeholder' }\");\n  useEffect(() => {\n    console.log(`Loading file '${url}'`);\n    fetch(\"input/music.json\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => console.log(response)).catch(console.error);\n    //    fetchTimeline(url)\n    //    .then(data => setJson(data.json()))\n    //    .catch(console.error);\n  }, [url, json]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"inputForm\",\n      onSubmit: getUrl,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source\",\n        children: \"Choose a timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"source\",\n        id: \"source\",\n        required: true,\n        defaultValue: \"music\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"music\",\n          children: \"Music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"wars\",\n          children: \"Wars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"upload\",\n          children: \"Upload a custom timeline...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file\",\n        className: \"hide\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: [\"Upload JSON timeline file (\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"about.html\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 63\n          }, this), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \".json\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"playbutton\",\n        children: \"Play!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: json\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(InputForm, \"fr8a4rQWvjIJ4egrEPmxsu+2xRM=\");\n_c = InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchTimeline","url","response","fetch","json","InputForm","_s","setUrl","getUrl","event","source","target","value","files","fileInput","length","URL","createObjectURL","setJson","console","log","headers","then","catch","error","children","id","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","required","defaultValue","className","href","type","accept","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\n// import TimelineContext from \"../store/TimelineContext\";\n// import useTimelineSelection from \"../hooks/useTimelineSelection\";\n\nasync function fetchTimeline(url) {\n  let response = await fetch(url);\n  let json = await response.json();\n  return json;\n}\n\nexport default function InputForm() {\n\n  //  let context = useContext(TimelineContext);\n  // let setGame = context.set;\n\n  //  // TODO doesn't work (infinite loop of re-renders)\n  //  let loadTimeline = useTimelineSelection(null, setGame);\n  //  useEffect(() => loadTimeline());\n  //\n  //  function setupTimeline(event: React.FormEvent<HTMLFormElement>): void {\n  //    loadTimeline(event, setGame);\n  //  }\n\n  let [url, setUrl] = useState(\"./input/raccoon.json\");\n\n  function getUrl(event: React.FormEvent<HTMLFormElement>): void {\n    let source = event.target.source.value;\n    let files = event.target.fileInput.files;\n    if (files.length > 0) { \n      setUrl(URL.createObjectURL(files[0]));\n    } else {\n      setUrl(`../input/${source}.json`);\n    }\n  }\n\n  let [json, setJson] = useState(\"{ 'status': 'placeholder' }\");\n  \n  useEffect(() => {\n    console.log(`Loading file '${url}'`);\n    fetch(\"input/music.json\",\n          { headers : {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n          }).then(response => console.log(response)).catch(console.error);\n    //    fetchTimeline(url)\n    //    .then(data => setJson(data.json()))\n    //    .catch(console.error);\n  }, [url, json]);\n\n  return(\n    <>\n    <form id=\"inputForm\" onSubmit={getUrl}>\n      <label htmlFor=\"source\">Choose a timeline:</label>\n      <select name=\"source\" id=\"source\" required defaultValue=\"music\">\n        <option value=\"music\">Music</option>\n        <option value=\"wars\">Wars</option>\n        <option value=\"upload\">Upload a custom timeline...</option>\n      </select>\n      <div id=\"file\" className=\"hide\">\n        <label htmlFor=\"fileInput\">Upload JSON timeline file (<a href=\"about.html\">?</a>)</label>\n        <input id=\"fileInput\" type=\"file\" accept=\".json\" />\n      </div>\n      <button type=\"submit\" id=\"playbutton\">Play!</button>\n    </form>\n    <pre>{json}</pre>\n  </>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}