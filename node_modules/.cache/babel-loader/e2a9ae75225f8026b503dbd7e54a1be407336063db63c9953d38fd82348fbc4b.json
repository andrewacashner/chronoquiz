{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Choose.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport User from \"../classes/User\";\nimport TimelineList from \"../components/TimelineList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Choose() {\n  _s();\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList() {\n      let response = await fetch(`${User.SERVER}/timelines/`);\n      if (response.ok) {\n        let json = await response.json();\n        setTimelineList(json);\n      }\n    }\n    loadTimelineList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose a Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimelineList, {\n      data: timelineList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Choose, \"/+C12HQH6AUgHeQMAX78fwXrII4=\");\n_c = Choose;\nvar _c;\n$RefreshReg$(_c, \"Choose\");","map":{"version":3,"names":["useState","useEffect","User","TimelineList","jsxDEV","_jsxDEV","Choose","_s","timelineList","setTimelineList","loadTimelineList","response","fetch","SERVER","ok","json","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Choose.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport TimelineList from \"../components/TimelineList\";\n\nexport default function Choose() {\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList() {\n      let response = await fetch(`${User.SERVER}/timelines/`);\n      if (response.ok) {\n        let json = await response.json();\n        setTimelineList(json);\n      }\n    }\n\n    loadTimelineList();\n  }, []);\n  \n  return(\n    <main>\n      <h1>Choose a Quiz</h1>\n      <TimelineList data={timelineList} />\n    </main>\n  );\n}\n"],"mappings":";;AAAA,SAAqBA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAGvD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,IAAI,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,eAAeS,gBAAgBA,CAAA,EAAG;MAChC,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,IAAI,CAACW,MAAO,aAAY,CAAC;MACvD,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACf,IAAIC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;QAChCN,eAAe,CAACM,IAAI,CAAC;MACvB;IACF;IAEAL,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBf,OAAA,CAACF,YAAY;MAACkB,IAAI,EAAEb;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX;AAACb,EAAA,CArBuBD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}