{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timelineDefaults = {\n  title: '',\n  description: '',\n  keywordString: [],\n  creator: '',\n  facts: []\n};\nfunction timelineReducer(state, action) {\n  let toDo = action.type;\n  let obj = action.payload;\n  let newState = state;\n  const actions = {\n    set: new Timeline({\n      ...state,\n      ...obj\n    }),\n    reset: new Timeline(timelineDefaults),\n    addFact: state.addFact(obj.fact),\n    removeFact: state.removeFact(obj.fact)\n  };\n  if (toDo in actions) {\n    newState = actions[toDo];\n  }\n  return newState;\n}\nconst factDefaults = {\n  date: new Date(),\n  info: \"Description\",\n  img: \"https://picsum.photos/200.jpg\"\n};\nfunction factReducer(state, action) {\n  let toDo = action.type;\n  let obj = action.payload;\n  let newState = state;\n  const actions = {\n    set: new Fact({\n      ...state,\n      ...obj\n    }),\n    reset: new Fact(factDefaults)\n  };\n  if (toDo in actions) {\n    newState = actions[toDo];\n  }\n  return newState;\n}\nfunction updateReducer(dispatchFn) {\n  return function (field, setValueFn = null) {\n    return function (event) {\n      let value = event.target.value;\n      let newValue = setValueFn ? setValueFn(value) : value;\n      dispatchFn({\n        type: \"set\",\n        payload: {\n          [field]: newValue\n        }\n      });\n    };\n  };\n}\nexport default function Create() {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, timelineDefaults);\n  let [factState, dispatchFact] = useReducer(factReducer, factDefaults);\n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n  let [saveReady, setSaveReady] = useState(false);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  let [timelineID, setTimelineID] = useState(null);\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        var _json$creator;\n        let json = await response.json();\n        console.debug(json);\n        dispatchTimeline({\n          type: \"set\",\n          payload: {\n            id: json.id,\n            title: json.title,\n            description: json.description,\n            keywords: Timeline.parseKeywords(json.keywords),\n            creator: (_json$creator = json.creator) !== null && _json$creator !== void 0 ? _json$creator : currentUser.username,\n            facts: json.facts.map(f => Fact.newFromYear(f))\n          }\n        });\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({\n          type: \"reset\"\n        });\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken]);\n  function Chooser() {\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n  function MetadataPanel() {\n    var _timelineState$creato;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              onBlur: updateTimeline(\"title\"),\n              defaultValue: timelineState.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              onBlur: updateTimeline(\"description\"),\n              defaultValue: timelineState.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              onBlur: updateTimeline(\"keywords\", Timeline.parseKeywords),\n              defaultValue: timelineState.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              onBlur: updateTimeline(\"creator\"),\n              defaultValue: (_timelineState$creato = timelineState.creator) !== null && _timelineState$creato !== void 0 ? _timelineState$creato : currentUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    console.debug(timelineState);\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({\n            type: \"removeFact\",\n            payload: {\n              fact: item\n            }\n          });\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({\n          type: \"removeFact\",\n          payload: {\n            fact: item\n          }\n        });\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FactListControls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: editFact,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: deleteFact,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Enter timeline events using the form below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timelineState.facts.map(currentFact)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), timelineState.facts.length === 0 ? /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 46\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this);\n  }\n  function NewFactForm() {\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: {\n            fact: factState\n          }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({\n          type: \"reset\"\n        });\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": factState.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: factState.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: factState.img,\n          src: factState.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: factState.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this);\n    }\n    function dateFromYear(year) {\n      let date = new Date();\n      date.setFullYear(year);\n      return date;\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: factDefaults.year,\n              onChange: updateFact(\"date\", dateFromYear),\n              defaultValue: factState.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onBlur: updateFact(\"info\"),\n              defaultValue: factState.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              onBlur: updateFact(\"img\"),\n              defaultValue: factState.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: factState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this);\n  }\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n  function DeleteTimelineButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"deleteTimeline\",\n      type: \"button\",\n      onClick: deleteTimeline,\n      children: \"Delete Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO reset to last saved version on backend\n  function deleteTimeline() {\n    if (window.confirm(\"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\")) {\n      dispatchTimeline({\n        type: \"reset\"\n      });\n    }\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n    }\n  }, [saveReady, timelineState, currentUser, userToken]);\n  function Controls() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTimelineButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Chronoquiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"xCE+pGpGEP1a0jy9htuMCB9gjgc=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useContext","useEffect","useReducer","useNavigate","User","Fact","Timeline","UserContext","jsxDEV","_jsxDEV","timelineDefaults","title","description","keywordString","creator","facts","timelineReducer","state","action","toDo","type","obj","payload","newState","actions","set","reset","addFact","fact","removeFact","factDefaults","date","Date","info","img","factReducer","updateReducer","dispatchFn","field","setValueFn","event","value","target","newValue","Create","_s","userContext","authenticated","get","currentUser","userToken","navigate","timelineState","dispatchTimeline","factState","dispatchFact","updateFact","updateTimeline","saveReady","setSaveReady","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","preventDefault","data","FormData","id","response","fetch","SERVER","method","headers","Headers","ok","_json$creator","json","console","debug","keywords","parseKeywords","username","map","f","newFromYear","status","statusText","Chooser","timelineOption","timeline","onSubmit","htmlFor","name","defaultValue","MetadataPanel","_timelineState$creato","onBlur","CurrentFactsPanel","currentFact","item","deleteFact","window","confirm","getFullYear","editFact","onClick","year","crypto","randomUUID","length","NewFactForm","newFact","CardPreview","alt","src","dateFromYear","setFullYear","max","onChange","SaveButton","saveTimeline","DeleteTimelineButton","deleteTimeline","postTimeline","body","Controls","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nconst timelineDefaults = {\n  title: '',\n  description: '',\n  keywordString: [],\n  creator: '',\n  facts: []\n};\n\nfunction timelineReducer(state, action) {\n  let toDo = action.type;\n  let obj = action.payload;\n\n  let newState = state;\n\n  const actions = {\n    set:        new Timeline({ ...state, ...obj }),\n    reset:      new Timeline(timelineDefaults),\n    addFact:    state.addFact(obj.fact),\n    removeFact: state.removeFact(obj.fact),\n  };\n\n  if (toDo in actions) {\n    newState = actions[toDo];\n  }\n  return newState;\n}\n\n\nconst factDefaults = {\n  date: new Date(),\n  info: \"Description\", \n  img: \"https://picsum.photos/200.jpg\"\n};\n\nfunction factReducer(state, action) {\n  let toDo = action.type;\n  let obj = action.payload;\n  let newState = state;\n\n  const actions = {\n    set:    new Fact({ ...state, ...obj }),\n    reset:  new Fact(factDefaults)\n  };\n\n  if (toDo in actions) {\n    newState = actions[toDo];\n  }\n  return newState;\n}\n\nfunction updateReducer(dispatchFn: (obj: object) => obj) {\n  return function(\n    field: string, \n    setValueFn: (value: any) => any = null\n  ): void {\n    return function(event): void {\n      let value = event.target.value;\n      let newValue = setValueFn ? setValueFn(value) : value;\n      dispatchFn({\n        type: \"set\",\n        payload: { \n          [field]: newValue\n        }\n      });\n    };\n  }\n}\n\n\nexport default function Create() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n\n\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, timelineDefaults);\n  let [factState, dispatchFact] = useReducer(factReducer, factDefaults);\n  \n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n\n  let [saveReady, setSaveReady] = useState(false);\n  \n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n\n  let [timelineID, setTimelineID] = useState(null);\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n\n        dispatchTimeline({\n          type: \"set\",\n          payload: {\n            id:           json.id,\n            title:        json.title,\n            description:  json.description,\n            keywords:     Timeline.parseKeywords(json.keywords),\n            creator:      json.creator ?? currentUser.username,\n            facts:        json.facts.map(f => Fact.newFromYear(f))\n          }\n        });\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({ type: \"reset\" })\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken]);\n\n\n  function Chooser() {\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\">\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">Load</button>\n      </form>\n    );\n  }\n\n  function MetadataPanel() {\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                onBlur={updateTimeline(\"title\")}\n                defaultValue={timelineState.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                onBlur={updateTimeline(\"description\")}\n                defaultValue={timelineState.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                onBlur={updateTimeline(\"keywords\", Timeline.parseKeywords)}\n                defaultValue={timelineState.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                onBlur={updateTimeline(\"creator\")}\n                defaultValue={timelineState.creator ?? currentUser.username}/>\n            </div>\n          </div>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n    console.debug(timelineState);\n\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({ \n            type: \"removeFact\",\n            payload: { fact: item }\n          });\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({ \n          type: \"removeFact\",\n          payload: { fact: item }\n        });\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td>\n            <div className=\"FactListControls\">\n              <button type=\"button\" onClick={editFact}>Edit</button>\n              <button type=\"button\" onClick={deleteFact}>Delete</button>\n            </div>\n          </td>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <p className=\"instructions\">Enter timeline events using the form below</p>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timelineState.facts.map(currentFact) }\n          </tbody>\n        </table>\n        { timelineState.facts.length === 0 ? <Instructions /> : null }\n      </section>\n    );\n  }\n\n  function NewFactForm() {\n\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: { fact: factState }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({ type: \"reset\" });\n      }\n    }\n    \n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={factState.year} data-noselect=\"noselect\">\n          <span className=\"date\">{factState.year}</span>\n          <img alt={factState.img} src={factState.img} />\n          <span className=\"info\">{factState.info}</span>\n        </div>\n      );\n    }\n\n\n\n\n    function dateFromYear(year: number): Date {\n      let date = new Date();\n      date.setFullYear(year);\n      return date\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={factDefaults.year}\n                onChange={updateFact(\"date\", dateFromYear)}\n                defaultValue={factState.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onBlur={updateFact(\"info\")}\n                defaultValue={factState.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onBlur={updateFact(\"img\")}\n                defaultValue={factState.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={factState} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function SaveButton() {\n    return(\n      <button id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n\n  function DeleteTimelineButton() {\n    return(\n      <button id=\"deleteTimeline\" type=\"button\" onClick={deleteTimeline}>Delete Quiz</button>\n    );\n  }\n\n  // TODO reset to last saved version on backend\n  function deleteTimeline() {\n    if (window.confirm(\"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\")) {\n      dispatchTimeline({ type: \"reset\" });\n    }\n  }\n\n   \n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n    } \n  }, [saveReady, timelineState, currentUser, userToken]);\n\n\n  function Controls() {\n    return(\n      <div className=\"controls\">\n        <SaveButton />\n        <DeleteTimelineButton />\n      </div>\n    );\n  }\n  return(\n    <main>\n      <h1>Create a Chronoquiz</h1>\n      <Instructions />\n      <Chooser />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <Controls />\n    </main>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}