{"ast":null,"code":"import FactCard from\"./FactCard\";import Fact from\"./Fact\";import TimelineDeck from\"./TimelineDeck\";import{default as Color}from\"./RgbColorMix\";export default class Game{constructor(){let{clues,timeline,score=0,isActive=false,isGameOver=false}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.clues=void 0;this.timeline=void 0;this.score=void 0;this.isActive=void 0;this.isGameOver=void 0;this.clues=clues;this.timeline=timeline;this.score=score;this.isActive=isActive;this.isGameOver=isGameOver;}// PRIVATE METHODS\n/** Remove last item of clue list and add it to timeline list.\n   * (Note: The timeline list will then shuffle itself in chronological\n   * order.)\n   */moveCurrentClueToTimeline(){let answer=this.clues.pop();answer.isClue=false;this.timeline.addFact(answer);return this;}copyWithNextClue(){let answer=this.clues.last().copyAsAnswer();let newTimeline=this.timeline.addAnswer(answer);let newClues=this.clues.dropLastCopy();let gameOver=newClues.isEmpty();return new Game({clues:newClues,timeline:newTimeline,score:this.score,isActive:this.isActive,isGameOver:gameOver});}// PUBLIC METHODS\n// Start the game with just a \"Now\" card in the timeline.\n// Since we have the image locally we don't need to sanitize the card.\nstatic startingGame(){let NowCard=new FactCard({isClue:false,fact:new Fact({date:new Date(),info:\"Now\",img:\"../img/hourglass.jpg\"}),color:Color.VIOLET});NowCard.markSafe();return new Game({clues:new TimelineDeck(),timeline:new TimelineDeck([NowCard]),score:0});}incrementScore(){++this.score;return this;}// Subtract one from score; don't go below zero\ndecrementScore(){this.score=Math.max(0,this.score-1);return this;}}","map":{"version":3,"names":["FactCard","Fact","TimelineDeck","default","Color","Game","constructor","clues","timeline","score","isActive","isGameOver","arguments","length","undefined","moveCurrentClueToTimeline","answer","pop","isClue","addFact","copyWithNextClue","last","copyAsAnswer","newTimeline","addAnswer","newClues","dropLastCopy","gameOver","isEmpty","startingGame","NowCard","fact","date","Date","info","img","color","VIOLET","markSafe","incrementScore","decrementScore","Math","max"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/Game.tsx"],"sourcesContent":["import FactCard from \"./FactCard\";\nimport Fact from \"./Fact\";\nimport TimelineDeck from \"./TimelineDeck\";\nimport { default as Color } from \"./RgbColorMix\";\n\ninterface GameInput {\n  clues: TimelineDeck;\n  timeline: TimelineDeck;\n  score: number;\n}\n\nexport default class Game {\n  clues: TimelineDeck;\n  timeline: TimelineDeck;\n  score: number;\n  isActive: boolean;\n  isGameOver: boolean;\n\n  constructor({ clues, timeline, score = 0, isActive = false, isGameOver = false }: GameInput = {}) {\n    this.clues = clues;\n    this.timeline = timeline;\n    this.score = score;\n    this.isActive = isActive;\n    this.isGameOver = isGameOver;\n  }\n  // PRIVATE METHODS\n  \n  /** Remove last item of clue list and add it to timeline list.\n   * (Note: The timeline list will then shuffle itself in chronological\n   * order.)\n   */\n  moveCurrentClueToTimeline(): Game {\n    let answer = this.clues.pop();\n    answer.isClue = false;\n    this.timeline.addFact(answer);\n    return this;\n  }\n\n  copyWithNextClue(): Game {\n    let answer = this.clues.last().copyAsAnswer();\n    let newTimeline = this.timeline.addAnswer(answer);\n    \n    let newClues = this.clues.dropLastCopy();\n    let gameOver = newClues.isEmpty();\n\n    return new Game({\n      clues: newClues,\n      timeline: newTimeline,\n      score: this.score,\n      isActive: this.isActive,\n      isGameOver: gameOver\n    });\n  }\n\n  // PUBLIC METHODS\n \n  // Start the game with just a \"Now\" card in the timeline.\n  // Since we have the image locally we don't need to sanitize the card.\n  static startingGame(): Game {\n    let NowCard = new FactCard({\n      isClue: false, \n      fact: new Fact({ \n        date: new Date(), \n        info: \"Now\", \n        img: \"../img/hourglass.jpg\"\n      }),\n      color: Color.VIOLET\n    });\n    NowCard.markSafe();\n\n    return new Game({\n      clues: new TimelineDeck(), \n      timeline: new TimelineDeck([NowCard]),\n      score: 0\n    });\n  }\n\n  incrementScore(): Game {\n    ++this.score;\n    return this;\n  }\n\n  // Subtract one from score; don't go below zero\n  decrementScore(): Game {\n    this.score  = Math.max(0, this.score - 1);\n    return this;\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}