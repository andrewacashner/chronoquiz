{"ast":null,"code":"import{useState,useContext,useEffect,useReducer}from\"react\";import{Navigate}from\"react-router-dom\";import debug from\"../lib/debug\";import BackendRequest from\"../classes/BackendRequest\";import Fact from\"../classes/Fact\";import Timeline from\"../classes/Timeline\";import AdminChooser from\"./AdminChooser\";import UploadForm from\"./UploadForm\";import UserContext from\"../store/UserContext\";import AdminContext from\"../store/AdminContext\";import{timelineReducer,defaultTimeline}from\"../reducers/timelineReducer\";import{factReducer,defaultFact}from\"../reducers/factReducer\";import{adminReducer,defaultAdminState}from\"../reducers/adminReducer\";import updateReducer from\"../reducers/updateReducer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function AdminPanel(){let userContext=useContext(UserContext);let authenticated=userContext.get.authenticated;let currentUser=userContext.get.currentUser;let userToken=userContext.get.userToken;// Current timeline on client side\nlet[timelineState,dispatchTimeline]=useReducer(timelineReducer,defaultTimeline);// Current new fact card\nlet[factState,dispatchFact]=useReducer(factReducer,defaultFact);// Set a single state field from form input\nconst updateTimeline=updateReducer(dispatchTimeline);const updateFact=updateReducer(dispatchFact);// MONITOR FOR UNSAVED CHANGES\n// (see adminReducer)\n//  - timelineID (number), initialTimeline (Timeline)\n//  - updateTimelineList, saveReady, refresh, adminState.hasUnsavedChanges (booleans)\nlet[adminState,dispatchAdmin]=useReducer(adminReducer,defaultAdminState);let adminContext={get:adminState,set:dispatchAdmin};// When a timeline is loaded or changed, record whether there are unsaved\n// changes (current timeline differs from initial timeline loaded)\nuseEffect(()=>{if(adminState.initialTimeline){debug(adminState.initialTimeline);}if(timelineState){debug(timelineState);}let status=timelineState&&adminState.initialTimeline&&!timelineState.equals(adminState.initialTimeline);dispatchAdmin({type:\"set\",payload:{hasUnsavedChanges:status}});},[timelineState,adminState.initialTimeline]);// GET LIST OF USER TIMELINES\n// LOAD A TIMELINE FROM BACKEND\n// Trigger: timelineID set when user selects timeline to load or create\n// Effects: \n//     - update timelineState, initialTimeline;\n//     - toggle: \n//         - updateTimelineList -> true, \n//         - refresh -> false, \n//         - adminState.hasUnsavedChanges -> false\nuseEffect(()=>{async function loadTimeline(user,id,token){debug(\"Loading timeline id \".concat(adminState.timelineID));let newTimeline=await Timeline.newFromBackend(id,token);if(newTimeline){dispatchTimeline({type:\"set\",payload:newTimeline});dispatchAdmin({type:\"set\",payload:{initialTimeline:newTimeline}});}}if(adminState.timelineID){if(!adminState.hasUnsavedChanges||window.confirm(\"Your quiz has unsaved changes. Do you want to discard the changes and reload the quiz?\")){if(adminState.timelineID===\"create\"){dispatchTimeline({type:\"reset\"});}else{loadTimeline(currentUser,adminState.timelineID,userToken);}dispatchAdmin({type:\"set\",payload:{refresh:false,hasUnsavedChanges:false}});}}},[adminState.timelineID,currentUser,userToken,adminState.refresh]);// TODO fix or silence warning about missing dependency,\n// adminState.hasUnsavedChanges\nfunction PageInstructions(){return/*#__PURE__*/_jsx(\"p\",{className:\"instructions\",children:\"Your data will not be saved until you click Save.\"});}function MetadataPanel(){let creator=timelineState.creator===\"\"?currentUser.username:timelineState.creator;return/*#__PURE__*/_jsxs(\"section\",{id:\"metadata\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Metadata\"}),/*#__PURE__*/_jsx(\"form\",{className:\"timelinePanel\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"formInputBlock\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formItem\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",onBlur:updateTimeline(\"title\"),defaultValue:timelineState.title})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formItem\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"description\",onBlur:updateTimeline(\"description\"),defaultValue:timelineState.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formItem\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"keywords\",children:\"Keywords (separated with semicolons)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"keywords\",onBlur:updateTimeline(\"keywords\",Timeline.parseKeywords),defaultValue:timelineState.keywordString})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formItem\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"creator\",children:\"Creator (for public display; default: your username)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"creator\",onBlur:updateTimeline(\"creator\"),defaultValue:creator})]})]})})]});}function CurrentFactsPanel(){function currentFact(item){function deleteFact(event){if(window.confirm(\"Are you sure you want to delete the current fact?\")){debug(\"Delete item (date \".concat(item.date.getFullYear(),\")\"));dispatchTimeline({type:\"removeFact\",payload:{fact:item}});}}function editFact(event){debug(\"Edit item (date \".concat(item.date.getFullYear(),\")\"));dispatchFact({type:\"set\",payload:item});dispatchTimeline({type:\"removeFact\",payload:{fact:item}});}return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"FactListControls\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:editFact,children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:deleteFact,children:\"Delete\"})]})}),/*#__PURE__*/_jsx(\"td\",{children:String(item.year)}),/*#__PURE__*/_jsx(\"td\",{children:item.info}),/*#__PURE__*/_jsx(\"td\",{children:item.img})]},crypto.randomUUID());}function TimelineInstructions(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"instructions\",children:\"Enter timeline events manually or upload the data using the forms below\"}),/*#__PURE__*/_jsx(UploadForm,{dispatch:dispatchTimeline})]});}return/*#__PURE__*/_jsxs(\"section\",{id:\"currentTimeline\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Current Timeline Events\"}),/*#__PURE__*/_jsx(TimelineInstructions,{}),/*#__PURE__*/_jsxs(\"table\",{className:\"timeline\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Controls\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Year\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Image URL\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:timelineState.facts.map(currentFact)})]})]});}function NewFactForm(){function newFact(event){if(factState.date&&factState.info){dispatchTimeline({type:\"addFact\",payload:{fact:factState}});debug(\"Added fact to timeline\");dispatchFact({type:\"reset\"});}}function CardPreview(_ref){let{fact:Fact}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",\"data-when\":factState.year,\"data-noselect\":\"noselect\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"date\",children:factState.year}),/*#__PURE__*/_jsx(\"img\",{alt:factState.img,src:factState.img}),/*#__PURE__*/_jsx(\"span\",{className:\"info\",children:factState.info})]});}return/*#__PURE__*/_jsxs(\"section\",{id:\"new\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add an Event\"}),/*#__PURE__*/_jsxs(\"form\",{id:\"addFactForm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formInputBlock\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formItem\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date\",children:\"Year\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"date\",max:defaultFact.year,onChange:updateFact(\"date\",Fact.dateFromYear),defaultValue:factState.year})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formItem\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"info\",children:\"Description of event\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"info\",onBlur:updateFact(\"info\"),defaultValue:factState.info})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formItem\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"img\",children:\"Complete URL of image (optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"url\",name:\"img\",onBlur:updateFact(\"img\"),defaultValue:factState.img})]})]}),/*#__PURE__*/_jsxs(\"section\",{id:\"preview\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Preview\"}),/*#__PURE__*/_jsx(CardPreview,{fact:factState})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",id:\"add\",onClick:newFact,children:\"Add\"})]})]});}function activeStyle(isActive){return isActive?\"active\":\"inactive\";}function SaveButton(){return/*#__PURE__*/_jsx(\"button\",{className:activeStyle(adminState.hasUnsavedChanges),id:\"save\",type:\"button\",onClick:saveTimeline,children:\"Save\"});}// Send current timeline state to backend to save\nfunction saveTimeline(event){let action=timelineState?\"Updated\":\"Created\";debug(\"\".concat(action,\" timeline with title '\").concat(timelineState.title,\"'\"));dispatchAdmin({type:\"set\",payload:{saveReady:true}});}useEffect(()=>{async function postTimeline(user,token,timeline){debug(timeline.facts);debug(timeline.json());let request=new BackendRequest({url:\"timeline-full/\",method:\"POST\",token:token,bodyObject:timeline.json()});let response=await request.fetch();if(response.ok){let json=await response.json();debug(json);}else{debug(\"Problem creating timeline: Server status \".concat(response.status,\", \").concat(response.statusText));}}if(adminState.saveReady){debug(\"Ready to post timeline\");debug(timelineState);postTimeline(currentUser,userToken,timelineState);dispatchAdmin({type:\"set\",payload:{updateTimelineList:true,saveReady:false,hasUnsavedChanges:false}});}},[adminState.saveReady,timelineState,currentUser,userToken]);function DeleteTimelineButton(){let[timelineToDelete,setTimelineToDelete]=useState(null);function deleteTimeline(){let msg=\"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\";if(window.confirm(msg)){debug(adminState.timelineID);setTimelineToDelete(adminState.timelineID);}}useEffect(()=>{async function requestDeletion(timelineID,token){let result=false;let request=new BackendRequest({url:\"timelines/\".concat(timelineID,\"/\"),method:\"DELETE\",token:token});let response=await request.fetch();if(response.ok){let json=await response.json();debug(json);dispatchAdmin({type:\"set\",payload:{updateTimelineList:true}});result=true;}else{debug(\"Could not delete timeline with id \".concat(timelineID,\": Server status \").concat(response.status,\", \").concat(response.statusText));result=false;}return result;}if(timelineToDelete!==null){debug(\"Deleting timeline with id \".concat(timelineToDelete));if(adminState.timelineID===\"create\"){dispatchTimeline({type:\"reset\"});}else{let deleted=requestDeletion(timelineToDelete,userToken);if(deleted){dispatchTimeline({type:\"reset\"});dispatchTimeline({type:\"set\",payload:{updateTimelineList:true}});}}setTimelineToDelete(null);}},[timelineToDelete]);let msg=adminState.timelineID===\"create\"?\"Reset Quiz\":\"Delete Quiz\";return/*#__PURE__*/_jsx(\"button\",{id:\"deleteTimeline\",type:\"button\",onClick:deleteTimeline,children:msg});}function DiscardChangesButton(){function discardChanges(event){dispatchAdmin({type:\"set\",payload:{refresh:true}});}return/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:activeStyle(adminState.hasUnsavedChanges),onClick:discardChanges,children:\"Discard Changes\"});}function Controls(){return/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(SaveButton,{}),/*#__PURE__*/_jsx(DiscardChangesButton,{}),/*#__PURE__*/_jsx(DeleteTimelineButton,{})]});}if(authenticated){return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Manage Your Quizzes\"}),/*#__PURE__*/_jsx(PageInstructions,{}),/*#__PURE__*/_jsxs(AdminContext.Provider,{value:adminContext,children:[/*#__PURE__*/_jsx(AdminChooser,{}),/*#__PURE__*/_jsx(MetadataPanel,{}),/*#__PURE__*/_jsx(CurrentFactsPanel,{}),/*#__PURE__*/_jsx(NewFactForm,{}),/*#__PURE__*/_jsx(Controls,{})]})]});}else{return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}}","map":{"version":3,"names":["useState","useContext","useEffect","useReducer","Navigate","debug","BackendRequest","Fact","Timeline","AdminChooser","UploadForm","UserContext","AdminContext","timelineReducer","defaultTimeline","factReducer","defaultFact","adminReducer","defaultAdminState","updateReducer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminPanel","userContext","authenticated","get","currentUser","userToken","timelineState","dispatchTimeline","factState","dispatchFact","updateTimeline","updateFact","adminState","dispatchAdmin","adminContext","set","initialTimeline","status","equals","type","payload","hasUnsavedChanges","loadTimeline","user","id","token","concat","timelineID","newTimeline","newFromBackend","window","confirm","refresh","PageInstructions","className","children","MetadataPanel","creator","username","htmlFor","name","onBlur","defaultValue","title","description","parseKeywords","keywordString","CurrentFactsPanel","currentFact","item","deleteFact","event","date","getFullYear","fact","editFact","onClick","String","year","info","img","crypto","randomUUID","TimelineInstructions","dispatch","facts","map","NewFactForm","newFact","CardPreview","_ref","alt","src","max","onChange","dateFromYear","activeStyle","isActive","SaveButton","saveTimeline","action","saveReady","postTimeline","timeline","json","request","url","method","bodyObject","response","fetch","ok","statusText","updateTimelineList","DeleteTimelineButton","timelineToDelete","setTimelineToDelete","deleteTimeline","msg","requestDeletion","result","deleted","DiscardChangesButton","discardChanges","Controls","Provider","value","to"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminPanel.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useReducer } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nimport debug from \"../lib/debug\";\n\nimport BackendRequest from \"../classes/BackendRequest\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport AdminChooser from \"./AdminChooser\";\nimport UploadForm from \"./UploadForm\";\n\nimport UserContext from \"../store/UserContext\";\nimport AdminContext from \"../store/AdminContext\";\n\nimport { timelineReducer, defaultTimeline } from \"../reducers/timelineReducer\";\nimport { factReducer, defaultFact } from \"../reducers/factReducer\";\nimport { adminReducer, defaultAdminState } from \"../reducers/adminReducer\";\nimport updateReducer from \"../reducers/updateReducer\";\n\nexport default function AdminPanel(): React.ReactElement {\n\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser   = userContext.get.currentUser;\n  let userToken     = userContext.get.userToken;\n\n  // Current timeline on client side\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, defaultTimeline);\n\n  // Current new fact card\n  let [factState, dispatchFact] = useReducer(factReducer, defaultFact);\n\n  // Set a single state field from form input\n  const updateTimeline = updateReducer(dispatchTimeline);\n  const updateFact = updateReducer(dispatchFact);\n\n  // MONITOR FOR UNSAVED CHANGES\n  // (see adminReducer)\n  //  - timelineID (number), initialTimeline (Timeline)\n  //  - updateTimelineList, saveReady, refresh, adminState.hasUnsavedChanges (booleans)\n  let [adminState, dispatchAdmin] = useReducer(adminReducer, defaultAdminState);\n\n  let adminContext = {\n    get: adminState,\n    set: dispatchAdmin\n  };\n  \n  // When a timeline is loaded or changed, record whether there are unsaved\n  // changes (current timeline differs from initial timeline loaded)\n  useEffect(() => {\n    if (adminState.initialTimeline) { debug(adminState.initialTimeline); }\n    if (timelineState) { debug(timelineState); }\n    \n    let status = (timelineState && adminState.initialTimeline\n                  && !timelineState.equals(adminState.initialTimeline));\n\n    dispatchAdmin({\n      type: \"set\",\n      payload: { hasUnsavedChanges: status }\n    });\n  }, [timelineState, adminState.initialTimeline]);\n\n\n  // GET LIST OF USER TIMELINES\n  // LOAD A TIMELINE FROM BACKEND\n  // Trigger: timelineID set when user selects timeline to load or create\n  // Effects: \n  //     - update timelineState, initialTimeline;\n  //     - toggle: \n  //         - updateTimelineList -> true, \n  //         - refresh -> false, \n  //         - adminState.hasUnsavedChanges -> false\n  useEffect(() => {\n    async function loadTimeline(user: User, id: number, token: string): void {\n      debug(`Loading timeline id ${adminState.timelineID}`);\n\n      let newTimeline = await Timeline.newFromBackend(id, token);\n      if (newTimeline) {\n        dispatchTimeline({ \n          type: \"set\", \n          payload: newTimeline \n        });\n        dispatchAdmin({ \n          type: \"set\", \n          payload: { initialTimeline: newTimeline }\n        });\n      } \n    }\n\n    if (adminState.timelineID) {\n      if (!adminState.hasUnsavedChanges \n            || window.confirm(\"Your quiz has unsaved changes. Do you want to discard the changes and reload the quiz?\")) {\n\n        if (adminState.timelineID === \"create\") {\n          dispatchTimeline({ type: \"reset\" });\n        } else {\n          loadTimeline(currentUser, adminState.timelineID, userToken);\n        }\n        dispatchAdmin({\n          type: \"set\",\n          payload: {\n            refresh: false,\n            hasUnsavedChanges: false\n          }\n        });\n      }\n    }\n  }, [adminState.timelineID, currentUser, userToken, adminState.refresh]);\n  // TODO fix or silence warning about missing dependency,\n  // adminState.hasUnsavedChanges\n\n  function PageInstructions(): React.ReactElement {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  function MetadataPanel(): React.ReactElement {\n    let creator = (timelineState.creator === \"\") \n                  ? currentUser.username \n                  : timelineState.creator;\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                onBlur={updateTimeline(\"title\")}\n                defaultValue={timelineState.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                onBlur={updateTimeline(\"description\")}\n                defaultValue={timelineState.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                onBlur={updateTimeline(\"keywords\", Timeline.parseKeywords)}\n                defaultValue={timelineState.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                onBlur={updateTimeline(\"creator\")}\n                defaultValue={creator}/>\n            </div>\n          </div>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel(): React.ReactElement {\n\n    function currentFact(item: Fact): React.ReactElement {\n\n      function deleteFact(event: React.MouseEvent<HTMLInputElement>): void {\n        if (window.confirm(\"Are you sure you want to delete the current fact?\")) {\n          debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({ \n            type: \"removeFact\",\n            payload: { fact: item }\n          });\n        }\n      }\n\n      function editFact(event: React.MouseEvent<HTMLInputElement>): void {\n        debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({ \n          type: \"removeFact\",\n          payload: { fact: item }\n        });\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td>\n            <div className=\"FactListControls\">\n              <button type=\"button\" onClick={editFact}>Edit</button>\n              <button type=\"button\" onClick={deleteFact}>Delete</button>\n            </div>\n          </td>\n          <td>{String(item.year)}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function TimelineInstructions(): React.ReactElement {\n      return(\n        <>\n          <p className=\"instructions\">Enter timeline events manually or upload the data using the forms below</p>\n          <UploadForm dispatch={dispatchTimeline} />\n        </>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <TimelineInstructions />\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timelineState.facts.map(currentFact) }\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n\n  function NewFactForm(): React.ReactElement {\n\n    function newFact(event: React.FormEvent<HTMLFormElement>) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: { fact: factState }\n        });\n        debug(\"Added fact to timeline\");\n        dispatchFact({ type: \"reset\" });\n      }\n    }\n    \n    function CardPreview({ fact: Fact }): React.ReactElement {\n      return(\n        <div className=\"card\" data-when={factState.year} data-noselect=\"noselect\">\n          <span className=\"date\">{factState.year}</span>\n          <img alt={factState.img} src={factState.img} />\n          <span className=\"info\">{factState.info}</span>\n        </div>\n      );\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={defaultFact.year}\n                onChange={updateFact(\"date\", Fact.dateFromYear)}\n                defaultValue={factState.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onBlur={updateFact(\"info\")}\n                defaultValue={factState.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onBlur={updateFact(\"img\")}\n                defaultValue={factState.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={factState} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function activeStyle(isActive: boolean): string {\n    return isActive ? \"active\" : \"inactive\";\n  }\n  \n  function SaveButton(): React.ReactElement {\n    return(\n      <button \n        className={activeStyle(adminState.hasUnsavedChanges)} \n        id=\"save\" \n        type=\"button\" \n        onClick={saveTimeline}>Save</button>\n    );\n  }\n\n  // Send current timeline state to backend to save\n  function saveTimeline(event: React.FormEvent<HTMLFormElement>): void {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    debug(`${action} timeline with title '${timelineState.title}'`);\n    dispatchAdmin({\n      type: \"set\",\n      payload: { saveReady: true }\n    });\n  }\n\n  useEffect(() => {\n    async function postTimeline(\n      user: User, \n      token: string, \n      timeline: Timeline\n    ): void {\n\n      debug(timeline.facts);\n      debug(timeline.json());\n\n      let request = new BackendRequest({\n        url: \"timeline-full/\",\n        method: \"POST\",\n        token: token,\n        bodyObject: timeline.json()\n      });\n\n      let response = await request.fetch();\n\n      if (response.ok) {\n        let json = await response.json();\n        debug(json);\n      } else {\n        debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (adminState.saveReady) {\n      debug(\"Ready to post timeline\");\n      debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      dispatchAdmin({ \n        type: \"set\", \n        payload: {\n          updateTimelineList: true,\n          saveReady: false,\n          hasUnsavedChanges: false\n        }\n      });\n    } \n  }, [adminState.saveReady, timelineState, currentUser, userToken]);\n  \n  function DeleteTimelineButton(): React.ReactElement {\n    let [timelineToDelete, setTimelineToDelete] = useState(null);\n\n    function deleteTimeline(): void {\n      let msg = \"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\"\n\n      if (window.confirm(msg)) {\n        debug(adminState.timelineID);\n        setTimelineToDelete(adminState.timelineID);\n      }\n    }\n\n    useEffect(() => {\n      async function requestDeletion(\n        timelineID: number, \n        token: string\n      ): boolean {\n        let result = false;\n        let request = new BackendRequest({\n          url: `timelines/${timelineID}/`,\n          method: \"DELETE\",\n          token: token\n        });\n\n        let response = await request.fetch();\n\n        if (response.ok) {\n          let json = await response.json();\n          debug(json);\n          dispatchAdmin({ \n            type: \"set\",\n            payload: { updateTimelineList: true } \n          });\n          result = true;\n        } else {\n          debug(`Could not delete timeline with id ${timelineID}: Server status ${response.status}, ${response.statusText}`);\n          result = false;\n        }\n        return result;\n      }\n\n      if (timelineToDelete !== null) {\n        debug(`Deleting timeline with id ${timelineToDelete}`);\n\n        if (adminState.timelineID === \"create\") {\n          dispatchTimeline({ type: \"reset\" });\n        } else {\n          let deleted = requestDeletion(timelineToDelete, userToken);\n          if (deleted) {\n            dispatchTimeline({ type: \"reset\" });\n            dispatchTimeline({ \n              type: \"set\", \n              payload: { updateTimelineList: true }\n            });\n          }\n        }\n\n        setTimelineToDelete(null);\n      }\n    }, [timelineToDelete]);\n\n    let msg = (adminState.timelineID === \"create\") \n              ? \"Reset Quiz\" : \"Delete Quiz\";\n\n    return(\n      <button id=\"deleteTimeline\" type=\"button\" onClick={deleteTimeline}>{ msg }</button>\n    );\n  }\n\n  function DiscardChangesButton(): React.ReactElement {\n    function discardChanges(event: React.MouseEvent<HTMLInputElement>): void {\n      dispatchAdmin({\n        type: \"set\",\n        payload: { refresh: true }\n      });\n    }\n\n    return(\n      <button \n        type=\"button\" \n        className={activeStyle(adminState.hasUnsavedChanges)} onClick={discardChanges}>Discard Changes</button>\n    );\n  }\n\n  function Controls(): React.ReactElement {\n    return(\n      <div className=\"controls\">\n        <SaveButton />\n        <DiscardChangesButton />\n        <DeleteTimelineButton />\n      </div>\n    );\n  }\n\n  if (authenticated) {\n    return(\n      <main>\n        <h1>Manage Your Quizzes</h1>\n        <PageInstructions />\n        <AdminContext.Provider value={ adminContext }>\n          <AdminChooser />\n          <MetadataPanel />\n          <CurrentFactsPanel />\n          <NewFactForm />\n          <Controls />\n        </AdminContext.Provider>\n      </main>\n    );\n  } else {\n    return(\n      <Navigate to=\"/login\" />\n      );\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}