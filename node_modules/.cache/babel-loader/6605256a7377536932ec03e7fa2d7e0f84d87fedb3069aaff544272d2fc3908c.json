{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminPanel.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect, useReducer } from \"react\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport UploadForm from \"./UploadForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultTimeline = new Timeline({\n  title: '',\n  description: '',\n  keyword: [],\n  creator: '',\n  facts: []\n});\nfunction timelineReducer(state, action) {\n  let obj = action.payload;\n  let newState = null;\n  switch (action.type) {\n    case \"set\":\n      newState = new Timeline({\n        ...state,\n        ...obj\n      });\n      break;\n    case \"reset\":\n      newState = defaultTimeline;\n      break;\n    case \"addFact\":\n      newState = state.addFact(obj.fact);\n      break;\n    case \"removeFact\":\n      newState = state.removeFact(obj.fact);\n      break;\n    case \"addFacts\":\n      obj.forEach(fact => newState = state.addFact(fact));\n      break;\n    default:\n      newState = state;\n  }\n  return newState;\n}\nconst defaultFact = new Fact({\n  date: new Date(),\n  info: \"Description\",\n  img: \"https://picsum.photos/200.jpg\"\n});\nfunction factReducer(state, action) {\n  let obj = action.payload;\n  let newState = null;\n  switch (action.type) {\n    case \"set\":\n      newState = new Fact({\n        ...state,\n        ...obj\n      });\n      break;\n    case \"reset\":\n      newState = defaultFact;\n      break;\n    default:\n      newState = state;\n  }\n  ;\n  return newState;\n}\nfunction updateReducer(dispatchFn) {\n  return function (field, setValueFn = null) {\n    return function (event) {\n      let value = event.target.value;\n      let newValue = setValueFn ? setValueFn(value) : value;\n      dispatchFn({\n        type: \"set\",\n        payload: {\n          [field]: newValue\n        }\n      });\n    };\n  };\n}\nexport default function AdminPanel() {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser = userContext.get.currentUser;\n  let userToken = userContext.get.userToken;\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, defaultTimeline);\n  let [factState, dispatchFact] = useReducer(factReducer, defaultFact);\n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n  let [saveReady, setSaveReady] = useState(false);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  let [timelineID, setTimelineID] = useState(null);\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      console.debug(`Loading timeline id ${timelineID}`);\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        var _json$creator;\n        let json = await response.json();\n        console.debug(json);\n        dispatchTimeline({\n          type: \"set\",\n          payload: {\n            id: json.id,\n            title: json.title,\n            description: json.description,\n            keywords: Timeline.parseKeywords(json.keywords),\n            creator: (_json$creator = json.creator) !== null && _json$creator !== void 0 ? _json$creator : currentUser.username,\n            facts: json.facts.map(f => Fact.newFromYear(f))\n          }\n        });\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({\n          type: \"reset\"\n        });\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken]);\n  function Chooser() {\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n  function MetadataPanel() {\n    var _timelineState$creato;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              onBlur: updateTimeline(\"title\"),\n              defaultValue: timelineState.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              onBlur: updateTimeline(\"description\"),\n              defaultValue: timelineState.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              onBlur: updateTimeline(\"keywords\", Timeline.parseKeywords),\n              defaultValue: timelineState.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              onBlur: updateTimeline(\"creator\"),\n              defaultValue: (_timelineState$creato = timelineState.creator) !== null && _timelineState$creato !== void 0 ? _timelineState$creato : currentUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    console.debug(timelineState);\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({\n            type: \"removeFact\",\n            payload: {\n              fact: item\n            }\n          });\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({\n          type: \"removeFact\",\n          payload: {\n            fact: item\n          }\n        });\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FactListControls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: editFact,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: deleteFact,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instructions\",\n          children: \"Enter timeline events manually or upload the data using the forms below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n          dispatch: dispatchTimeline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timelineState.facts.map(currentFact)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), timelineState.facts.length === 0 ? /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 46\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  }\n  function NewFactForm() {\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: {\n            fact: factState\n          }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({\n          type: \"reset\"\n        });\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": factState.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: factState.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: factState.img,\n          src: factState.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: factState.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this);\n    }\n    function dateFromYear(year) {\n      let date = new Date();\n      date.setFullYear(year);\n      return date;\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: defaultFact.year,\n              onChange: updateFact(\"date\", dateFromYear),\n              defaultValue: factState.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onBlur: updateFact(\"info\"),\n              defaultValue: factState.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              onBlur: updateFact(\"img\"),\n              defaultValue: factState.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: factState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this);\n  }\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n  function DeleteTimelineButton() {\n    // TODO real deletion \n    // let [timelineToDelete, setTimelineToDelete] = useState(null);\n\n    function deleteTimeline() {\n      if (window.confirm(\"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\")) {\n        //        console.debug(timelineID);\n        //        setTimelineToDelete(timelineID);\n        //        console.debug(timelineToDelete);\n        dispatchTimeline({\n          type: \"reset\"\n        });\n      }\n    }\n\n    //    useEffect(() => {\n    //      // TODO delete on server\n    //      if (timelineID !== \"create\") {\n    //        console.debug(`Deleting timeline with id ${timelineToDelete}`);\n    //        // setTimelineToDelete(null);\n    //      }\n    //    }, [timelineToDelete]);\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"deleteTimeline\",\n      type: \"button\",\n      onClick: deleteTimeline,\n      children: \"Delete Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this);\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n    }\n  }, [saveReady, timelineState, currentUser, userToken]);\n  function Controls() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTimelineButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Your Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"80wwmt/dBR4WP4oAMAd6CykEpZE=\");\n_c = AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["useState","useContext","useEffect","useReducer","User","Fact","Timeline","UserContext","UploadForm","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultTimeline","title","description","keyword","creator","facts","timelineReducer","state","action","obj","payload","newState","type","addFact","fact","removeFact","forEach","defaultFact","date","Date","info","img","factReducer","updateReducer","dispatchFn","field","setValueFn","event","value","target","newValue","AdminPanel","_s","userContext","authenticated","get","currentUser","userToken","timelineState","dispatchTimeline","factState","dispatchFact","updateFact","updateTimeline","saveReady","setSaveReady","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","preventDefault","data","FormData","id","console","debug","response","fetch","SERVER","method","headers","Headers","ok","_json$creator","json","keywords","parseKeywords","username","map","f","newFromYear","status","statusText","Chooser","timelineOption","timeline","onSubmit","htmlFor","name","defaultValue","MetadataPanel","_timelineState$creato","onBlur","keywordString","CurrentFactsPanel","currentFact","item","deleteFact","window","confirm","getFullYear","editFact","onClick","year","crypto","randomUUID","dispatch","length","NewFactForm","newFact","CardPreview","alt","src","dateFromYear","setFullYear","max","onChange","SaveButton","saveTimeline","DeleteTimelineButton","deleteTimeline","postTimeline","body","Controls","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminPanel.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useReducer } from \"react\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nimport UploadForm from \"./UploadForm\";\n\nconst defaultTimeline = new Timeline({\n  title: '',\n  description: '',\n  keyword: [],\n  creator: '',\n  facts: []\n});\n\nfunction timelineReducer(state, action) {\n  let obj = action.payload;\n\n  let newState = null;\n  \n  switch(action.type) {\n    case \"set\":\n      newState = new Timeline({ ...state, ...obj });\n    break;\n\n    case \"reset\":\n      newState = defaultTimeline;\n    break;\n\n    case \"addFact\":\n      newState = state.addFact(obj.fact);\n    break;\n\n    case \"removeFact\":\n      newState = state.removeFact(obj.fact);\n    break;\n\n    case \"addFacts\":\n      obj.forEach(fact => newState = state.addFact(fact));\n    break;\n\n    default:\n      newState = state; \n  }\n\n  return newState;\n}\n\n\nconst defaultFact = new Fact({\n  date: new Date(),\n  info: \"Description\", \n  img: \"https://picsum.photos/200.jpg\"\n});\n\nfunction factReducer(state, action) {\n  let obj = action.payload;\n  let newState = null;\n\n  switch(action.type) {\n    case \"set\":\n      newState = new Fact({ ...state, ...obj });\n    break;\n\n    case \"reset\":\n      newState = defaultFact;\n    break;\n\n    default:\n      newState = state;\n  };\n\n  return newState;\n}\n\nfunction updateReducer(dispatchFn: (obj: object) => obj) {\n  return function(\n    field: string, \n    setValueFn: (value: any) => any = null\n  ): void {\n    return function(event): void {\n      let value = event.target.value;\n      let newValue = setValueFn ? setValueFn(value) : value;\n      dispatchFn({\n        type: \"set\",\n        payload: { \n          [field]: newValue\n        }\n      });\n    };\n  }\n}\n\n\nexport default function AdminPanel() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser   = userContext.get.currentUser;\n  let userToken     = userContext.get.userToken;\n\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, defaultTimeline);\n  let [factState, dispatchFact] = useReducer(factReducer, defaultFact);\n  \n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n\n  let [saveReady, setSaveReady] = useState(false);\n  \n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n\n  let [timelineID, setTimelineID] = useState(null);\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      console.debug(`Loading timeline id ${timelineID}`);\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n\n        dispatchTimeline({\n          type: \"set\",\n          payload: {\n            id:           json.id,\n            title:        json.title,\n            description:  json.description,\n            keywords:     Timeline.parseKeywords(json.keywords),\n            creator:      json.creator ?? currentUser.username,\n            facts:        json.facts.map(f => Fact.newFromYear(f))\n          }\n        });\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({ type: \"reset\" });\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken]);\n\n\n  function Chooser() {\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\">\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">Load</button>\n      </form>\n    );\n  }\n\n  function MetadataPanel() {\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                onBlur={updateTimeline(\"title\")}\n                defaultValue={timelineState.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                onBlur={updateTimeline(\"description\")}\n                defaultValue={timelineState.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                onBlur={updateTimeline(\"keywords\", Timeline.parseKeywords)}\n                defaultValue={timelineState.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                onBlur={updateTimeline(\"creator\")}\n                defaultValue={timelineState.creator ?? currentUser.username}/>\n            </div>\n          </div>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n    console.debug(timelineState);\n\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({ \n            type: \"removeFact\",\n            payload: { fact: item }\n          });\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({ \n          type: \"removeFact\",\n          payload: { fact: item }\n        });\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td>\n            <div className=\"FactListControls\">\n              <button type=\"button\" onClick={editFact}>Edit</button>\n              <button type=\"button\" onClick={deleteFact}>Delete</button>\n            </div>\n          </td>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <>\n          <p className=\"instructions\">Enter timeline events manually or upload the data using the forms below</p>\n          <UploadForm dispatch={dispatchTimeline} />\n        </>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timelineState.facts.map(currentFact) }\n          </tbody>\n        </table>\n        { timelineState.facts.length === 0 ? <Instructions /> : null }\n      </section>\n    );\n  }\n\n  function NewFactForm() {\n\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: { fact: factState }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({ type: \"reset\" });\n      }\n    }\n    \n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={factState.year} data-noselect=\"noselect\">\n          <span className=\"date\">{factState.year}</span>\n          <img alt={factState.img} src={factState.img} />\n          <span className=\"info\">{factState.info}</span>\n        </div>\n      );\n    }\n\n\n    function dateFromYear(year: number): Date {\n      let date = new Date();\n      date.setFullYear(year);\n      return date\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={defaultFact.year}\n                onChange={updateFact(\"date\", dateFromYear)}\n                defaultValue={factState.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onBlur={updateFact(\"info\")}\n                defaultValue={factState.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onBlur={updateFact(\"img\")}\n                defaultValue={factState.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={factState} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function SaveButton() {\n    return(\n      <button id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n\n  function DeleteTimelineButton() {\n    // TODO real deletion \n    // let [timelineToDelete, setTimelineToDelete] = useState(null);\n\n    function deleteTimeline() {\n      if (window.confirm(\"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\")) {\n        //        console.debug(timelineID);\n        //        setTimelineToDelete(timelineID);\n        //        console.debug(timelineToDelete);\n        dispatchTimeline({ type: \"reset\" });\n      }\n    }\n\n    //    useEffect(() => {\n    //      // TODO delete on server\n    //      if (timelineID !== \"create\") {\n    //        console.debug(`Deleting timeline with id ${timelineToDelete}`);\n    //        // setTimelineToDelete(null);\n    //      }\n    //    }, [timelineToDelete]);\n\n    return(\n      <button id=\"deleteTimeline\" type=\"button\" onClick={deleteTimeline}>Delete Quiz</button>\n    );\n  }\n\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n    } \n  }, [saveReady, timelineState, currentUser, userToken]);\n\n\n  function Controls() {\n    return(\n      <div className=\"controls\">\n        <SaveButton />\n        <DeleteTimelineButton />\n      </div>\n    );\n  }\n  return(\n    <main>\n      <h1>Manage Your Quizzes</h1>\n      <Instructions />\n      <Chooser />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <Controls />\n    </main>\n  );\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAEnE,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,QAAQ,MAAM,qBAAqB;AAE1C,OAAOC,WAAW,MAAM,sBAAsB;AAE9C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,eAAe,GAAG,IAAIP,QAAQ,CAAC;EACnCQ,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,SAASC,eAAeA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACtC,IAAIC,GAAG,GAAGD,MAAM,CAACE,OAAO;EAExB,IAAIC,QAAQ,GAAG,IAAI;EAEnB,QAAOH,MAAM,CAACI,IAAI;IAChB,KAAK,KAAK;MACRD,QAAQ,GAAG,IAAIlB,QAAQ,CAAC;QAAE,GAAGc,KAAK;QAAE,GAAGE;MAAI,CAAC,CAAC;MAC/C;IAEA,KAAK,OAAO;MACVE,QAAQ,GAAGX,eAAe;MAC5B;IAEA,KAAK,SAAS;MACZW,QAAQ,GAAGJ,KAAK,CAACM,OAAO,CAACJ,GAAG,CAACK,IAAI,CAAC;MACpC;IAEA,KAAK,YAAY;MACfH,QAAQ,GAAGJ,KAAK,CAACQ,UAAU,CAACN,GAAG,CAACK,IAAI,CAAC;MACvC;IAEA,KAAK,UAAU;MACbL,GAAG,CAACO,OAAO,CAACF,IAAI,IAAIH,QAAQ,GAAGJ,KAAK,CAACM,OAAO,CAACC,IAAI,CAAC,CAAC;MACrD;IAEA;MACEH,QAAQ,GAAGJ,KAAK;EACpB;EAEA,OAAOI,QAAQ;AACjB;AAGA,MAAMM,WAAW,GAAG,IAAIzB,IAAI,CAAC;EAC3B0B,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;EAChBC,IAAI,EAAE,aAAa;EACnBC,GAAG,EAAE;AACP,CAAC,CAAC;AAEF,SAASC,WAAWA,CAACf,KAAK,EAAEC,MAAM,EAAE;EAClC,IAAIC,GAAG,GAAGD,MAAM,CAACE,OAAO;EACxB,IAAIC,QAAQ,GAAG,IAAI;EAEnB,QAAOH,MAAM,CAACI,IAAI;IAChB,KAAK,KAAK;MACRD,QAAQ,GAAG,IAAInB,IAAI,CAAC;QAAE,GAAGe,KAAK;QAAE,GAAGE;MAAI,CAAC,CAAC;MAC3C;IAEA,KAAK,OAAO;MACVE,QAAQ,GAAGM,WAAW;MACxB;IAEA;MACEN,QAAQ,GAAGJ,KAAK;EACpB;EAAC;EAED,OAAOI,QAAQ;AACjB;AAEA,SAASY,aAAaA,CAACC,UAAgC,EAAE;EACvD,OAAO,UACLC,KAAa,EACbC,UAA+B,GAAG,IAAI,EAChC;IACN,OAAO,UAASC,KAAK,EAAQ;MAC3B,IAAIC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;MAC9B,IAAIE,QAAQ,GAAGJ,UAAU,GAAGA,UAAU,CAACE,KAAK,CAAC,GAAGA,KAAK;MACrDJ,UAAU,CAAC;QACTZ,IAAI,EAAE,KAAK;QACXF,OAAO,EAAE;UACP,CAACe,KAAK,GAAGK;QACX;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC;AACH;AAGA,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,IAAIC,WAAW,GAAG7C,UAAU,CAACM,WAAW,CAAC;EACzC,IAAIwC,aAAa,GAAGD,WAAW,CAACE,GAAG,CAACD,aAAa;EACjD,IAAIE,WAAW,GAAKH,WAAW,CAACE,GAAG,CAACC,WAAW;EAC/C,IAAIC,SAAS,GAAOJ,WAAW,CAACE,GAAG,CAACE,SAAS;EAE7C,IAAI,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjD,UAAU,CAACgB,eAAe,EAAEN,eAAe,CAAC;EACpF,IAAI,CAACwC,SAAS,EAAEC,YAAY,CAAC,GAAGnD,UAAU,CAACgC,WAAW,EAAEL,WAAW,CAAC;EAEpE,MAAMyB,UAAU,GAAGnB,aAAa,CAACkB,YAAY,CAAC;EAC9C,MAAME,cAAc,GAAGpB,aAAa,CAACgB,gBAAgB,CAAC;EAEtD,IAAI,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EAE/C,SAAS2D,YAAYA,CAAA,EAAG;IACtB,oBACEjD,OAAA;MAAGkD,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAErF;EAEA,IAAI,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EAElDE,SAAS,CAAC,MAAM;IACd,eAAekE,gBAAgBA,CAACC,IAAI,EAAEC,KAAK,EAAE;MAC3C,IAAIC,IAAI,GAAG,MAAMF,IAAI,CAACG,oBAAoB,CAACF,KAAK,CAAC;MACjD,IAAIC,IAAI,EAAE;QACRJ,eAAe,CAACI,IAAI,CAAC;MACvB;IACF;IACA,IAAIxB,aAAa,EAAE;MACjBqB,gBAAgB,CAACnB,WAAW,EAAEC,SAAS,CAAC;IAC1C,CAAC,MAAM;MACLiB,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC,EAAE,CAACpB,aAAa,EAAEE,WAAW,EAAEC,SAAS,CAAC,CAAC;EAE3C,IAAI,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAG1E,QAAQ,CAAC,IAAI,CAAC;EAEhD,SAAS2E,YAAYA,CAACnC,KAAK,EAAE;IAC3BA,KAAK,CAACoC,cAAc,CAAC,CAAC;IACtB,IAAIC,IAAI,GAAG,IAAIC,QAAQ,CAACtC,KAAK,CAACE,MAAM,CAAC;IACrC,IAAIqC,EAAE,GAAGF,IAAI,CAAC7B,GAAG,CAAC,iBAAiB,CAAC;IACpC0B,aAAa,CAACK,EAAE,CAAC;EACnB;EAEA7E,SAAS,CAAC,MAAM;IACd,eAAeyE,YAAYA,CAACI,EAAE,EAAET,KAAK,EAAE;MACrCU,OAAO,CAACC,KAAK,CAAE,uBAAsBR,UAAW,EAAC,CAAC;MAClD,IAAIS,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE/E,IAAI,CAACgF,MAAO,kBAAiBL,EAAG,EAAC,EAAE;QAC/DM,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,IAAIC,OAAO,CAAC;UACnB,eAAe,EAAG,SAAQjB,KAAM;QAClC,CAAC;MACH,CAAC,CAAC;MAEF,IAAIY,QAAQ,CAACM,EAAE,EAAE;QAAA,IAAAC,aAAA;QACf,IAAIC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAChCV,OAAO,CAACC,KAAK,CAACS,IAAI,CAAC;QAEnBtC,gBAAgB,CAAC;UACf3B,IAAI,EAAE,KAAK;UACXF,OAAO,EAAE;YACPwD,EAAE,EAAYW,IAAI,CAACX,EAAE;YACrBjE,KAAK,EAAS4E,IAAI,CAAC5E,KAAK;YACxBC,WAAW,EAAG2E,IAAI,CAAC3E,WAAW;YAC9B4E,QAAQ,EAAMrF,QAAQ,CAACsF,aAAa,CAACF,IAAI,CAACC,QAAQ,CAAC;YACnD1E,OAAO,GAAAwE,aAAA,GAAOC,IAAI,CAACzE,OAAO,cAAAwE,aAAA,cAAAA,aAAA,GAAIxC,WAAW,CAAC4C,QAAQ;YAClD3E,KAAK,EAASwE,IAAI,CAACxE,KAAK,CAAC4E,GAAG,CAACC,CAAC,IAAI1F,IAAI,CAAC2F,WAAW,CAACD,CAAC,CAAC;UACvD;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLf,OAAO,CAACC,KAAK,CAAE,oCAAmCF,EAAG,mBAAkBG,QAAQ,CAACe,MAAO,KAAIf,QAAQ,CAACgB,UAAW,EAAC,CAAC;MACnH;IACF;IAEA,IAAIzB,UAAU,EAAE;MACd,IAAIA,UAAU,KAAK,QAAQ,EAAE;QAC3BrB,gBAAgB,CAAC;UAAE3B,IAAI,EAAE;QAAQ,CAAC,CAAC;MACrC,CAAC,MAAM;QACLkD,YAAY,CAACF,UAAU,EAAEvB,SAAS,CAAC;MACrC;IACF;EACF,CAAC,EAAE,CAACuB,UAAU,EAAExB,WAAW,CAAC4C,QAAQ,EAAE3C,SAAS,CAAC,CAAC;EAGjD,SAASiD,OAAOA,CAAA,EAAG;IACjB,SAASC,cAAcA,CAACC,QAAQ,EAAE;MAChC,oBACE3F,OAAA;QAA0B+B,KAAK,EAAE4D,QAAQ,CAACtB,EAAG;QAAAlB,QAAA,EAAEwC,QAAQ,CAACvF;MAAK,GAAhDuF,QAAQ,CAACtB,EAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8C,CAAC;IAE3E;IACA,oBACEvD,OAAA;MAAMqE,EAAE,EAAC,SAAS;MAACuB,QAAQ,EAAE3B,YAAa;MAAAd,QAAA,gBACxCnD,OAAA;QAAO6F,OAAO,EAAC,iBAAiB;QAAA1C,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3DvD,OAAA;QAAQ8F,IAAI,EAAC,iBAAiB;QAACC,YAAY,EAAC,QAAQ;QAAA5C,QAAA,gBAClDnD,OAAA;UAAQ+B,KAAK,EAAC,QAAQ;UAAAoB,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxCC,YAAY,CAAC4B,GAAG,CAACM,cAAc,CAAC;MAAA;QAAAtC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACTvD,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAAAoC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEX;EAEA,SAASyC,aAAaA,CAAA,EAAG;IAAA,IAAAC,qBAAA;IAEvB,oBACEjG,OAAA;MAASqE,EAAE,EAAC,UAAU;MAAAlB,QAAA,gBACpBnD,OAAA;QAAAmD,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBvD,OAAA;QAAMkD,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC7BnD,OAAA;UAAKkD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BnD,OAAA;YAAKkD,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBnD,OAAA;cAAO6F,OAAO,EAAC,OAAO;cAAA1C,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpCvD,OAAA;cAAOe,IAAI,EAAC,MAAM;cAAC+E,IAAI,EAAC,OAAO;cAC7BI,MAAM,EAAEpD,cAAc,CAAC,OAAO,CAAE;cAChCiD,YAAY,EAAEtD,aAAa,CAACrC;YAAM;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACNvD,OAAA;YAAKkD,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBnD,OAAA;cAAO6F,OAAO,EAAC,aAAa;cAAA1C,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChDvD,OAAA;cAAOe,IAAI,EAAC,MAAM;cAAC+E,IAAI,EAAC,aAAa;cACnCI,MAAM,EAAEpD,cAAc,CAAC,aAAa,CAAE;cACtCiD,YAAY,EAAEtD,aAAa,CAACpC;YAAY;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,eACNvD,OAAA;YAAKkD,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBnD,OAAA;cAAO6F,OAAO,EAAC,UAAU;cAAA1C,QAAA,EAAC;YAAoC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtEvD,OAAA;cAAOe,IAAI,EAAC,MAAM;cAAC+E,IAAI,EAAC,UAAU;cAChCI,MAAM,EAAEpD,cAAc,CAAC,UAAU,EAAElD,QAAQ,CAACsF,aAAa,CAAE;cAC3Da,YAAY,EAAEtD,aAAa,CAAC0D;YAAc;cAAA/C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACNvD,OAAA;YAAKkD,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBnD,OAAA;cAAO6F,OAAO,EAAC,SAAS;cAAA1C,QAAA,EAAC;YAAoD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrFvD,OAAA;cAAOe,IAAI,EAAC,MAAM;cAAC+E,IAAI,EAAC,SAAS;cAC/BI,MAAM,EAAEpD,cAAc,CAAC,SAAS,CAAE;cAClCiD,YAAY,GAAAE,qBAAA,GAAExD,aAAa,CAAClC,OAAO,cAAA0F,qBAAA,cAAAA,qBAAA,GAAI1D,WAAW,CAAC4C;YAAS;cAAA/B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEd;EAEA,SAAS6C,iBAAiBA,CAAA,EAAG;IAC3B9B,OAAO,CAACC,KAAK,CAAC9B,aAAa,CAAC;IAE5B,SAAS4D,WAAWA,CAACC,IAAI,EAAE;MACzB,SAASC,UAAUA,CAACzE,KAAK,EAAE;QACzB,IAAI0E,MAAM,CAACC,OAAO,CAAC,yIAAyI,CAAC,EAAE;UAC7JnC,OAAO,CAACC,KAAK,CAAE,qBAAoB+B,IAAI,CAACjF,IAAI,CAACqF,WAAW,CAAC,CAAE,GAAE,CAAC;UAC9DhE,gBAAgB,CAAC;YACf3B,IAAI,EAAE,YAAY;YAClBF,OAAO,EAAE;cAAEI,IAAI,EAAEqF;YAAK;UACxB,CAAC,CAAC;QACJ;MACF;MAEA,SAASK,QAAQA,CAAC7E,KAAK,EAAE;QACvBwC,OAAO,CAACC,KAAK,CAAE,mBAAkB+B,IAAI,CAACjF,IAAI,CAACqF,WAAW,CAAC,CAAE,GAAE,CAAC;QAC5D9D,YAAY,CAAC;UACX7B,IAAI,EAAE,KAAK;UACXF,OAAO,EAAEyF;QACX,CAAC,CAAC;QACF5D,gBAAgB,CAAC;UACf3B,IAAI,EAAE,YAAY;UAClBF,OAAO,EAAE;YAAEI,IAAI,EAAEqF;UAAK;QACxB,CAAC,CAAC;MACJ;MAEA,oBACEtG,OAAA;QAAAmD,QAAA,gBACEnD,OAAA;UAAAmD,QAAA,eACEnD,OAAA;YAAKkD,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BnD,OAAA;cAAQe,IAAI,EAAC,QAAQ;cAAC6F,OAAO,EAAED,QAAS;cAAAxD,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtDvD,OAAA;cAAQe,IAAI,EAAC,QAAQ;cAAC6F,OAAO,EAAEL,UAAW;cAAApD,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACLvD,OAAA;UAAAmD,QAAA,EAAKmD,IAAI,CAACO;QAAI;UAAAzD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBvD,OAAA;UAAAmD,QAAA,EAAKmD,IAAI,CAAC/E;QAAI;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBvD,OAAA;UAAAmD,QAAA,EAAKmD,IAAI,CAAC9E;QAAG;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GATZuD,MAAM,CAACC,UAAU,CAAC,CAAC;QAAA3D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUxB,CAAC;IAET;IAEA,SAASN,YAAYA,CAAA,EAAG;MACtB,oBACEjD,OAAA,CAAAE,SAAA;QAAAiD,QAAA,gBACEnD,OAAA;UAAGkD,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAuE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACvGvD,OAAA,CAACF,UAAU;UAACkH,QAAQ,EAAEtE;QAAiB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eAC1C,CAAC;IAEP;IAEA,oBACEvD,OAAA;MAASqE,EAAE,EAAC,iBAAiB;MAAAlB,QAAA,gBAC3BnD,OAAA;QAAAmD,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCvD,OAAA;QAAOkD,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACzBnD,OAAA;UAAAmD,QAAA,eACEnD,OAAA;YAAAmD,QAAA,gBACEnD,OAAA;cAAAmD,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBvD,OAAA;cAAAmD,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbvD,OAAA;cAAAmD,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBvD,OAAA;cAAAmD,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRvD,OAAA;UAAAmD,QAAA,EACIV,aAAa,CAACjC,KAAK,CAAC4E,GAAG,CAACiB,WAAW;QAAC;UAAAjD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACNd,aAAa,CAACjC,KAAK,CAACyG,MAAM,KAAK,CAAC,gBAAGjH,OAAA,CAACiD,YAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAG,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAEd;EAEA,SAAS2D,WAAWA,CAAA,EAAG;IAErB,SAASC,OAAOA,CAACrF,KAAK,EAAE;MACtB,IAAIa,SAAS,CAACtB,IAAI,IAAIsB,SAAS,CAACpB,IAAI,EAAE;QACpCmB,gBAAgB,CAAC;UACf3B,IAAI,EAAE,SAAS;UACfF,OAAO,EAAE;YAAEI,IAAI,EAAE0B;UAAU;QAC7B,CAAC,CAAC;QACF2B,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;QACvC3B,YAAY,CAAC;UAAE7B,IAAI,EAAE;QAAQ,CAAC,CAAC;MACjC;IACF;IAEA,SAASqG,WAAWA,CAAC;MAAEnG;IAAK,CAAC,EAAE;MAC7B,oBACEjB,OAAA;QAAKkD,SAAS,EAAC,MAAM;QAAC,aAAWP,SAAS,CAACkE,IAAK;QAAC,iBAAc,UAAU;QAAA1D,QAAA,gBACvEnD,OAAA;UAAMkD,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAER,SAAS,CAACkE;QAAI;UAAAzD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CvD,OAAA;UAAKqH,GAAG,EAAE1E,SAAS,CAACnB,GAAI;UAAC8F,GAAG,EAAE3E,SAAS,CAACnB;QAAI;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/CvD,OAAA;UAAMkD,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAER,SAAS,CAACpB;QAAI;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAEV;IAGA,SAASgE,YAAYA,CAACV,IAAY,EAAQ;MACxC,IAAIxF,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;MACrBD,IAAI,CAACmG,WAAW,CAACX,IAAI,CAAC;MACtB,OAAOxF,IAAI;IACb;IAEA,oBACErB,OAAA;MAASqE,EAAE,EAAC,KAAK;MAAAlB,QAAA,gBACfnD,OAAA;QAAAmD,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBvD,OAAA;QAAMqE,EAAE,EAAC,aAAa;QAAAlB,QAAA,gBACpBnD,OAAA;UAAKkD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BnD,OAAA;YAAKkD,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBnD,OAAA;cAAO6F,OAAO,EAAC,MAAM;cAAA1C,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAClCvD,OAAA;cACEe,IAAI,EAAC,QAAQ;cACb+E,IAAI,EAAC,MAAM;cACX2B,GAAG,EAAErG,WAAW,CAACyF,IAAK;cACtBa,QAAQ,EAAE7E,UAAU,CAAC,MAAM,EAAE0E,YAAY,CAAE;cAC3CxB,YAAY,EAAEpD,SAAS,CAACkE;YAAK;cAAAzD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eACNvD,OAAA;YAAKkD,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBnD,OAAA;cAAO6F,OAAO,EAAC,MAAM;cAAA1C,QAAA,EAAC;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAClDvD,OAAA;cACEe,IAAI,EAAC,MAAM;cACX+E,IAAI,EAAC,MAAM;cACXI,MAAM,EAAErD,UAAU,CAAC,MAAM,CAAE;cAC3BkD,YAAY,EAAEpD,SAAS,CAACpB;YAAK;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eACNvD,OAAA;YAAKkD,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBnD,OAAA;cAAO6F,OAAO,EAAC,KAAK;cAAA1C,QAAA,EAAC;YAAgC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7DvD,OAAA;cACEe,IAAI,EAAC,KAAK;cACV+E,IAAI,EAAC,KAAK;cACVI,MAAM,EAAErD,UAAU,CAAC,KAAK,CAAE;cAC1BkD,YAAY,EAAEpD,SAAS,CAACnB;YAAI;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNvD,OAAA;UAASqE,EAAE,EAAC,SAAS;UAAAlB,QAAA,gBACnBnD,OAAA;YAAAmD,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBvD,OAAA,CAACoH,WAAW;YAACnG,IAAI,EAAE0B;UAAU;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACVvD,OAAA;UAAQe,IAAI,EAAC,QAAQ;UAACsD,EAAE,EAAC,KAAK;UAACuC,OAAO,EAAEO,OAAQ;UAAAhE,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEd;EAEA,SAASoE,UAAUA,CAAA,EAAG;IACpB,oBACE3H,OAAA;MAAQqE,EAAE,EAAC,MAAM;MAACtD,IAAI,EAAC,QAAQ;MAAC6F,OAAO,EAAEgB,YAAa;MAAAzE,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAExE;;EAGA;EACA;EACA,SAASqE,YAAYA,CAAC9F,KAAK,EAAE;IAC3B,IAAInB,MAAM,GAAG8B,aAAa,GAAG,SAAS,GAAG,SAAS;IAClD6B,OAAO,CAACC,KAAK,CAAE,GAAE5D,MAAO,yBAAwB8B,aAAa,CAACrC,KAAM,GAAE,CAAC;IACvE4C,YAAY,CAAC,IAAI,CAAC;EACpB;EAEA,SAAS6E,oBAAoBA,CAAA,EAAG;IAC9B;IACA;;IAEA,SAASC,cAAcA,CAAA,EAAG;MACxB,IAAItB,MAAM,CAACC,OAAO,CAAC,8GAA8G,CAAC,EAAE;QAClI;QACA;QACA;QACA/D,gBAAgB,CAAC;UAAE3B,IAAI,EAAE;QAAQ,CAAC,CAAC;MACrC;IACF;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,oBACEf,OAAA;MAAQqE,EAAE,EAAC,gBAAgB;MAACtD,IAAI,EAAC,QAAQ;MAAC6F,OAAO,EAAEkB,cAAe;MAAA3E,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAE3F;EAEA/D,SAAS,CAAC,MAAM;IACd,eAAeuI,YAAYA,CAACpE,IAAI,EAAEC,KAAK,EAAE+B,QAAQ,EAAE;MACjDrB,OAAO,CAACC,KAAK,CAACoB,QAAQ,CAACnF,KAAK,CAAC;MAC7B8D,OAAO,CAACC,KAAK,CAACoB,QAAQ,CAACX,IAAI,CAAC,CAAC,CAAC;MAC9B,IAAIR,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE/E,IAAI,CAACgF,MAAO,iBAAgB,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,IAAIC,OAAO,CAAC;UACnB,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE,kBAAkB;UAC5B,eAAe,EAAG,SAAQjB,KAAM;QAClC,CAAC,CAAC;QACFoE,IAAI,EAAErC,QAAQ,CAACX,IAAI,CAAC;MACtB,CAAC,CAAC;MACF,IAAIR,QAAQ,CAACM,EAAE,EAAE;QACf,IAAIE,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAChCV,OAAO,CAACC,KAAK,CAACS,IAAI,CAAC;MACrB,CAAC,MAAM;QACLV,OAAO,CAACC,KAAK,CAAE,4CAA2CC,QAAQ,CAACe,MAAO,KAAIf,QAAQ,CAACgB,UAAW,EAAC,CAAC;MACtG;IACF;IACA,IAAIzC,SAAS,EAAE;MACbuB,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;MACvCD,OAAO,CAACC,KAAK,CAAC9B,aAAa,CAAC;MAC5BsF,YAAY,CAACxF,WAAW,EAAEC,SAAS,EAAEC,aAAa,CAAC;MACnDO,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACD,SAAS,EAAEN,aAAa,EAAEF,WAAW,EAAEC,SAAS,CAAC,CAAC;EAGtD,SAASyF,QAAQA,CAAA,EAAG;IAClB,oBACEjI,OAAA;MAAKkD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBnD,OAAA,CAAC2H,UAAU;QAAAvE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdvD,OAAA,CAAC6H,oBAAoB;QAAAzE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAEV;EACA,oBACEvD,OAAA;IAAAmD,QAAA,gBACEnD,OAAA;MAAAmD,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BvD,OAAA,CAACiD,YAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBvD,OAAA,CAACyF,OAAO;MAAArC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXvD,OAAA,CAACgG,aAAa;MAAA5C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBvD,OAAA,CAACoG,iBAAiB;MAAAhD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBvD,OAAA,CAACkH,WAAW;MAAA9D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfvD,OAAA,CAACiI,QAAQ;MAAA7E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACpB,EAAA,CAnXuBD,UAAU;AAAAgG,EAAA,GAAVhG,UAAU;AAAA,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}