{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _FactList;\nimport { default as Color } from \"./RgbColorMix\";\nvar _setColors = /*#__PURE__*/_classPrivateFieldLooseKey(\"setColors\");\nvar _shuffle = /*#__PURE__*/_classPrivateFieldLooseKey(\"shuffle\");\nexport default class FactList extends Array {\n  constructor(cards = []) {\n    super(...cards);\n    // Shuffle the array, using the Fisher-Yates/Knuth shuffle\n    // (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n    Object.defineProperty(this, _shuffle, {\n      value: _shuffle2\n    });\n    // PRIVATE METHODS\n    // Set the colors of the cards in this list, in chronological order, to\n    // evenly spaced intervals along the spectrum.\n    Object.defineProperty(this, _setColors, {\n      value: _setColors2\n    });\n  }\n  // PUBLIC METHODS\n\n  // Sort the array by the date field, ascending.\n  sortByDate() {\n    this.sort((c1, c2) => {\n      return c1.date - c2.date;\n    });\n    return this;\n  }\n  setupClues() {\n    _classPrivateFieldLooseBase(this, _setColors)[_setColors]();\n    _classPrivateFieldLooseBase(this, _shuffle)[_shuffle]();\n  }\n  isEmpty() {\n    return this.length === 0;\n  }\n  allButLastItems() {\n    return this.slice(0, -1);\n  }\n  last() {\n    return this.at(-1);\n  }\n  dropLast() {\n    this.pop();\n    return this;\n  }\n  prepend(item) {\n    this.unshift(item);\n    return this;\n  }\n\n  // Add event to array and then resort by date.\n  addFact(card) {\n    this.push(card);\n    this.sortByDate();\n  }\n  resetMargins() {\n    this.forEach(c => c.expand = false);\n    return this;\n  }\n  addAnswer(answer) {\n    return this.prepend(answer).sortByDate().resetMargins();\n  }\n}\n_FactList = FactList;\nfunction _setColors2() {\n  this.sortByDate();\n  this.forEach((card, index) => {\n    this[index].color = Color.colorAtIndex(index, this.length, Color.SPECTRUM);\n  });\n  return this;\n}\nfunction _shuffle2() {\n  function randomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  for (let i = this.length - 1; i > 0; --i) {\n    let j = randomInt(i);\n    [this[i], this[j]] = [this[j], this[i]];\n  }\n  return this;\n}","map":{"version":3,"names":["default","Color","_setColors","_classPrivateFieldLooseKey","_shuffle","FactList","Array","constructor","cards","Object","defineProperty","value","_shuffle2","_setColors2","sortByDate","sort","c1","c2","date","setupClues","_classPrivateFieldLooseBase","isEmpty","length","allButLastItems","slice","last","at","dropLast","pop","prepend","item","unshift","addFact","card","push","resetMargins","forEach","c","expand","addAnswer","answer","_FactList","index","color","colorAtIndex","SPECTRUM","randomInt","max","Math","floor","random","i","j"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/FactList.tsx"],"sourcesContent":["import Card from \"./Card\";\nimport { default as Color } from \"./RgbColorMix\";\n\nexport default class FactList extends Array {\n\n  constructor(cards: Array<Card> = []) {\n    super(...cards);\n  }\n\n  // PRIVATE METHODS\n  \n  // Set the colors of the cards in this list, in chronological order, to\n  // evenly spaced intervals along the spectrum.\n  #setColors(): FactList {\n    this.sortByDate();\n\n    this.forEach((card, index) => {\n      this[index].color = Color.colorAtIndex(index, this.length, \n                                              Color.SPECTRUM);\n    });\n\n    return this;\n  } \n\n  // Shuffle the array, using the Fisher-Yates/Knuth shuffle\n  // (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n  #shuffle(): FactList {\n    \n    function randomInt(max: number): number {\n      return Math.floor(Math.random() * max);\n    } \n\n    for (let i = this.length - 1; i > 0; --i) {\n      let j = randomInt(i);\n      [this[i], this[j]] = [this[j], this[i]];\n    }\n\n    return this;\n  }\n\n  // PUBLIC METHODS\n\n  // Sort the array by the date field, ascending.\n  sortByDate(): FactList {\n    this.sort((c1, c2) => { return c1.date - c2.date });\n    return this;\n  }\n\n  setupClues() {\n    this.#setColors();\n    this.#shuffle();\n  }\n\n  isEmpty(): boolean {\n    return this.length === 0;\n  }\n\n  allButLastItems(): Array<Card> {\n    return this.slice(0, -1);\n  }\n\n  last(): Card {\n    return this.at(-1);\n  }\n\n  dropLast(): FactList {\n    this.pop();\n    return this;\n  }\n\n  prepend(item): FactList {\n    this.unshift(item);\n    return this;\n  }\n  \n  // Add event to array and then resort by date.\n  addFact(card) {\n    this.push(card);\n    this.sortByDate();\n  }\n\n  resetMargins(): FactList {\n    this.forEach(c => c.expand = false);\n    return this;\n  }\n\n  addAnswer(answer): FactList {\n    return this.prepend(answer).sortByDate().resetMargins();\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}