{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/UploadForm.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadForm({\n  dispatch\n}) {\n  _s();\n  let userContext = useContext(UserContext);\n  let userToken = userContext.get.userToken;\n  let [uploadFile, setUploadFile] = useState({\n    title: \"\",\n    file: null\n  });\n  function handleUpload(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let title = data.get(\"title\");\n    let upload = data.get(\"upload\");\n    let infile = upload.files[0];\n    setUploadFile({\n      title: title,\n      file: infile\n    });\n  }\n  useEffect(() => {\n    // TODO remove duplication (this may not be needed when reading from\n    // server)\n    function isInputValid(json) {\n      return Array.isArray(json) && json.length > 0 && json.every(i => \"date\" in i && \"info\" in i);\n    }\n    async function loadUserTimeline(token, file) {\n      let text = await file.text();\n      let json = JSON.parse(text);\n      if (isInputValid(json)) {\n        console.debug(\"Valid input\");\n        let timeline = new Timeline(json);\n        dispatch({\n          type: \"set\",\n          payload: timeline\n        });\n      } else {\n        console.debug(\"Invalid input\");\n      }\n    }\n    if (uploadFile.file) {\n      loadUserTimeline(userToken, uploadFile.file);\n    }\n  }, [uploadFile]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload a New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upload a quiz in JSON format (see \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/about\",\n        children: \"instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 44\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"upload-form\",\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"upload\",\n        accept: \".json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"jpg7lz0J6Vxv84EGmBa++oP9jxY=\");\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["useContext","useState","useEffect","Link","UserContext","jsxDEV","_jsxDEV","UploadForm","dispatch","_s","userContext","userToken","get","uploadFile","setUploadFile","title","file","handleUpload","event","preventDefault","data","FormData","target","upload","infile","files","isInputValid","json","Array","isArray","length","every","i","loadUserTimeline","token","text","JSON","parse","console","debug","timeline","Timeline","type","payload","id","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","name","accept","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/UploadForm.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport UserContext from \"../store/UserContext\";\n\nexport default function UploadForm({ dispatch }) {\n  let userContext = useContext(UserContext);\n  let userToken = userContext.get.userToken;\n\n  let [uploadFile, setUploadFile] = useState({ title: \"\", file: null });\n\n  function handleUpload(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let title = data.get(\"title\");\n    let upload = data.get(\"upload\");\n    let infile = upload.files[0];\n    setUploadFile({ title: title, file: infile });\n  }\n\n  useEffect(() => {\n    // TODO remove duplication (this may not be needed when reading from\n    // server)\n    function isInputValid(json) {\n      return Array.isArray(json) && \n        json.length > 0 &&\n        json.every(i => (\"date\" in i) && (\"info\" in i));\n    }\n\n    async function loadUserTimeline(token, file) {\n      let text = await file.text();\n      let json = JSON.parse(text);\n\n      if (isInputValid(json)) {\n        console.debug(\"Valid input\");\n        let timeline = new Timeline(json);\n        dispatch({\n          type: \"set\",\n          payload: timeline\n        });\n      } else {\n        console.debug(\"Invalid input\");\n      }\n    }\n\n    if (uploadFile.file) {\n      loadUserTimeline(userToken, uploadFile.file);\n    }\n  }, [uploadFile]);\n\n  return(\n    <section id=\"upload\">\n      <h2>Upload a New Quiz</h2>\n      <p>Upload a quiz in JSON format (see <Link to=\"/about\">instructions</Link>)</p>\n\n      <form id=\"upload-form\" onSubmit={handleUpload}>\n        <input type=\"file\" name=\"upload\" accept=\".json\" />\n        <button type=\"submit\">Upload</button>\n      </form>\n    </section>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}