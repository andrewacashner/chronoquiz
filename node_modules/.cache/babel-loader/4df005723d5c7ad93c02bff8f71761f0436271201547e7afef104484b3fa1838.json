{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminChooser.tsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Menu to choose which timeline to load (or create new)\nexport default function AdminChooser() {\n  _s();\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n  function timelineOption(timeline) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: timeline.id,\n      children: timeline.title\n    }, timeline.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  }\n\n  // Change display of submit button whether creating or loading\n  let [selection, setSelection] = useState(\"create\");\n  function updateSelection(event) {\n    setSelection(event.target.value);\n  }\n  let loadButtonText = selection === \"create\" ? \"Create\" : \"Load\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"chooser\",\n    onSubmit: loadTimeline,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"select-timeline\",\n      children: \"Select a Timeline:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"select-timeline\",\n      defaultValue: \"create\",\n      onChange: updateSelection,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"create\",\n        children: \"Create New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), timelineList.map(timelineOption)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: loadButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_s(AdminChooser, \"wOynFYa80dq3aHLlPdtTl1U14Kw=\");\n_c = AdminChooser;\nvar _c;\n$RefreshReg$(_c, \"AdminChooser\");","map":{"version":3,"names":["AdminChooser","_s","loadTimeline","event","preventDefault","data","FormData","target","id","get","setTimelineID","timelineOption","timeline","_jsxDEV","value","children","title","fileName","_jsxFileName","lineNumber","columnNumber","selection","setSelection","useState","updateSelection","loadButtonText","onSubmit","htmlFor","name","defaultValue","onChange","timelineList","map","type","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminChooser.tsx"],"sourcesContent":["// Menu to choose which timeline to load (or create new)\nexport default function AdminChooser(): React.ReactElement {\n    function loadTimeline(event: React.FormEvent<HTMLFormElement>): void {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      let id = data.get(\"select-timeline\");\n      setTimelineID(id);\n    }\n\n    function timelineOption(timeline: Timeline): React.ReactElement {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n\n    // Change display of submit button whether creating or loading\n    let [selection, setSelection] = useState(\"create\");\n\n    function updateSelection(event: React.FormEvent<HTMLFormElement>): void {\n      setSelection(event.target.value);\n    }\n\n    let loadButtonText = (selection === \"create\") ? \"Create\" : \"Load\";\n\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" \n          defaultValue=\"create\" \n          onChange={updateSelection}>\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">{ loadButtonText }</button>\n      </form>\n    );\n  }\n\n\n"],"mappings":";;;AAAA;AACA,eAAe,SAASA,YAAYA,CAAA,EAAuB;EAAAC,EAAA;EACvD,SAASC,YAAYA,CAACC,KAAuC,EAAQ;IACnEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIC,IAAI,GAAG,IAAIC,QAAQ,CAACH,KAAK,CAACI,MAAM,CAAC;IACrC,IAAIC,EAAE,GAAGH,IAAI,CAACI,GAAG,CAAC,iBAAiB,CAAC;IACpCC,aAAa,CAACF,EAAE,CAAC;EACnB;EAEA,SAASG,cAAcA,CAACC,QAAkB,EAAsB;IAC9D,oBACEC,OAAA;MAA0BC,KAAK,EAAEF,QAAQ,CAACJ,EAAG;MAAAO,QAAA,EAAEH,QAAQ,CAACI;IAAK,GAAhDJ,QAAQ,CAACJ,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8C,CAAC;EAE3E;;EAEA;EACA,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,QAAQ,CAAC;EAElD,SAASC,eAAeA,CAACrB,KAAuC,EAAQ;IACtEmB,YAAY,CAACnB,KAAK,CAACI,MAAM,CAACO,KAAK,CAAC;EAClC;EAEA,IAAIW,cAAc,GAAIJ,SAAS,KAAK,QAAQ,GAAI,QAAQ,GAAG,MAAM;EAEjE,oBACER,OAAA;IAAML,EAAE,EAAC,SAAS;IAACkB,QAAQ,EAAExB,YAAa;IAAAa,QAAA,gBACxCF,OAAA;MAAOc,OAAO,EAAC,iBAAiB;MAAAZ,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3DP,OAAA;MAAQe,IAAI,EAAC,iBAAiB;MAC5BC,YAAY,EAAC,QAAQ;MACrBC,QAAQ,EAAEN,eAAgB;MAAAT,QAAA,gBAC1BF,OAAA;QAAQC,KAAK,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxCW,YAAY,CAACC,GAAG,CAACrB,cAAc,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACTP,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAlB,QAAA,EAAGU;IAAc;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEX;AAACnB,EAAA,CAnCqBD,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}