{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n  const defaultMetadata = useCallback(() => {\n    return {\n      title: '',\n      description: '',\n      keywordString: [],\n      creator: currentUser.username\n    };\n  }, [currentUser.username]);\n  let [metadata, setMetadata] = useState(defaultMetadata);\n  let [facts, setFacts] = useState([]);\n  const startingTimeline = useCallback(() => {\n    return new Timeline({\n      ...defaultMetadata\n    });\n  }, [defaultMetadata]);\n  let [timeline, setTimeline] = useState(startingTimeline());\n  console.debug(timeline);\n  let [saveReady, setSaveReady] = useState(false);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  // TODO update when new timeline created\n\n  let [timelineID, setTimelineID] = useState(null);\n  // TODO replace with field of timeline?\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        var _Timeline$creator;\n        let json = await response.json();\n        console.debug(json);\n        setMetadata({\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: (_Timeline$creator = Timeline.creator) !== null && _Timeline$creator !== void 0 ? _Timeline$creator : currentUser.username\n        });\n        setFacts(json.facts.map(f => Fact.newFromYear(f)));\n        setTimeline(new Timeline({\n          ...metadata,\n          facts: facts\n        }));\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        setTimeline(startingTimeline());\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, startingTimeline, userToken]);\n  function Chooser() {\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n  function MetadataPanel() {\n    function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      setMetadata({\n        title: data.get(\"title\"),\n        description: data.get(\"description\"),\n        keywordString: data.get(\"keywords\"),\n        creator: data.get(\"creator\")\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(metadata);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        onSubmit: updateMetadata,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              defaultValue: metadata.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              defaultValue: metadata.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              defaultValue: metadata.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              defaultValue: metadata.creator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Metadata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          setTimeline(prev => prev.removeFact(item));\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        setTestCard(item);\n        setTimeline(prev => prev.removeFact(item));\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: editFact,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: deleteFact,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Enter timeline events using the form below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timeline && facts.length > 0 ? facts.map(currentFact) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), timeline ? null : /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  }\n  const startingCard = () => new Fact({\n    date: new Date(),\n    info: \"Description\",\n    img: \"https://picsum.photos/200.jpg\"\n  });\n  let [testCard, setTestCard] = useState(startingCard());\n  function NewFactForm() {\n    function setTimelineFacts(facts) {\n      let newTimeline = new Timeline({\n        ...timeline,\n        facts: Fact.sortByDate(facts)\n      });\n      setTimeline(newTimeline);\n    }\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        setTimelineFacts(prev => Fact.append(prev, testCard));\n        console.debug(\"Added fact to timeline\");\n        setTestCard(startingCard());\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": fact.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: fact.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: fact.img,\n          src: fact.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: fact.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this);\n    }\n    function setDate(event) {\n      let newDate = new Date();\n      newDate.setFullYear(Number(event.target.value));\n      setTestCard(prev => new Fact({\n        ...prev,\n        date: newDate\n      }));\n    }\n    function setInfo(event) {\n      let newInfo = event.target.value;\n      setTestCard(prev => new Fact({\n        ...prev,\n        info: newInfo\n      }));\n    }\n    function setImg(event) {\n      let newImg = event.target.value;\n      setTestCard(prev => new Fact({\n        ...prev,\n        img: newImg\n      }));\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: startingCard().year,\n              onChange: setDate,\n              defaultValue: testCard.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onChange: setInfo,\n              defaultValue: testCard.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              onChange: setImg,\n              defaultValue: testCard.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: testCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  }\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timeline.title}'`);\n    //    setTimelineMetadata(metadata);\n    setSaveReady(true);\n  }\n  function ResetButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset\",\n      type: \"button\",\n      onClick: resetTimeline,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTimeline(startingTimeline());\n    }\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      setTimeline(new Timeline({\n        ...metadata,\n        facts: facts\n      }));\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    }\n  }, [saveReady, metadata, facts, currentUser, userToken]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Chronoquiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"wu7gu6iAeCKQU/sY8E1fN+ug9ZQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useContext","useEffect","useCallback","useNavigate","User","Fact","Timeline","UserContext","jsxDEV","_jsxDEV","Create","_s","userContext","authenticated","get","currentUser","userToken","navigate","defaultMetadata","title","description","keywordString","creator","username","metadata","setMetadata","facts","setFacts","startingTimeline","timeline","setTimeline","console","debug","saveReady","setSaveReady","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","event","preventDefault","data","FormData","target","id","response","fetch","SERVER","method","headers","Headers","ok","_Timeline$creator","json","keywords","parseKeywords","map","f","newFromYear","status","statusText","Chooser","timelineOption","value","onSubmit","for","name","defaultValue","type","MetadataPanel","updateMetadata","log","htmlFor","CurrentFactsPanel","currentFact","item","deleteFact","window","confirm","date","getFullYear","prev","removeFact","editFact","setTestCard","onClick","year","info","img","crypto","randomUUID","length","startingCard","Date","testCard","NewFactForm","setTimelineFacts","newTimeline","sortByDate","newFact","append","CardPreview","fact","alt","src","setDate","newDate","setFullYear","Number","setInfo","newInfo","setImg","newImg","max","onChange","SaveButton","saveTimeline","action","ResetButton","resetTimeline","postTimeline","body","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nexport default function Create() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n\n  const defaultMetadata = useCallback(() => {\n    return {\n      title: '',\n      description: '',\n      keywordString: [],\n      creator: currentUser.username\n    }\n  }, [currentUser.username]);\n\n  let [metadata, setMetadata] = useState(defaultMetadata);\n\n  let [facts, setFacts] = useState([]);\n\n  const startingTimeline = useCallback(() => {\n    return new Timeline({ ...defaultMetadata });\n  }, [defaultMetadata]);\n\n  let [timeline, setTimeline] = useState(startingTimeline());\n  console.debug(timeline);\n\n  let [saveReady, setSaveReady] = useState(false);\n  \n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  // TODO update when new timeline created\n\n  let [timelineID, setTimelineID] = useState(null);\n  // TODO replace with field of timeline?\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n        setMetadata({\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: Timeline.creator ?? currentUser.username,\n        });\n        setFacts(json.facts.map(f => Fact.newFromYear(f)));\n        setTimeline(new Timeline({ ...metadata, facts: facts }));\n\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        setTimeline(startingTimeline());\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, startingTimeline, userToken]);\n\n\n  function Chooser() {\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label for=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\">\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n\n  function MetadataPanel() {\n        function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      setMetadata({\n        title: data.get(\"title\"),\n        description: data.get(\"description\"),\n        keywordString: data.get(\"keywords\"),\n        creator: data.get(\"creator\")\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(metadata);\n    }\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\" onSubmit={updateMetadata}>\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                defaultValue={metadata.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                defaultValue={metadata.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                defaultValue={metadata.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                defaultValue={metadata.creator}/>\n            </div>\n          </div>\n          <button type=\"submit\">Update Metadata</button>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n\n    function currentFact(item) {\n\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          setTimeline(prev => prev.removeFact(item));\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        setTestCard(item);\n        setTimeline(prev => prev.removeFact(item));\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td><button type=\"button\" onClick={editFact}>Edit</button>\n            <button type=\"button\" onClick={deleteFact}>Delete</button></td>\n          <td>{item.id}</td>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <p className=\"instructions\">Enter timeline events using the form below</p>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>ID</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timeline && facts.length > 0 ? facts.map(currentFact) : null }\n          </tbody>\n        </table>\n        { timeline ? null : <Instructions /> }\n      </section>\n    );\n  }\n\n  const startingCard = () => new Fact({\n    date: new Date(),\n    info: \"Description\", \n    img: \"https://picsum.photos/200.jpg\"\n  });\n\n  let [testCard, setTestCard] = useState(startingCard());\n\n  function NewFactForm() {\n\n    function setTimelineFacts(facts: Array<Fact>) {\n      let newTimeline = new Timeline({\n        ...timeline,\n        facts: Fact.sortByDate(facts)\n      });\n      setTimeline(newTimeline);\n    }\n\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        setTimelineFacts(prev => Fact.append(prev, testCard));\n        console.debug(\"Added fact to timeline\");\n        setTestCard(startingCard());\n      }\n    }\n\n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={fact.year} data-noselect=\"noselect\">\n          <span className=\"date\">{fact.year}</span>\n          <img alt={fact.img} src={fact.img} />\n          <span className=\"info\">{fact.info}</span>\n        </div>\n      );\n    }\n\n    function setDate(event) {\n      let newDate = new Date();\n      newDate.setFullYear(Number(event.target.value));\n      setTestCard(prev => new Fact({ ...prev, date: newDate }));\n    }\n\n    function setInfo(event) {\n      let newInfo = event.target.value;\n      setTestCard(prev => new Fact({ ...prev, info: newInfo }));\n    }\n\n    function setImg(event) {\n      let newImg = event.target.value;\n      setTestCard(prev => new Fact({ ...prev, img: newImg }));\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={startingCard().year}\n                onChange={setDate}\n                defaultValue={testCard.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onChange={setInfo}\n                defaultValue={testCard.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onChange={setImg}\n                defaultValue={testCard.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={testCard} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function SaveButton() {\n    return(\n      <button id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timeline.title}'`);\n    //    setTimelineMetadata(metadata);\n    setSaveReady(true);\n  }\n\n  function ResetButton() {\n    return(\n      <button id=\"reset\" type=\"button\" onClick={resetTimeline}>Reset</button>\n    );\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTimeline(startingTimeline());\n    }\n  }\n\n   \n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      setTimeline(new Timeline({ ...metadata, facts: facts }));\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    } \n  }, [saveReady, metadata, facts, currentUser, userToken]);\n\n\n  return(\n    <main>\n      <h1>Create a Chronoquiz</h1>\n      <Instructions />\n      <Chooser />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <SaveButton />\n      <ResetButton />\n    </main>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}