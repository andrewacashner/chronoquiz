{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n// import TimelineContext from \"../store/TimelineContext\";\n// import useTimelineSelection from \"../hooks/useTimelineSelection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputForm() {\n  _s();\n  //  let context = useContext(TimelineContext);\n  // let setGame = context.set;\n\n  //  // TODO doesn't work (infinite loop of re-renders)\n  //  let loadTimeline = useTimelineSelection(null, setGame);\n  //  useEffect(() => loadTimeline());\n  //\n  //  function setupTimeline(event: React.FormEvent<HTMLFormElement>): void {\n  //    loadTimeline(event, setGame);\n  //  }\n\n  let [url, setUrl] = useState(\"../input/raccoon.json\");\n  function getUrl(event) {\n    let files = event.target.fileInput.files;\n    let source = event.target.source.value;\n    if (source) {\n      if (files.length > 0) {\n        setUrl(URL.createObjectURL(files[0]));\n      } else {\n        setUrl(`../input/${source}.json`);\n      }\n    }\n  }\n\n  //  let [json, setJson] = useState(\"{ 'status': 'placeholder' }\");\n  //\n  useEffect(() => {\n    console.log(`Loading file '${url}'`);\n    //    fetch(url)\n    //    .then(data => data.json())\n    //    .then(result => setJson(result))\n    //    .catch(console.error)\n  }, [url]);\n  let json = \"{ 'json': 'empty' }\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"inputForm\",\n      onSubmit: getUrl,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source\",\n        children: \"Choose a timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"source\",\n        id: \"source\",\n        required: true,\n        defaultValue: \"music\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"music\",\n          children: \"Music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"wars\",\n          children: \"Wars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"upload\",\n          children: \"Upload a custom timeline...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file\",\n        className: \"hide\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: [\"Upload JSON timeline file (\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"about.html\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 63\n          }, this), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \".json\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"playbutton\",\n        children: \"Play!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: json\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(InputForm, \"qRjVenM2zwloKtuC+CwPoWKxEtA=\");\n_c = InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","InputForm","_s","url","setUrl","getUrl","event","files","target","fileInput","source","value","length","URL","createObjectURL","console","log","json","children","id","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","required","defaultValue","className","href","type","accept","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\n// import TimelineContext from \"../store/TimelineContext\";\n// import useTimelineSelection from \"../hooks/useTimelineSelection\";\n\nexport default function InputForm() {\n\n  //  let context = useContext(TimelineContext);\n  // let setGame = context.set;\n\n  //  // TODO doesn't work (infinite loop of re-renders)\n  //  let loadTimeline = useTimelineSelection(null, setGame);\n  //  useEffect(() => loadTimeline());\n  //\n  //  function setupTimeline(event: React.FormEvent<HTMLFormElement>): void {\n  //    loadTimeline(event, setGame);\n  //  }\n\n  let [url, setUrl] = useState(\"../input/raccoon.json\");\n\n  function getUrl(event: React.FormEvent<HTMLFormElement>): void {\n    let files = event.target.fileInput.files;\n    let source = event.target.source.value;\n    if (source) {\n      if (files.length > 0) { \n        setUrl(URL.createObjectURL(files[0]));\n      } else {\n        setUrl(`../input/${source}.json`);\n      }\n    } \n  }\n\n  //  let [json, setJson] = useState(\"{ 'status': 'placeholder' }\");\n  //\n  useEffect(() => {\n    console.log(`Loading file '${url}'`);\n    //    fetch(url)\n  //    .then(data => data.json())\n  //    .then(result => setJson(result))\n  //    .catch(console.error)\n  }, [url]);\n\n  let json = \"{ 'json': 'empty' }\";\n\n  return(\n    <>\n    <form id=\"inputForm\" onSubmit={getUrl}>\n      <label htmlFor=\"source\">Choose a timeline:</label>\n      <select name=\"source\" id=\"source\" required defaultValue=\"music\">\n        <option value=\"music\">Music</option>\n        <option value=\"wars\">Wars</option>\n        <option value=\"upload\">Upload a custom timeline...</option>\n      </select>\n      <div id=\"file\" className=\"hide\">\n        <label htmlFor=\"fileInput\">Upload JSON timeline file (<a href=\"about.html\">?</a>)</label>\n        <input id=\"fileInput\" type=\"file\" accept=\".json\" />\n      </div>\n      <button type=\"submit\" id=\"playbutton\">Play!</button>\n    </form>\n    <pre>{json}</pre>\n  </>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}