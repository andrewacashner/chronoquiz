{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nimport Card from \"./Card\";\nimport FactList from \"./FactList\";\nimport { default as Color } from \"./RgbColorMix\";\nvar _moveCurrentClueToTimeline = /*#__PURE__*/_classPrivateFieldLooseKey(\"moveCurrentClueToTimeline\");\nexport default class Game {\n  constructor({\n    clues,\n    timeline,\n    score = 0\n  }) {\n    // PRIVATE METHODS\n    /** Remove last item of clue list and add it to timeline list.\n     * (Note: The timeline list will then shuffle itself in chronological\n     * order.)\n     */\n    Object.defineProperty(this, _moveCurrentClueToTimeline, {\n      value: _moveCurrentClueToTimeline2\n    });\n    this.clues = void 0;\n    this.timeline = void 0;\n    this.score = void 0;\n    this.clues = clues;\n    this.timeline = timeline;\n    this.score = score;\n  }\n  // PUBLIC METHODS\n\n  // Start the game with just a \"Now\" card in the timeline.\n  // Since we have the image locally we don't need to sanitize the card.\n  static startingGame() {\n    let NowCard = new Card({\n      isClue: false,\n      date: new Date(),\n      info: \"Now\",\n      img: \"./img/hourglass.jpg\",\n      color: Color.VIOLET\n    });\n    NowCard.markSafe();\n    return new Game({\n      clues: new FactList(),\n      timeline: new FactList([NowCard]),\n      score: 0\n    });\n  }\n  get isActive() {\n    return this.clues && !this.clues.isEmpty();\n  }\n  incrementScore() {\n    ++this.score;\n    return this;\n  }\n\n  // Subtract one from score; don't go below zero\n  decrementScore() {\n    this.score = Math.max(0, this.score - 1);\n    return this;\n  }\n\n  // Check for end of game, otherwise pull up the next clue.\n  nextClue() {\n    _classPrivateFieldLooseBase(this, _moveCurrentClueToTimeline)[_moveCurrentClueToTimeline]();\n    if (!this.clues.isEmpty()) {\n      updateClues(this);\n    } else {\n      //      displayGameOver(this.score);\n    }\n    return this;\n  }\n}\nfunction _moveCurrentClueToTimeline2() {\n  let answer = this.clues.pop();\n  answer.isClue = false;\n  this.timeline.addFact(answer);\n}","map":{"version":3,"names":["Card","FactList","default","Color","_moveCurrentClueToTimeline","_classPrivateFieldLooseKey","Game","constructor","clues","timeline","score","Object","defineProperty","value","_moveCurrentClueToTimeline2","startingGame","NowCard","isClue","date","Date","info","img","color","VIOLET","markSafe","isActive","isEmpty","incrementScore","decrementScore","Math","max","nextClue","_classPrivateFieldLooseBase","updateClues","answer","pop","addFact"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/Game.tsx"],"sourcesContent":["import Card from \"./Card\";\nimport FactList from \"./FactList\";\nimport { default as Color } from \"./RgbColorMix\";\n\ninterface GameInput {\n  clues: FactList;\n  timeline: FactList;\n  score: number;\n}\n\nexport default class Game {\n  clues: FactList;\n  timeline: FactList;\n  score: number;\n\n  constructor({ clues, timeline, score = 0 }: GameInput) {\n    this.clues = clues;\n    this.timeline = timeline;\n    this.score = score;\n  }\n  // PRIVATE METHODS\n  \n  /** Remove last item of clue list and add it to timeline list.\n   * (Note: The timeline list will then shuffle itself in chronological\n   * order.)\n   */\n  #moveCurrentClueToTimeline() {\n    let answer = this.clues.pop();\n    answer.isClue = false;\n    this.timeline.addFact(answer);\n  }\n\n  // PUBLIC METHODS\n \n  // Start the game with just a \"Now\" card in the timeline.\n  // Since we have the image locally we don't need to sanitize the card.\n  static startingGame(): Game {\n    let NowCard = new Card({\n      isClue: false, \n      date: new Date(),\n      info: \"Now\", \n      img: \"./img/hourglass.jpg\",\n      color: Color.VIOLET\n    });\n    NowCard.markSafe();\n\n    return new Game({\n      clues: new FactList(), \n      timeline: new FactList([NowCard]),\n      score: 0\n    });\n  }\n\n  get isActive(): boolean {\n    return this.clues && !this.clues.isEmpty();\n  }\n\n  incrementScore(): Game {\n    ++this.score;\n    return this;\n  }\n\n  // Subtract one from score; don't go below zero\n  decrementScore(): Game {\n    this.score  = Math.max(0, this.score - 1);\n    return this;\n  }\n\n  // Check for end of game, otherwise pull up the next clue.\n  nextClue(): Game {\n    this.#moveCurrentClueToTimeline();\n    if (!this.clues.isEmpty()) {\n      updateClues(this);\n    } else {\n      //      displayGameOver(this.score);\n    }\n    return this;\n  }\n\n}\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,OAAO,IAAIC,KAAK,QAAQ,eAAe;AAAC,IAAAC,0BAAA,gBAAAC,0BAAA;AAQjD,eAAe,MAAMC,IAAI,CAAC;EAKxBC,WAAWA,CAAC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,KAAK,GAAG;EAAa,CAAC,EAAE;IAKvD;IAEA;AACF;AACA;AACA;IAHEC,MAAA,CAAAC,cAAA,OAAAR,0BAAA;MAAAS,KAAA,EAAAC;IAAA;IAAA,KAXAN,KAAK;IAAA,KACLC,QAAQ;IAAA,KACRC,KAAK;IAGH,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;EACpB;EAaA;;EAEA;EACA;EACA,OAAOK,YAAYA,CAAA,EAAS;IAC1B,IAAIC,OAAO,GAAG,IAAIhB,IAAI,CAAC;MACrBiB,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;MAChBC,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE,qBAAqB;MAC1BC,KAAK,EAAEnB,KAAK,CAACoB;IACf,CAAC,CAAC;IACFP,OAAO,CAACQ,QAAQ,CAAC,CAAC;IAElB,OAAO,IAAIlB,IAAI,CAAC;MACdE,KAAK,EAAE,IAAIP,QAAQ,CAAC,CAAC;MACrBQ,QAAQ,EAAE,IAAIR,QAAQ,CAAC,CAACe,OAAO,CAAC,CAAC;MACjCN,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;EAEA,IAAIe,QAAQA,CAAA,EAAY;IACtB,OAAO,IAAI,CAACjB,KAAK,IAAI,CAAC,IAAI,CAACA,KAAK,CAACkB,OAAO,CAAC,CAAC;EAC5C;EAEAC,cAAcA,CAAA,EAAS;IACrB,EAAE,IAAI,CAACjB,KAAK;IACZ,OAAO,IAAI;EACb;;EAEA;EACAkB,cAAcA,CAAA,EAAS;IACrB,IAAI,CAAClB,KAAK,GAAImB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACpB,KAAK,GAAG,CAAC,CAAC;IACzC,OAAO,IAAI;EACb;;EAEA;EACAqB,QAAQA,CAAA,EAAS;IACfC,2BAAA,KAAI,EAAA5B,0BAAA,EAAAA,0BAAA;IACJ,IAAI,CAAC,IAAI,CAACI,KAAK,CAACkB,OAAO,CAAC,CAAC,EAAE;MACzBO,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACL;IAAA;IAEF,OAAO,IAAI;EACb;AAEF;AAAC,SAAAnB,4BAAA,EArD8B;EAC3B,IAAIoB,MAAM,GAAG,IAAI,CAAC1B,KAAK,CAAC2B,GAAG,CAAC,CAAC;EAC7BD,MAAM,CAACjB,MAAM,GAAG,KAAK;EACrB,IAAI,CAACR,QAAQ,CAAC2B,OAAO,CAACF,MAAM,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}