{"ast":null,"code":"// Menu to choose which timeline to load (or create new)\nimport{useState,useContext,useEffect}from\"react\";import Timeline from\"../classes/Timeline\";import UserContext from\"../store/UserContext\";import AdminContext from\"../store/AdminContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AdminChooser(){let userContext=useContext(UserContext);let authenticated=userContext.get.authenticated;let currentUser=userContext.get.currentUser;let userToken=userContext.get.userToken;let timelineList=userContext.get.timelineList;let dispatchTimeline=userContext.set;let adminContext=useContext(AdminContext);let update=adminContext.get.updateTimelineList;let dispatchAdmin=adminContext.set;function loadTimeline(event){event.preventDefault();let data=new FormData(event.target);let id=data.get(\"select-timeline\");dispatchAdmin({type:\"set\",payload:{timelineID:id}});}useEffect(()=>{async function loadTimelineList(token){let list=await Timeline.listTimelines(token);if(list){dispatchTimeline({type:\"list\",payload:list});}}if(authenticated&&update){loadTimelineList(userToken);dispatchAdmin({type:\"set\",payload:{updateTimelineList:false}});}else{dispatchTimeline({type:\"list\",payload:[]});}},[authenticated,update,dispatchAdmin,dispatchTimeline,currentUser,userToken]);// TODO this is not being triggered by the 'update' state in the parent\n// component\nfunction timelineOption(timeline){return/*#__PURE__*/_jsx(\"option\",{value:timeline.id,children:timeline.title},timeline.id);}// Change display of submit button whether creating or loading\nlet[selection,setSelection]=useState(\"create\");function updateSelection(event){setSelection(event.target.value);}let loadButtonText=selection===\"create\"?\"Create\":\"Load\";return/*#__PURE__*/_jsxs(\"form\",{id:\"chooser\",onSubmit:loadTimeline,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"select-timeline\",children:\"Select a Timeline:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"select-timeline\",defaultValue:\"create\",onChange:updateSelection,children:[/*#__PURE__*/_jsx(\"option\",{value:\"create\",children:\"Create New\"}),timelineList.map(timelineOption)]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:loadButtonText})]});}","map":{"version":3,"names":["useState","useContext","useEffect","Timeline","UserContext","AdminContext","jsx","_jsx","jsxs","_jsxs","AdminChooser","userContext","authenticated","get","currentUser","userToken","timelineList","dispatchTimeline","set","adminContext","update","updateTimelineList","dispatchAdmin","loadTimeline","event","preventDefault","data","FormData","target","id","type","payload","timelineID","loadTimelineList","token","list","listTimelines","timelineOption","timeline","value","children","title","selection","setSelection","updateSelection","loadButtonText","onSubmit","htmlFor","name","defaultValue","onChange","map"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminChooser.tsx"],"sourcesContent":["// Menu to choose which timeline to load (or create new)\n\nimport { useState, useContext, useEffect } from \"react\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\nimport AdminContext from \"../store/AdminContext\";\n\nexport default function AdminChooser(): React.ReactElement {\n\n  let userContext = useContext(UserContext);\n  let authenticated    = userContext.get.authenticated;\n  let currentUser      = userContext.get.currentUser;\n  let userToken        = userContext.get.userToken;\n  let timelineList     = userContext.get.timelineList;\n  let dispatchTimeline = userContext.set;\n\n  let adminContext = useContext(AdminContext);\n  let update           = adminContext.get.updateTimelineList;\n  let dispatchAdmin    = adminContext.set;\n\n  function loadTimeline(event: React.FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    dispatchAdmin({ \n      type: \"set\", \n      payload: { timelineID: id }\n    });\n  }\n\n  useEffect(() => {\n    async function loadTimelineList(token: string): void {\n      let list = await Timeline.listTimelines(token);\n      if (list) {\n        dispatchTimeline({ type: \"list\", payload: list });\n      }\n    }\n\n    if (authenticated && update) {\n      loadTimelineList(userToken);\n      dispatchAdmin({ \n        type: \"set\",\n        payload: { updateTimelineList: false }\n      });\n    } else {\n      dispatchTimeline({ type: \"list\", payload: [] });\n    }\n  }, [authenticated, update, dispatchAdmin, dispatchTimeline, currentUser, userToken]);\n  // TODO this is not being triggered by the 'update' state in the parent\n  // component\n\n\n  function timelineOption(timeline: Timeline): React.ReactElement {\n    return(\n      <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n    );\n  }\n\n  // Change display of submit button whether creating or loading\n  let [selection, setSelection] = useState(\"create\");\n\n  function updateSelection(event: React.FormEvent<HTMLFormElement>): void {\n    setSelection(event.target.value);\n  }\n\n  let loadButtonText = (selection === \"create\") ? \"Create\" : \"Load\";\n\n  return(\n    <form id=\"chooser\" onSubmit={loadTimeline}>\n      <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n      <select name=\"select-timeline\" \n        defaultValue=\"create\" \n        onChange={updateSelection}>\n        <option value=\"create\">Create New</option>\n        { timelineList.map(timelineOption) }\n      </select>\n      <button type=\"submit\">{ loadButtonText }</button>\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}