{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\nimport Game from \"../classes/Game\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputForm() {\n  _s();\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n  let [url, setUrl] = useState(\"\");\n  let [json, setJson] = useState(null);\n  let [uploadVisible, setUploadVisible] = useState(false);\n  function getUrl(event) {\n    event.preventDefault();\n    let source = event.target.source.value;\n    let files = event.target.fileInput.files;\n    let newUrl = files.length > 0 ? URL.createObjectURL(files[0]) : `./input/${source}.json`;\n    setUrl(newUrl);\n  }\n  useEffect(() => {\n    function isInputValid(json) {\n      return typeof json === \"object\" && Array.isArray(json) && json.length > 0 && json.every(fact => \"date\" in fact && \"info\" in fact);\n    }\n    async function fetchUrl() {\n      if (url) {\n        console.log(`Loading file ${url}`);\n        try {\n          let response = await fetch(url);\n          let json;\n          let contentType = response.headers.get(\"content-type\");\n          if (contentType && contentType.includes(\"application/json\")) {\n            json = await response.json();\n          } else {\n            throw new Error(`No JSON input: ${response}`);\n          }\n          if (isInputValid(json)) {\n            setJson(json);\n          } else {\n            throw new Error(`Unusable JSON input: ${newJson}`);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    fetchUrl();\n  }, [url]);\n  useEffect(() => {\n    async function cardArrayFromJson(json) {\n      let cards = [];\n      if (json && json.length > 0) {\n        for (let entry of json) {\n          let card = new Card({\n            isClue: true,\n            ...entry\n          });\n          cards.push(card);\n        }\n      }\n      return cards;\n    }\n    cardArrayFromJson(json).then(cards => new FactList(cards)).then(clues => setGame(prev => new Game({\n      clues: clues,\n      timeline: prev.timeline,\n      score: prev.score\n    }))).catch(console.error);\n  }, [json, setGame]);\n  function showUploadButton(event) {\n    let value = event.target.value;\n    setUploadVisible(value === \"upload\");\n  }\n  function visibility(isVisible) {\n    return isVisible ? \"show\" : \"hide\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"inputForm\",\n    onSubmit: getUrl,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"source\",\n      children: \"Choose a timeline:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"source\",\n      id: \"source\",\n      onChange: showUploadButton,\n      required: true,\n      defaultValue: \"music\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"music\",\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wars\",\n        children: \"Wars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"upload\",\n        children: \"Upload a custom timeline...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"file\",\n      className: visibility(uploadVisible),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: [\"Upload JSON timeline file (\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"about.html\",\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 63\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        accept: \".json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      id: \"playbutton\",\n      children: \"Play!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"IgVjZ65BuTXJzrujodZF3xfTKvA=\");\n_c = InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useContext","useState","useEffect","Card","FactList","Game","TimelineContext","jsxDEV","_jsxDEV","InputForm","_s","context","setGame","set","url","setUrl","json","setJson","uploadVisible","setUploadVisible","getUrl","event","preventDefault","source","target","value","files","fileInput","newUrl","length","URL","createObjectURL","isInputValid","Array","isArray","every","fact","fetchUrl","console","log","response","fetch","contentType","headers","get","includes","Error","newJson","e","error","cardArrayFromJson","cards","entry","card","isClue","push","then","clues","prev","timeline","score","catch","showUploadButton","visibility","isVisible","id","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","required","defaultValue","className","href","type","accept","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\n\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\nimport Game from \"../classes/Game\";\n\nimport TimelineContext from \"../store/TimelineContext\";\n\nexport default function InputForm() {\n\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n\n  let [url, setUrl] = useState(\"\");\n  let [json, setJson] = useState(null);\n  let [uploadVisible, setUploadVisible] = useState(false);\n\n  function getUrl(event: React.FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n    let source = event.target.source.value;\n    let files = event.target.fileInput.files;\n    let newUrl = (files.length > 0) \n                  ? URL.createObjectURL(files[0]) \n                  : `./input/${source}.json`;\n    setUrl(newUrl);\n  }\n  \n  useEffect(() => {\n    function isInputValid(json: any): boolean {\n      return typeof json === \"object\"\n      && Array.isArray(json) \n      && json.length > 0 \n      && json.every(fact => (\"date\" in fact) && (\"info\" in fact));\n    }\n\n    async function fetchUrl(): void {\n      if (url) {\n        console.log(`Loading file ${url}`);\n\n        try {\n          let response = await fetch(url);\n\n          let json;\n          let contentType = response.headers.get(\"content-type\");\n          \n          if (contentType && contentType.includes(\"application/json\")) {\n            json = await response.json();\n          } else {\n            throw new Error(`No JSON input: ${response}`);\n          }\n\n          if (isInputValid(json)) {\n            setJson(json);\n          } else {\n            throw new Error(`Unusable JSON input: ${newJson}`);\n          }\n        } catch(e) { \n          console.error(e); \n        }\n      }\n    }\n    fetchUrl();\n  }, [url]);\n\n  useEffect(() => {\n    async function cardArrayFromJson(json: object): Array<Card> {\n      let cards = [];\n      if (json && json.length > 0) {\n        for (let entry of json) {\n          let card = new Card({isClue: true, ...entry});\n          cards.push(card);\n        }\n      }\n      return cards;\n    }\n\n    cardArrayFromJson(json)\n    .then(cards => new FactList(cards))\n    .then(clues => setGame(prev => new Game({\n      clues: clues,\n      timeline: prev.timeline,\n      score: prev.score\n    })))\n    .catch(console.error);\n  }, [json, setGame])\n\n\n  function showUploadButton(event: React.FormEvent<HTMLFormElement>): void {\n    let value = event.target.value;\n    setUploadVisible(value === \"upload\");\n  }\n\n  function visibility(isVisible: boolean): string {\n    return (isVisible) ? \"show\" : \"hide\";\n  }\n\n  return(\n    <form id=\"inputForm\" onSubmit={getUrl}>\n      <label htmlFor=\"source\">Choose a timeline:</label>\n      <select name=\"source\" id=\"source\" \n        onChange={showUploadButton}\n        required defaultValue=\"music\">\n        <option value=\"music\">Music</option>\n        <option value=\"wars\">Wars</option>\n        <option value=\"upload\">Upload a custom timeline...</option>\n      </select>\n      <div id=\"file\" className={visibility(uploadVisible)}>\n        <label htmlFor=\"fileInput\">Upload JSON timeline file (<a href=\"about.html\">?</a>)</label>\n        <input id=\"fileInput\" type=\"file\" accept=\".json\" />\n      </div>\n      <button type=\"submit\" id=\"playbutton\">Play!</button>\n    </form>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}