{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminChooser.tsx\",\n  _s = $RefreshSig$();\n// Menu to choose which timeline to load (or create new)\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminChooser({\n  timelines,\n  setID\n}) {\n  _s();\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setID(id);\n  }\n  function timelineOption(timeline) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: timeline.id,\n      children: timeline.title\n    }, timeline.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Change display of submit button whether creating or loading\n  let [selection, setSelection] = useState(\"create\");\n  function updateSelection(event) {\n    setSelection(event.target.value);\n  }\n  let loadButtonText = selection === \"create\" ? \"Create\" : \"Load\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"chooser\",\n    onSubmit: loadTimeline,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"select-timeline\",\n      children: \"Select a Timeline:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"select-timeline\",\n      defaultValue: \"create\",\n      onChange: updateSelection,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"create\",\n        children: \"Create New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), timelines.map(timelineOption)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: loadButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminChooser, \"wOynFYa80dq3aHLlPdtTl1U14Kw=\");\n_c = AdminChooser;\nvar _c;\n$RefreshReg$(_c, \"AdminChooser\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AdminChooser","timelines","setID","_s","loadTimeline","event","preventDefault","data","FormData","target","id","get","timelineOption","timeline","value","children","title","fileName","_jsxFileName","lineNumber","columnNumber","selection","setSelection","updateSelection","loadButtonText","onSubmit","htmlFor","name","defaultValue","onChange","map","type","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminChooser.tsx"],"sourcesContent":["// Menu to choose which timeline to load (or create new)\n\nimport { useState } from \"react\";\nimport Timeline from \"../classes/Timeline\";\n\ninterface AdminChooserInput {\n  timelines: array<Timeline>,\n  setID: (id: number) => void,\n}\n\nexport default function AdminChooser({ \n  timelines, setID \n}: AdminChooserInput): React.ReactElement {\n\n  function loadTimeline(event: React.FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setID(id);\n  }\n\n  function timelineOption(timeline: Timeline): React.ReactElement {\n    return(\n      <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n    );\n  }\n\n  // Change display of submit button whether creating or loading\n  let [selection, setSelection] = useState(\"create\");\n\n  function updateSelection(event: React.FormEvent<HTMLFormElement>): void {\n    setSelection(event.target.value);\n  }\n\n  let loadButtonText = (selection === \"create\") ? \"Create\" : \"Load\";\n\n  return(\n    <form id=\"chooser\" onSubmit={loadTimeline}>\n      <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n      <select name=\"select-timeline\" \n        defaultValue=\"create\" \n        onChange={updateSelection}>\n        <option value=\"create\">Create New</option>\n        { timelines.map(timelineOption) }\n      </select>\n      <button type=\"submit\">{ loadButtonText }</button>\n    </form>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQjC,eAAe,SAASC,YAAYA,CAAC;EACnCC,SAAS;EAAEC;AACM,CAAC,EAAsB;EAAAC,EAAA;EAExC,SAASC,YAAYA,CAACC,KAAuC,EAAQ;IACnEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIC,IAAI,GAAG,IAAIC,QAAQ,CAACH,KAAK,CAACI,MAAM,CAAC;IACrC,IAAIC,EAAE,GAAGH,IAAI,CAACI,GAAG,CAAC,iBAAiB,CAAC;IACpCT,KAAK,CAACQ,EAAE,CAAC;EACX;EAEA,SAASE,cAAcA,CAACC,QAAkB,EAAsB;IAC9D,oBACEd,OAAA;MAA0Be,KAAK,EAAED,QAAQ,CAACH,EAAG;MAAAK,QAAA,EAAEF,QAAQ,CAACG;IAAK,GAAhDH,QAAQ,CAACH,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8C,CAAC;EAE3E;;EAEA;EACA,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,QAAQ,CAAC;EAElD,SAAS0B,eAAeA,CAAClB,KAAuC,EAAQ;IACtEiB,YAAY,CAACjB,KAAK,CAACI,MAAM,CAACK,KAAK,CAAC;EAClC;EAEA,IAAIU,cAAc,GAAIH,SAAS,KAAK,QAAQ,GAAI,QAAQ,GAAG,MAAM;EAEjE,oBACEtB,OAAA;IAAMW,EAAE,EAAC,SAAS;IAACe,QAAQ,EAAErB,YAAa;IAAAW,QAAA,gBACxChB,OAAA;MAAO2B,OAAO,EAAC,iBAAiB;MAAAX,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3DrB,OAAA;MAAQ4B,IAAI,EAAC,iBAAiB;MAC5BC,YAAY,EAAC,QAAQ;MACrBC,QAAQ,EAAEN,eAAgB;MAAAR,QAAA,gBAC1BhB,OAAA;QAAQe,KAAK,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxCnB,SAAS,CAAC6B,GAAG,CAAClB,cAAc,CAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACTrB,OAAA;MAAQgC,IAAI,EAAC,QAAQ;MAAAhB,QAAA,EAAGS;IAAc;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEX;AAACjB,EAAA,CAtCuBH,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}