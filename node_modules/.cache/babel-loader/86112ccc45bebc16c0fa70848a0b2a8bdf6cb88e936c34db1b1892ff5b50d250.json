{"ast":null,"code":"import{useContext,useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import UserContext from\"../store/UserContext\";import Fact from\"../classes/Fact\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function UploadForm(_ref){let{dispatch}=_ref;let userContext=useContext(UserContext);let userToken=userContext.get.userToken;let[uploadFile,setUploadFile]=useState(null);function handleUpload(event){event.preventDefault();let infile=event.target.upload.files[0];setUploadFile(infile);}useEffect(()=>{// TODO remove duplication of code (this may not be needed when reading\n// from server)\n// - also, skip duplicates when adding\nfunction isInputValid(json){return Array.isArray(json)&&json.length>0&&json.every(i=>\"date\"in i&&\"info\"in i);}async function loadUserTimeline(token,file){let text=await file.text();let json=JSON.parse(text);if(isInputValid(json)){console.debug(\"Valid input\");console.debug(json);let facts=json.map(item=>Fact.newFromYear(item));console.debug(facts);dispatch({type:\"addFacts\",payload:facts});}else{console.debug(\"Invalid input\");}}if(uploadFile){loadUserTimeline(userToken,uploadFile);}},[uploadFile,dispatch,userToken]);return/*#__PURE__*/_jsxs(\"details\",{children:[/*#__PURE__*/_jsx(\"summary\",{children:\"Upload Quiz Items\"}),/*#__PURE__*/_jsxs(\"section\",{id:\"upload\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Upload a a list of quiz facts in JSON format (see \",/*#__PURE__*/_jsx(Link,{to:\"/about\",children:\"instructions\"}),\")\"]}),/*#__PURE__*/_jsxs(\"form\",{id:\"upload-form\",onSubmit:handleUpload,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"upload\",accept:\".json\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Upload\"})]})]})]});}","map":{"version":3,"names":["useContext","useState","useEffect","Link","UserContext","Fact","jsx","_jsx","jsxs","_jsxs","UploadForm","_ref","dispatch","userContext","userToken","get","uploadFile","setUploadFile","handleUpload","event","preventDefault","infile","target","upload","files","isInputValid","json","Array","isArray","length","every","i","loadUserTimeline","token","file","text","JSON","parse","console","debug","facts","map","item","newFromYear","type","payload","children","id","to","onSubmit","name","accept"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/UploadForm.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport UserContext from \"../store/UserContext\";\nimport Fact from \"../classes/Fact\";\n\nexport default function UploadForm({ dispatch }) {\n  let userContext = useContext(UserContext);\n  let userToken = userContext.get.userToken;\n\n  let [uploadFile, setUploadFile] = useState(null);\n\n  function handleUpload(event) {\n    event.preventDefault();\n    let infile = event.target.upload.files[0];\n    setUploadFile(infile);\n  }\n\n  useEffect(() => {\n    // TODO remove duplication of code (this may not be needed when reading\n    // from server)\n    // - also, skip duplicates when adding\n    function isInputValid(json) {\n      return Array.isArray(json) && \n        json.length > 0 &&\n        json.every(i => (\"date\" in i) && (\"info\" in i));\n    }\n\n    async function loadUserTimeline(token, file) {\n      let text = await file.text();\n      let json = JSON.parse(text);\n\n      if (isInputValid(json)) {\n        console.debug(\"Valid input\");\n        console.debug(json);\n        let facts = json.map(item => Fact.newFromYear(item));\n        console.debug(facts);\n        dispatch({\n          type: \"addFacts\",\n          payload: facts\n        });\n      } else {\n        console.debug(\"Invalid input\");\n      }\n    }\n\n    if (uploadFile) {\n      loadUserTimeline(userToken, uploadFile);\n    }\n  }, [uploadFile, dispatch, userToken]);\n\n  return(\n    <details>\n      <summary>Upload Quiz Items</summary>\n      <section id=\"upload\">\n        <p>Upload a a list of quiz facts in JSON format (see <Link to=\"/about\">instructions</Link>)</p>\n\n        <form id=\"upload-form\" onSubmit={handleUpload}>\n          <input type=\"file\" name=\"upload\" accept=\".json\" />\n          <button type=\"submit\">Upload</button>\n        </form>\n      </section>\n    </details>\n  );\n}\n\n"],"mappings":"AAAA,OAASA,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACvD,OAASC,IAAI,KAAQ,kBAAkB,CAEvC,MAAO,CAAAC,WAAW,KAAM,sBAAsB,CAC9C,MAAO,CAAAC,IAAI,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnC,cAAe,SAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7C,GAAI,CAAAE,WAAW,CAAGb,UAAU,CAACI,WAAW,CAAC,CACzC,GAAI,CAAAU,SAAS,CAAGD,WAAW,CAACE,GAAG,CAACD,SAAS,CAEzC,GAAI,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAEhD,QAAS,CAAAiB,YAAYA,CAACC,KAAK,CAAE,CAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,GAAI,CAAAC,MAAM,CAAGF,KAAK,CAACG,MAAM,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CACzCP,aAAa,CAACI,MAAM,CAAC,CACvB,CAEAnB,SAAS,CAAC,IAAM,CACd;AACA;AACA;AACA,QAAS,CAAAuB,YAAYA,CAACC,IAAI,CAAE,CAC1B,MAAO,CAAAC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EACxBA,IAAI,CAACG,MAAM,CAAG,CAAC,EACfH,IAAI,CAACI,KAAK,CAACC,CAAC,EAAK,MAAM,EAAI,CAAAA,CAAC,EAAM,MAAM,EAAI,CAAAA,CAAE,CAAC,CACnD,CAEA,cAAe,CAAAC,gBAAgBA,CAACC,KAAK,CAAEC,IAAI,CAAE,CAC3C,GAAI,CAAAC,IAAI,CAAG,KAAM,CAAAD,IAAI,CAACC,IAAI,CAAC,CAAC,CAC5B,GAAI,CAAAT,IAAI,CAAGU,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAE3B,GAAIV,YAAY,CAACC,IAAI,CAAC,CAAE,CACtBY,OAAO,CAACC,KAAK,CAAC,aAAa,CAAC,CAC5BD,OAAO,CAACC,KAAK,CAACb,IAAI,CAAC,CACnB,GAAI,CAAAc,KAAK,CAAGd,IAAI,CAACe,GAAG,CAACC,IAAI,EAAIrC,IAAI,CAACsC,WAAW,CAACD,IAAI,CAAC,CAAC,CACpDJ,OAAO,CAACC,KAAK,CAACC,KAAK,CAAC,CACpB5B,QAAQ,CAAC,CACPgC,IAAI,CAAE,UAAU,CAChBC,OAAO,CAAEL,KACX,CAAC,CAAC,CACJ,CAAC,IAAM,CACLF,OAAO,CAACC,KAAK,CAAC,eAAe,CAAC,CAChC,CACF,CAEA,GAAIvB,UAAU,CAAE,CACdgB,gBAAgB,CAAClB,SAAS,CAAEE,UAAU,CAAC,CACzC,CACF,CAAC,CAAE,CAACA,UAAU,CAAEJ,QAAQ,CAAEE,SAAS,CAAC,CAAC,CAErC,mBACEL,KAAA,YAAAqC,QAAA,eACEvC,IAAA,YAAAuC,QAAA,CAAS,mBAAiB,CAAS,CAAC,cACpCrC,KAAA,YAASsC,EAAE,CAAC,QAAQ,CAAAD,QAAA,eAClBrC,KAAA,MAAAqC,QAAA,EAAG,oDAAkD,cAAAvC,IAAA,CAACJ,IAAI,EAAC6C,EAAE,CAAC,QAAQ,CAAAF,QAAA,CAAC,cAAY,CAAM,CAAC,IAAC,EAAG,CAAC,cAE/FrC,KAAA,SAAMsC,EAAE,CAAC,aAAa,CAACE,QAAQ,CAAE/B,YAAa,CAAA4B,QAAA,eAC5CvC,IAAA,UAAOqC,IAAI,CAAC,MAAM,CAACM,IAAI,CAAC,QAAQ,CAACC,MAAM,CAAC,OAAO,CAAE,CAAC,cAClD5C,IAAA,WAAQqC,IAAI,CAAC,QAAQ,CAAAE,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjC,CAAC,EACA,CAAC,EACH,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}