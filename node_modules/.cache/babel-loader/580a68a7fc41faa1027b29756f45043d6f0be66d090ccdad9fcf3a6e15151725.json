{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n  const timelineDefaults = new Timeline({\n    title: '',\n    description: '',\n    keywordString: [],\n    creator: currentUser.username,\n    facts: []\n  });\n  function timelineReducer(state, action) {\n    let toDo = action.type;\n    let obj = action.payload;\n    let newState = state;\n    const actions = {\n      set: new Timeline({\n        ...state,\n        ...obj\n      }),\n      reset: timelineDefaults,\n      addFact: state.addFact(obj.fact),\n      removeFact: state.removeFact(obj.fact)\n    };\n    if (toDo in actions) {\n      newState = actions[toDo];\n    }\n    return newState;\n  }\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, timelineDefaults);\n  let [saveReady, setSaveReady] = useState(false);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  let [timelineID, setTimelineID] = useState(null);\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        var _Timeline$creator;\n        let json = await response.json();\n        console.debug(json);\n        dispatchTimeline({\n          type: \"set\",\n          payload: {\n            id: json.id,\n            title: json.title,\n            description: json.description,\n            keywords: Timeline.parseKeywords(json.keywords),\n            creator: (_Timeline$creator = Timeline.creator) !== null && _Timeline$creator !== void 0 ? _Timeline$creator : currentUser.username,\n            facts: json.facts.map(f => Fact.newFromYear(f))\n          }\n        });\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({\n          type: \"reset\"\n        });\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken]);\n  function Chooser() {\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n  function MetadataPanel() {\n    function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      dispatchTimeline({\n        type: \"set\",\n        payload: {\n          title: data.get(\"title\"),\n          description: data.get(\"description\"),\n          keywords: Timeline.parseKeywords(data.get(\"keywords\")),\n          creator: data.get(\"creator\")\n        }\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(timelineState);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        onSubmit: updateMetadata,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              defaultValue: timelineState.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              defaultValue: timelineState.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              defaultValue: timelineState.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              defaultValue: timelineState.creator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Metadata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({\n            type: \"removeFact\",\n            payload: {\n              fact: item\n            }\n          });\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({\n          type: \"removeFact\",\n          payload: {\n            fact: item\n          }\n        });\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: editFact,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: deleteFact,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Enter timeline events using the form below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timelineState.facts.map(currentFact)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), timelineState.facts.length === 0 ? /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 46\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  }\n  const factDefaults = new Fact({\n    date: new Date(),\n    info: \"Description\",\n    img: \"https://picsum.photos/200.jpg\"\n  });\n  function factReducer(state, action) {\n    let toDo = action.type;\n    let obj = action.payload;\n    let newState = state;\n    const actions = {\n      set: new Fact({\n        ...state,\n        ...obj\n      }),\n      reset: factDefaults\n    };\n    if (toDo in actions) {\n      newState = actions[toDo];\n    }\n    return newState;\n  }\n  let [factState, dispatchFact] = useReducer(factReducer, factDefaults);\n  function NewFactForm() {\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: {\n            fact: testCard\n          }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({\n          type: \"reset\"\n        });\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": factState.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: factState.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: factState.img,\n          src: factState.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: factState.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this);\n    }\n    function preview(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      let newDate = new Date();\n      newDate.setFullYear(data.get(\"date\"));\n      dispatchFact({\n        type: \"set\",\n        payload: {\n          date: newDate,\n          info: data.get(\"info\"),\n          img: data.get(\"img\")\n        }\n      });\n    }\n    function updateFact(field, setValueFn = null) {\n      return function (event) {\n        let value = event.target.value;\n        let newValue = setValueFn ? setValueFn(value) : value;\n        dispatchFact({\n          type: \"set\",\n          payload: {\n            [field]: newValue\n          }\n        });\n      };\n    }\n    function dateFromYear(year) {\n      let date = new Date();\n      date.setFullYear(year);\n      return date;\n    }\n\n    // TODO allow add or preview\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: factDefaults.year,\n              onChange: updateFact(\"date\", dateFromYear),\n              defaultValue: factState.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onBlur: updateFact(\"info\"),\n              defaultValue: factState.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              defaultValue: factState.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: factState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"preview\",\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  }\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n  function ResetButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset\",\n      type: \"button\",\n      onClick: resetTimeline,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      dispatchTimeline({\n        type: \"reset\"\n      });\n    }\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n    }\n  }, [saveReady, timelineState, currentUser, userToken]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Chronoquiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"2VKKafobq2+4/3/K66l10UZmAnI=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useContext","useEffect","useReducer","useNavigate","User","Fact","Timeline","UserContext","jsxDEV","_jsxDEV","Create","_s","userContext","authenticated","get","currentUser","userToken","navigate","timelineDefaults","title","description","keywordString","creator","username","facts","timelineReducer","state","action","toDo","type","obj","payload","newState","actions","set","reset","addFact","fact","removeFact","timelineState","dispatchTimeline","saveReady","setSaveReady","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","event","preventDefault","data","FormData","target","id","response","fetch","SERVER","method","headers","Headers","ok","_Timeline$creator","json","console","debug","keywords","parseKeywords","map","f","newFromYear","status","statusText","Chooser","timelineOption","timeline","value","onSubmit","htmlFor","name","defaultValue","MetadataPanel","updateMetadata","log","CurrentFactsPanel","currentFact","item","deleteFact","window","confirm","date","getFullYear","editFact","dispatchFact","onClick","year","info","img","crypto","randomUUID","length","factDefaults","Date","factReducer","factState","NewFactForm","newFact","testCard","CardPreview","alt","src","preview","newDate","setFullYear","updateFact","field","setValueFn","newValue","dateFromYear","max","onChange","onBlur","SaveButton","saveTimeline","ResetButton","resetTimeline","postTimeline","body","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nexport default function Create() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n\n\n  const timelineDefaults = new Timeline({\n    title: '',\n    description: '',\n    keywordString: [],\n    creator: currentUser.username,\n    facts: []\n  });\n\n  function timelineReducer(state, action) {\n    let toDo = action.type;\n    let obj = action.payload;\n\n    let newState = state;\n\n    const actions = {\n      set:        new Timeline({ ...state, ...obj }),\n      reset:      timelineDefaults,\n      addFact:    state.addFact(obj.fact),\n      removeFact: state.removeFact(obj.fact),\n    };\n\n    if (toDo in actions) {\n      newState = actions[toDo];\n    }\n    return newState;\n  }\n\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer,\n                                             timelineDefaults);\n\n  let [saveReady, setSaveReady] = useState(false);\n  \n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n\n  let [timelineID, setTimelineID] = useState(null);\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n\n        dispatchTimeline({\n          type: \"set\",\n          payload: {\n            id:           json.id,\n            title:        json.title,\n            description:  json.description,\n            keywords:     Timeline.parseKeywords(json.keywords),\n            creator:      Timeline.creator ?? currentUser.username,\n            facts:        json.facts.map(f => Fact.newFromYear(f))\n          }\n        });\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({ type: \"reset\" })\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken]);\n\n\n  function Chooser() {\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\">\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n\n  function MetadataPanel() {\n    function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      dispatchTimeline({ \n        type: \"set\",\n        payload: {\n          title:        data.get(\"title\"),\n          description:  data.get(\"description\"),\n          keywords:     Timeline.parseKeywords(data.get(\"keywords\")),\n          creator:      data.get(\"creator\")\n        }\n      });\n\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(timelineState);\n    }\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\" onSubmit={updateMetadata}>\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                defaultValue={timelineState.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                defaultValue={timelineState.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                defaultValue={timelineState.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                defaultValue={timelineState.creator}/>\n            </div>\n          </div>\n          <button type=\"submit\">Update Metadata</button>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({ \n            type: \"removeFact\",\n            payload: { fact: item }\n          });\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({ \n          type: \"removeFact\",\n          payload: { fact: item }\n        });\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td><button type=\"button\" onClick={editFact}>Edit</button>\n            <button type=\"button\" onClick={deleteFact}>Delete</button></td>\n          <td>{item.id}</td>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <p className=\"instructions\">Enter timeline events using the form below</p>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>ID</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timelineState.facts.map(currentFact) }\n          </tbody>\n        </table>\n        { timelineState.facts.length === 0 ? <Instructions /> : null }\n      </section>\n    );\n  }\n\n  const factDefaults = new Fact({\n    date: new Date(),\n    info: \"Description\", \n    img: \"https://picsum.photos/200.jpg\"\n  });\n\n  function factReducer(state, action) {\n    let toDo = action.type;\n    let obj = action.payload;\n    let newState = state;\n\n    const actions = {\n      set:    new Fact({ ...state, ...obj }),\n      reset:  factDefaults\n    };\n\n    if (toDo in actions) {\n      newState = actions[toDo];\n    }\n    return newState;\n  }\n\n  let [factState, dispatchFact] = useReducer(factReducer, factDefaults);\n\n  function NewFactForm() {\n\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: { fact: testCard }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({ type: \"reset\" });\n      }\n    }\n\n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={factState.year} data-noselect=\"noselect\">\n          <span className=\"date\">{factState.year}</span>\n          <img alt={factState.img} src={factState.img} />\n          <span className=\"info\">{factState.info}</span>\n        </div>\n      );\n    }\n\n    function preview(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      \n      let newDate = new Date();\n      newDate.setFullYear(data.get(\"date\"));\n\n      dispatchFact({\n        type: \"set\",\n        payload: {\n          date: newDate,\n          info: data.get(\"info\"),\n          img: data.get(\"img\") \n        }\n      });\n    }\n\n    function updateFact(field: string, \n                        setValueFn: (value: any) => any = null) {\n      return function(event) {\n        let value = event.target.value;\n        let newValue = setValueFn ? setValueFn(value) : value;\n        dispatchFact({\n          type: \"set\",\n          payload: { \n            [field]: newValue\n          }\n        });\n      };\n    }\n\n    function dateFromYear(year: number): Date {\n      let date = new Date();\n      date.setFullYear(year);\n      return date\n    }\n\n    // TODO allow add or preview\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={factDefaults.year}\n                onChange={updateFact(\"date\", dateFromYear)}\n                defaultValue={factState.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onBlur={updateFact(\"info\")}\n                defaultValue={factState.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                defaultValue={factState.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={factState} />\n          </section>\n          <button type=\"submit\" id=\"preview\">Preview</button>\n          <button type=\"submit\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function SaveButton() {\n    return(\n      <button id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n\n  function ResetButton() {\n    return(\n      <button id=\"reset\" type=\"button\" onClick={resetTimeline}>Reset</button>\n    );\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      dispatchTimeline({ type: \"reset\" });\n    }\n  }\n\n   \n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n    } \n  }, [saveReady, timelineState, currentUser, userToken]);\n\n\n  return(\n    <main>\n      <h1>Create a Chronoquiz</h1>\n      <Instructions />\n      <Chooser />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <SaveButton />\n      <ResetButton />\n    </main>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}