{"ast":null,"code":"import _classPrivateFieldLooseBase from\"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";import _classPrivateFieldLooseKey from\"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";var _FactList;import Card from\"./Card\";import{default as Color}from\"./RgbColorMix\";var _items=/*#__PURE__*/_classPrivateFieldLooseKey(\"items\");var _setColors=/*#__PURE__*/_classPrivateFieldLooseKey(\"setColors\");var _shuffle=/*#__PURE__*/_classPrivateFieldLooseKey(\"shuffle\");export default class FactList{constructor(){let cards=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];// Shuffle the array, using the Fisher-Yates/Knuth shuffle\n// (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\nObject.defineProperty(this,_shuffle,{value:_shuffle2});// PRIVATE METHODS\n// Set the colors of the cards in this list, in chronological order, to\n// evenly spaced intervals along the spectrum.\nObject.defineProperty(this,_setColors,{value:_setColors2});Object.defineProperty(this,_items,{writable:true,value:void 0});_classPrivateFieldLooseBase(this,_items)[_items]=cards;}get cards(){return _classPrivateFieldLooseBase(this,_items)[_items];}json(){return _classPrivateFieldLooseBase(this,_items)[_items].map(i=>i.json());}// PUBLIC METHODS\nclone(){return new FactList([..._classPrivateFieldLooseBase(this,_items)[_items]]);}// Sort the array by the date field, ascending.\nsortByDate(){_classPrivateFieldLooseBase(this,_items)[_items].sort((c1,c2)=>{return c1.fact.date-c2.fact.date;});return this;}sortedByDate(){return this.clone().sortByDate();}setupClues(){_classPrivateFieldLooseBase(this,_setColors)[_setColors]();_classPrivateFieldLooseBase(this,_shuffle)[_shuffle]();}get length(){return _classPrivateFieldLooseBase(this,_items)[_items].length;}isEmpty(){return this.length===0;}allButLastItems(){return _classPrivateFieldLooseBase(this,_items)[_items].slice(0,-1);}last(){return _classPrivateFieldLooseBase(this,_items)[_items].at(-1);}pop(){let card=_classPrivateFieldLooseBase(this,_items)[_items].pop();return card;}dropLast(){this.pop();return this;}dropLastCopy(){return new FactList(_classPrivateFieldLooseBase(this,_items)[_items].slice(0,-1));}prepend(item){_classPrivateFieldLooseBase(this,_items)[_items].unshift(item);return this;}prependCopy(item){return new FactList([item,..._classPrivateFieldLooseBase(this,_items)[_items]]);}// Add event to array and then resort by date.\naddFact(card){_classPrivateFieldLooseBase(this,_items)[_items].push(card);this.sortByDate();return this;}resetMargins(){let resetItems=[];for(let i of _classPrivateFieldLooseBase(this,_items)[_items]){let card=new Card({...i,expand:false});resetItems.push(card);}return new FactList(resetItems);}addAnswer(answer){return this.prependCopy(answer).sortedByDate().resetMargins();}findById(id){return _classPrivateFieldLooseBase(this,_items)[_items].find(c=>c.id===id);}findIndexById(id){return _classPrivateFieldLooseBase(this,_items)[_items].findIndex(c=>c.id===id);}at(index){return _classPrivateFieldLooseBase(this,_items)[_items].at(index);}map(fn){return _classPrivateFieldLooseBase(this,_items)[_items].map(fn);}appendClone(newCard){return this.clone().addFact(newCard);}}_FactList=FactList;function _setColors2(){this.sortByDate();let items=_classPrivateFieldLooseBase(this,_items)[_items];items.forEach((card,index)=>{items[index].color=Color.colorAtIndex(index,items.length,Color.SPECTRUM);});return this;}function _shuffle2(){function randomInt(max){return Math.floor(Math.random()*max);}let items=_classPrivateFieldLooseBase(this,_items)[_items];for(let i=items.length-1;i>0;--i){let j=randomInt(i);[items[i],items[j]]=[items[j],items[i]];}return this;}","map":{"version":3,"names":["Card","default","Color","_items","_classPrivateFieldLooseKey","_setColors","_shuffle","FactList","constructor","cards","arguments","length","undefined","Object","defineProperty","value","_shuffle2","_setColors2","writable","_classPrivateFieldLooseBase","json","map","i","clone","sortByDate","sort","c1","c2","fact","date","sortedByDate","setupClues","isEmpty","allButLastItems","slice","last","at","pop","card","dropLast","dropLastCopy","prepend","item","unshift","prependCopy","addFact","push","resetMargins","resetItems","expand","addAnswer","answer","findById","id","find","c","findIndexById","findIndex","index","fn","appendClone","newCard","_FactList","items","forEach","color","colorAtIndex","SPECTRUM","randomInt","max","Math","floor","random","j"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/FactList.tsx"],"sourcesContent":["import Card from \"./Card\";\nimport { default as Color } from \"./RgbColorMix\";\n\nexport default class FactList {\n  #items: Array<Card>;\n\n  constructor(cards: Array<Card> = []) {\n    this.#items = cards;\n  }\n\n  get cards() {\n    return this.#items;\n  }\n\n  json() {\n    return this.#items.map(i => i.json());\n  }\n\n  // PRIVATE METHODS\n  \n  // Set the colors of the cards in this list, in chronological order, to\n  // evenly spaced intervals along the spectrum.\n  #setColors(): FactList {\n    this.sortByDate();\n    let items = this.#items;\n\n    items.forEach((card, index) => {\n      items[index].color = Color.colorAtIndex(index, items.length, \n                                              Color.SPECTRUM);\n    });\n    return this;\n  } \n\n  // Shuffle the array, using the Fisher-Yates/Knuth shuffle\n  // (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n  #shuffle(): FactList {\n    \n    function randomInt(max: number): number {\n      return Math.floor(Math.random() * max);\n    } \n\n    let items = this.#items;\n\n    for (let i = items.length - 1; i > 0; --i) {\n      let j = randomInt(i);\n      [items[i], items[j]] = [items[j], items[i]];\n    }\n\n    return this;\n  }\n\n  // PUBLIC METHODS\n\n  clone(): FactList {\n    return new FactList([...this.#items]);\n  }\n\n  // Sort the array by the date field, ascending.\n  sortByDate(): FactList {\n    this.#items.sort((c1, c2) => { return c1.fact.date - c2.fact.date });\n    return this;\n  }\n\n  sortedByDate(): FactList {\n    return this.clone().sortByDate();\n  }\n  \n\n  setupClues() {\n    this.#setColors();\n    this.#shuffle();\n  }\n\n  get length(): number {\n    return this.#items.length;\n  }\n\n  isEmpty(): boolean {\n    return this.length === 0;\n  }\n\n  allButLastItems(): Array<Card> {\n    return this.#items.slice(0, -1);\n  }\n\n  last(): Card {\n    return this.#items.at(-1);\n  }\n\n  pop(): Card {\n    let card = this.#items.pop();\n    return card;\n  }\n\n  dropLast(): FactList {\n    this.pop();\n    return this;\n  }\n\n  dropLastCopy(): FactList {\n    return new FactList(this.#items.slice(0, -1));\n  }\n\n  prepend(item): FactList {\n    this.#items.unshift(item);\n    return this;\n  }\n  \n  prependCopy(item): FactList {\n    return new FactList([item, ...this.#items]);\n  }\n\n  // Add event to array and then resort by date.\n  addFact(card) {\n    this.#items.push(card);\n    this.sortByDate();\n    return this;\n  }\n\n  resetMargins(): FactList {\n    let resetItems = [];\n    for (let i of this.#items) {\n      let card = new Card({...i, expand: false});\n      resetItems.push(card);\n    }\n    return new FactList(resetItems);\n  }\n\n  addAnswer(answer): FactList {\n    return this.prependCopy(answer).sortedByDate().resetMargins();\n  }\n\n  findById(id: string): Card {\n    return this.#items.find(c => c.id === id);\n  }\n\n  findIndexById(id: string): Card {\n    return this.#items.findIndex(c => c.id === id);\n  }\n\n  at(index: number): Card {\n    return this.#items.at(index);\n  }\n\n  map(fn: (Card) => Card): FactList {\n    return this.#items.map(fn);\n  }\n\n  appendClone(newCard: Card): FactList {\n    return this.clone().addFact(newCard);\n  }\n\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}