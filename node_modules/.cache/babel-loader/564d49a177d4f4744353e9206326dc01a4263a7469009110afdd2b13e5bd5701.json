{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminChooser.tsx\",\n  _s = $RefreshSig$();\n// Menu to choose which timeline to load (or create new)\n\nimport { useState, useContext, useEffect } from \"react\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport AdminContext from \"../store/AdminContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminChooser() {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser = userContext.get.currentUser;\n  let userToken = userContext.get.userToken;\n  let timelineList = userContext.get.timelineList;\n  let dispatch = userContext.set;\n  let adminContext = useContext(AdminContext);\n  let setID = adminContext.timelineID.set;\n  let [update, setUpdate] = adminContext.updateTimelineList;\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setID(id);\n  }\n  useEffect(() => {\n    async function loadTimelineList(token) {\n      let list = await Timeline.listTimelines(token);\n      if (list) {\n        dispatch({\n          type: \"list\",\n          payload: list\n        });\n      }\n    }\n    if (authenticated && update) {\n      loadTimelineList(userToken);\n      setUpdate(false);\n    } else {\n      dispatch({\n        type: \"list\",\n        payload: []\n      });\n    }\n  }, [authenticated, update, setUpdate, dispatch, currentUser, userToken]);\n  // TODO this is not being triggered by the 'update' state in the parent\n  // component\n\n  function timelineOption(timeline) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: timeline.id,\n      children: timeline.title\n    }, timeline.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Change display of submit button whether creating or loading\n  let [selection, setSelection] = useState(\"create\");\n  function updateSelection(event) {\n    setSelection(event.target.value);\n  }\n  let loadButtonText = selection === \"create\" ? \"Create\" : \"Load\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"chooser\",\n    onSubmit: loadTimeline,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"select-timeline\",\n      children: \"Select a Timeline:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"select-timeline\",\n      defaultValue: \"create\",\n      onChange: updateSelection,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"create\",\n        children: \"Create New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), timelineList.map(timelineOption)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: loadButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminChooser, \"ZYPBPBNH3dtYPe8apwEoqpECQ0U=\");\n_c = AdminChooser;\nvar _c;\n$RefreshReg$(_c, \"AdminChooser\");","map":{"version":3,"names":["useState","useContext","useEffect","Timeline","UserContext","AdminContext","jsxDEV","_jsxDEV","AdminChooser","_s","userContext","authenticated","get","currentUser","userToken","timelineList","dispatch","set","adminContext","setID","timelineID","update","setUpdate","updateTimelineList","loadTimeline","event","preventDefault","data","FormData","target","id","loadTimelineList","token","list","listTimelines","type","payload","timelineOption","timeline","value","children","title","fileName","_jsxFileName","lineNumber","columnNumber","selection","setSelection","updateSelection","loadButtonText","onSubmit","htmlFor","name","defaultValue","onChange","map","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminChooser.tsx"],"sourcesContent":["// Menu to choose which timeline to load (or create new)\n\nimport { useState, useContext, useEffect } from \"react\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\nimport AdminContext from \"../store/AdminContext\";\n\nexport default function AdminChooser(): React.ReactElement {\n\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser   = userContext.get.currentUser;\n  let userToken     = userContext.get.userToken;\n  let timelineList  = userContext.get.timelineList;\n  let dispatch      = userContext.set;\n\n  let adminContext = useContext(AdminContext);\n  let setID               = adminContext.timelineID.set;\n  let [update, setUpdate] = adminContext.updateTimelineList;\n\n  function loadTimeline(event: React.FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimelineList(token: string): void {\n      let list = await Timeline.listTimelines(token);\n      if (list) {\n        dispatch({ type: \"list\", payload: list });\n      }\n    }\n\n    if (authenticated && update) {\n      loadTimelineList(userToken);\n      setUpdate(false);\n    } else {\n      dispatch({ type: \"list\", payload: [] });\n    }\n  }, [authenticated, update, setUpdate, dispatch, currentUser, userToken]);\n  // TODO this is not being triggered by the 'update' state in the parent\n  // component\n\n\n  function timelineOption(timeline: Timeline): React.ReactElement {\n    return(\n      <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n    );\n  }\n\n  // Change display of submit button whether creating or loading\n  let [selection, setSelection] = useState(\"create\");\n\n  function updateSelection(event: React.FormEvent<HTMLFormElement>): void {\n    setSelection(event.target.value);\n  }\n\n  let loadButtonText = (selection === \"create\") ? \"Create\" : \"Load\";\n\n  return(\n    <form id=\"chooser\" onSubmit={loadTimeline}>\n      <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n      <select name=\"select-timeline\" \n        defaultValue=\"create\" \n        onChange={updateSelection}>\n        <option value=\"create\">Create New</option>\n        { timelineList.map(timelineOption) }\n      </select>\n      <button type=\"submit\">{ loadButtonText }</button>\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}