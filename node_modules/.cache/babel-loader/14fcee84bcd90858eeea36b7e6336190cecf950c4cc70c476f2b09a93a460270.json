{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n  const defaultMetadata = useCallback(() => {\n    return {\n      title: '',\n      description: '',\n      keywordString: [],\n      creator: currentUser.username\n    };\n  }, [currentUser.username]);\n  let [metadata, setMetadata] = useState(defaultMetadata);\n  let [facts, setFacts] = useState([]);\n  const startingTimeline = useCallback(() => {\n    return new Timeline({\n      ...defaultMetadata\n    });\n  }, [defaultMetadata]);\n  let [timeline, setTimeline] = useState(startingTimeline());\n  console.debug(timeline);\n  function updateTimeline() {\n    setTimeline({\n      ...metadata,\n      facts: facts\n    });\n  }\n  function resetTimeline() {\n    setTimeline(startingTimeline());\n  }\n  let [saveReady, setSaveReady] = useState(false);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  // TODO update when new timeline created\n\n  let [timelineID, setTimelineID] = useState(null);\n  // TODO replace with field of timeline?\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        var _Timeline$creator, _Timeline$creator2;\n        let json = await response.json();\n        console.debug(json);\n        let newTimeline = new Timeline({\n          id: json.id,\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: (_Timeline$creator = Timeline.creator) !== null && _Timeline$creator !== void 0 ? _Timeline$creator : currentUser.username,\n          facts: json.facts.map(f => Fact.newFromYear(f))\n        });\n        setMetadata({\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: (_Timeline$creator2 = Timeline.creator) !== null && _Timeline$creator2 !== void 0 ? _Timeline$creator2 : currentUser.username\n        });\n        setFacts(json.facts.map(f => Fact.newFromYear(f)));\n        updateTimeline();\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        resetTimeline();\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, resetTimeline, updateTimeline, userToken]);\n  function Chooser() {\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  function MetadataPanel() {\n    function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      setMetadata({\n        title: data.get(\"title\"),\n        description: data.get(\"description\"),\n        keywordString: data.get(\"keywords\"),\n        creator: data.get(\"creator\")\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(metadata);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        onSubmit: updateMetadata,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              defaultValue: metadata.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              defaultValue: metadata.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              defaultValue: metadata.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              defaultValue: metadata.creator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Metadata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          setFacts(prev => Fact.remove(prev, item));\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        setTestCard(item);\n        setFacts(prev => Fact.remove(prev, item));\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: editFact,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: deleteFact,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Enter timeline events using the form below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: (facts === null || facts === void 0 ? void 0 : facts.length) > 0 ? facts.map(currentFact) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), timeline ? null : /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  }\n  const startingCard = () => new Fact({\n    date: new Date(),\n    info: \"Description\",\n    img: \"https://picsum.photos/200.jpg\"\n  });\n  let [testCard, setTestCard] = useState(startingCard());\n  function resetTestCard() {\n    setTestCard(startingCard());\n  }\n  function NewFactForm() {\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        setFacts(prev => Fact.append(prev, testCard));\n        console.debug(\"Added fact to timeline\");\n        resetTestCard();\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": fact.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: fact.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: fact.img,\n          src: fact.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: fact.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this);\n    }\n    function setDate(event) {\n      let newDate = new Date();\n      newDate.setFullYear(Number(event.target.value));\n      setTestCard(prev => new Fact({\n        ...prev,\n        date: newDate\n      }));\n    }\n    function setInfo(event) {\n      let newInfo = event.target.value;\n      setTestCard(prev => new Fact({\n        ...prev,\n        info: newInfo\n      }));\n    }\n    function setImg(event) {\n      let newImg = event.target.value;\n      setTestCard(prev => new Fact({\n        ...prev,\n        img: newImg\n      }));\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: startingCard().year,\n              onChange: setDate,\n              defaultValue: testCard.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onChange: setInfo,\n              defaultValue: testCard.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              onChange: setImg,\n              defaultValue: testCard.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: testCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this);\n  }\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timeline.title}'`);\n    setTimeline(new Timeline({\n      ...metadata,\n      facts: facts\n    }));\n    setSaveReady(true);\n  }\n  function ResetButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset\",\n      type: \"button\",\n      onClick: resetTimeline,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTimeline(startingTimeline());\n    }\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    }\n  }, [saveReady, timeline, currentUser, userToken]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Chronoquiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"wu7gu6iAeCKQU/sY8E1fN+ug9ZQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useContext","useEffect","useCallback","useNavigate","User","Fact","Timeline","UserContext","jsxDEV","_jsxDEV","Create","_s","userContext","authenticated","get","currentUser","userToken","navigate","defaultMetadata","title","description","keywordString","creator","username","metadata","setMetadata","facts","setFacts","startingTimeline","timeline","setTimeline","console","debug","updateTimeline","resetTimeline","saveReady","setSaveReady","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","event","preventDefault","data","FormData","target","id","response","fetch","SERVER","method","headers","Headers","ok","_Timeline$creator","_Timeline$creator2","json","newTimeline","keywords","parseKeywords","map","f","newFromYear","status","statusText","Chooser","timelineOption","value","onSubmit","for","name","defaultValue","type","MetadataPanel","updateMetadata","log","htmlFor","CurrentFactsPanel","currentFact","item","deleteFact","window","confirm","date","getFullYear","prev","remove","editFact","setTestCard","onClick","year","info","img","crypto","randomUUID","length","startingCard","Date","testCard","resetTestCard","NewFactForm","newFact","append","CardPreview","fact","alt","src","setDate","newDate","setFullYear","Number","setInfo","newInfo","setImg","newImg","max","onChange","SaveButton","saveTimeline","action","ResetButton","postTimeline","body","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nexport default function Create() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n\n  const defaultMetadata = useCallback(() => {\n    return {\n      title: '',\n      description: '',\n      keywordString: [],\n      creator: currentUser.username\n    }\n  }, [currentUser.username]);\n\n  let [metadata, setMetadata] = useState(defaultMetadata);\n\n  let [facts, setFacts] = useState([]);\n\n  const startingTimeline = useCallback(() => {\n    return new Timeline({ ...defaultMetadata });\n  }, [defaultMetadata]);\n\n  let [timeline, setTimeline] = useState(startingTimeline());\n  console.debug(timeline);\n\n  function updateTimeline() {\n    setTimeline({ ...metadata, facts: facts });\n  }\n\n  function resetTimeline() {\n    setTimeline(startingTimeline());\n  }\n\n  let [saveReady, setSaveReady] = useState(false);\n  \n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  // TODO update when new timeline created\n\n  let [timelineID, setTimelineID] = useState(null);\n  // TODO replace with field of timeline?\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n        let newTimeline = new Timeline({\n          id: json.id,\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: Timeline.creator ?? currentUser.username,\n          facts: json.facts.map(f => Fact.newFromYear(f))\n        });\n        setMetadata({\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: Timeline.creator ?? currentUser.username,\n        });\n        setFacts(json.facts.map(f => Fact.newFromYear(f)));\n        updateTimeline();\n\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        resetTimeline();\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, resetTimeline, updateTimeline, userToken]);\n\n\n  function Chooser() {\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label for=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\">\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n\n  function MetadataPanel() {\n        function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      setMetadata({\n        title: data.get(\"title\"),\n        description: data.get(\"description\"),\n        keywordString: data.get(\"keywords\"),\n        creator: data.get(\"creator\")\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(metadata);\n    }\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\" onSubmit={updateMetadata}>\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                defaultValue={metadata.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                defaultValue={metadata.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                defaultValue={metadata.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                defaultValue={metadata.creator}/>\n            </div>\n          </div>\n          <button type=\"submit\">Update Metadata</button>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n\n    function currentFact(item) {\n\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          setFacts(prev => Fact.remove(prev, item));\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        setTestCard(item);\n        setFacts(prev => Fact.remove(prev, item));\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td><button type=\"button\" onClick={editFact}>Edit</button>\n            <button type=\"button\" onClick={deleteFact}>Delete</button></td>\n          <td>{item.id}</td>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <p className=\"instructions\">Enter timeline events using the form below</p>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>ID</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { facts?.length > 0 ? facts.map(currentFact) : null }\n          </tbody>\n        </table>\n        { timeline ? null : <Instructions /> }\n      </section>\n    );\n  }\n\n  const startingCard = () => new Fact({\n    date: new Date(),\n    info: \"Description\", \n    img: \"https://picsum.photos/200.jpg\"\n  });\n\n  let [testCard, setTestCard] = useState(startingCard());\n \n  function resetTestCard() {\n    setTestCard(startingCard());\n  }\n\n  function NewFactForm() {\n\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        setFacts(prev => Fact.append(prev, testCard));\n        console.debug(\"Added fact to timeline\");\n        resetTestCard();\n      }\n    }\n\n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={fact.year} data-noselect=\"noselect\">\n          <span className=\"date\">{fact.year}</span>\n          <img alt={fact.img} src={fact.img} />\n          <span className=\"info\">{fact.info}</span>\n        </div>\n      );\n    }\n\n    function setDate(event) {\n      let newDate = new Date();\n      newDate.setFullYear(Number(event.target.value));\n      setTestCard(prev => new Fact({ ...prev, date: newDate }));\n    }\n\n    function setInfo(event) {\n      let newInfo = event.target.value;\n      setTestCard(prev => new Fact({ ...prev, info: newInfo }));\n    }\n\n    function setImg(event) {\n      let newImg = event.target.value;\n      setTestCard(prev => new Fact({ ...prev, img: newImg }));\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={startingCard().year}\n                onChange={setDate}\n                defaultValue={testCard.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onChange={setInfo}\n                defaultValue={testCard.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onChange={setImg}\n                defaultValue={testCard.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={testCard} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function SaveButton() {\n    return(\n      <button id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timeline.title}'`);\n    \n    setTimeline(new Timeline({ ...metadata, facts: facts }));\n    setSaveReady(true);\n  }\n\n  function ResetButton() {\n    return(\n      <button id=\"reset\" type=\"button\" onClick={resetTimeline}>Reset</button>\n    );\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTimeline(startingTimeline());\n    }\n  }\n\n   \n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    } \n  }, [saveReady, timeline, currentUser, userToken]);\n\n\n  return(\n    <main>\n      <h1>Create a Chronoquiz</h1>\n      <Instructions />\n      <Chooser />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <SaveButton />\n      <ResetButton />\n    </main>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}