{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _FactList;\nvar _shuffle = /*#__PURE__*/_classPrivateFieldLooseKey(\"shuffle\");\nexport default class FactList {\n  constructor(cards = []) {\n    // PRIVATE METHODS\n    // Shuffle the array, using the Fisher-Yates/Knuth shuffle\n    // (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n    Object.defineProperty(this, _shuffle, {\n      value: _shuffle2\n    });\n    this.items = void 0;\n    this.items = cards;\n  }\n  // PUBLIC METHODS\n  setupClues() {\n    //  this.#setColors();\n    _classPrivateFieldLooseBase(this, _shuffle)[_shuffle]();\n  }\n  isEmpty() {\n    return this.items.length === 0;\n  }\n  allButLast() {\n    return this.items.slice(0, -1);\n  }\n  last() {\n    return this.items.at(-1);\n  }\n}\n_FactList = FactList;\nfunction _shuffle2() {\n  function randomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  let items = this.items;\n  for (let i = items.length - 1; i > 0; --i) {\n    let j = randomInt(i);\n    [items[i], items[j]] = [items[j], items[i]];\n  }\n  return this;\n}","map":{"version":3,"names":["FactList","constructor","cards","Object","defineProperty","_shuffle","value","_shuffle2","items","setupClues","_classPrivateFieldLooseBase","isEmpty","length","allButLast","slice","last","at","_FactList","randomInt","max","Math","floor","random","i","j"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/FactList.tsx"],"sourcesContent":["import Card from \"Card\";\n\nexport default class FactList {\n  items: Array<Card>;\n\n  constructor(cards: Array<Card> = []) {\n    this.items = cards;\n  }\n\n  // PRIVATE METHODS\n  \n  // Shuffle the array, using the Fisher-Yates/Knuth shuffle\n  // (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n  #shuffle(): FactList {\n    \n    function randomInt(max: number): number {\n      return Math.floor(Math.random() * max);\n    } \n\n    let items = this.items;\n\n    for (let i = items.length - 1; i > 0; --i) {\n      let j = randomInt(i);\n      [items[i], items[j]] = [items[j], items[i]];\n    }\n    return this;\n  }\n\n  // PUBLIC METHODS\n  setupClues() {\n    //  this.#setColors();\n    this.#shuffle();\n  }\n\n  isEmpty(): boolean {\n    return this.items.length === 0;\n  }\n\n  allButLast(): Array<Card> {\n    return this.items.slice(0, -1);\n  }\n\n  last(): Card {\n    return this.items.at(-1);\n  }\n}\n\n"],"mappings":";;;;AAEA,eAAe,MAAMA,QAAQ,CAAC;EAG5BC,WAAWA,CAACC,KAAkB,GAAG,EAAE,EAAE;IAIrC;IAEA;IACA;IAAAC,MAAA,CAAAC,cAAA,OAAAC,QAAA;MAAAC,KAAA,EAAAC;IAAA;IAAA,KATAC,KAAK;IAGH,IAAI,CAACA,KAAK,GAAGN,KAAK;EACpB;EAqBA;EACAO,UAAUA,CAAA,EAAG;IACX;IACAC,2BAAA,KAAI,EAAAL,QAAA,EAAAA,QAAA;EACN;EAEAM,OAAOA,CAAA,EAAY;IACjB,OAAO,IAAI,CAACH,KAAK,CAACI,MAAM,KAAK,CAAC;EAChC;EAEAC,UAAUA,CAAA,EAAgB;IACxB,OAAO,IAAI,CAACL,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC;EAEAC,IAAIA,CAAA,EAAS;IACX,OAAO,IAAI,CAACP,KAAK,CAACQ,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1B;AACF;AAACC,SAAA,GA3CoBjB,QAAQ;AAAA,SAAAO,UAAA,EAWN;EAEnB,SAASW,SAASA,CAACC,GAAW,EAAU;IACtC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,GAAG,CAAC;EACxC;EAEA,IAAIX,KAAK,GAAG,IAAI,CAACA,KAAK;EAEtB,KAAK,IAAIe,CAAC,GAAGf,KAAK,CAACI,MAAM,GAAG,CAAC,EAAEW,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;IACzC,IAAIC,CAAC,GAAGN,SAAS,CAACK,CAAC,CAAC;IACpB,CAACf,KAAK,CAACe,CAAC,CAAC,EAAEf,KAAK,CAACgB,CAAC,CAAC,CAAC,GAAG,CAAChB,KAAK,CAACgB,CAAC,CAAC,EAAEhB,KAAK,CAACe,CAAC,CAAC,CAAC;EAC7C;EACA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}