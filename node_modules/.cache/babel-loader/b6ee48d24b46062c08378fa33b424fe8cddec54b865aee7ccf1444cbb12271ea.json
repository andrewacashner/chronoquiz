{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx\",\n  _s2 = $RefreshSig$();\n/*\n * TODO\n * - We can create timeline and add items, but clicking Save sends timeline\n * creation request to server with 0 event items.\n * - On server, create OR update\n */\n\nimport { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"../classes/User\";\nimport TimelineEvent from \"../classes/TimelineEvent\";\nimport FactList from \"../classes/FactList\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Timeline {\n  constructor({\n    title,\n    description = \"\",\n    keywords = [],\n    creator = \"\",\n    events = []\n  }) {\n    this.title = void 0;\n    this.description = void 0;\n    this.keywords = void 0;\n    this.creator = void 0;\n    this.events = void 0;\n    this.title = title;\n    this.description = description;\n    this.keywords = keywords;\n    this.creator = creator;\n    this.events = events;\n  }\n  static parseKeywords(inputStr) {\n    return inputStr.split(\";\").map(s => s.trim());\n  }\n  static keywordString(keywords) {\n    return keywords.join(\"; \");\n  }\n  addFact(card) {\n    return new Timeline({\n      ...this,\n      events: [...this.events.cards, card] // TODO sort by date\n    });\n  }\n  json() {\n    return JSON.stringify({\n      title: this.title,\n      description: this.description,\n      keywords: this.keywords,\n      creator: this.creator,\n      events: this.events.json()\n    });\n  }\n}\nexport default function Create() {\n  _s2();\n  var _s = $RefreshSig$();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n  let [timeline, setTimeline] = useState(null);\n  let [saveReady, setSaveReady] = useState(false);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n  let [title, setTitle] = useState(\"\");\n  let [description, setDescription] = useState(\"\");\n  let [keywords, setKeywords] = useState([\"\"]);\n  let [creator, setCreator] = useState(currentUser.username);\n  let [events, setEvents] = useState(new FactList());\n  function updateTimeline() {\n    setTimeline(new Timeline({\n      title: title,\n      description: description,\n      keywords: keywords,\n      creator: creator,\n      events: events\n    }));\n  }\n  function MetadataPanel() {\n    function setField(setFn) {\n      return function (event) {\n        setFn(event.target.value);\n        updateTimeline();\n      };\n    }\n    function setKeywordsParsed(event) {\n      setKeywords(Timeline.parseKeywords(event.target.value));\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"timelinePanel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formInputBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            onBlur: event => setTitle(event.target.value),\n            defaultValue: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            onBlur: setField(setDescription),\n            defaultValue: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"keywords\",\n            children: \"Keywords (separated with semicolons)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"keywords\",\n            onBlur: setKeywordsParsed,\n            defaultValue: Timeline.keywordString(keywords)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"creator\",\n            children: \"Creator (for public display; default: your username)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"creator\",\n            onBlur: setField(setCreator),\n            defaultValue: creator\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Enter timeline events using the form below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: events ? events.map(currentFact) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), events ? null : /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n  function NewFactForm() {\n    _s();\n    let [testCardDate, setTestCardDate] = useState(new Date());\n    let [testCardInfo, setTestCardInfo] = useState(\"Description\");\n    let [testCardImg, setTestCardImg] = useState(\"https://picsum.photos/200.jpg\");\n    function newFact(event) {\n      if (testCardDate && testCardInfo) {\n        let newCard = new TimelineEvent(testCardDate, testCardInfo, testCardImg);\n        setEvents(prev => prev.addFact(newCard));\n        console.debug(\"Added fact to timeline\");\n        updateTimeline();\n      }\n    }\n    function CardPreview({\n      date,\n      info,\n      img\n    }) {\n      let year = date.getFullYear();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: img,\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this);\n    }\n    function setDate(event) {\n      let date = new Date();\n      date.setFullYear(Number(event.target.value));\n      setTestCardDate(date);\n    }\n    function setInfo(event) {\n      setTestCardInfo(event.target.value);\n    }\n    function setImg(event) {\n      setTestCardImg(event.target.value);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addEventForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              onChange: setDate,\n              defaultValue: testCardDate.getFullYear()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onChange: setInfo,\n              defaultValue: testCardInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              onChange: setImg,\n              defaultValue: testCardImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            date: testCardDate,\n            info: testCardInfo,\n            img: testCardImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this);\n  }\n  _s(NewFactForm, \"EXk1+Pwfyv/TATxEhVvH9EmHPXc=\");\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this);\n  }\n  function saveTimeline(event) {\n    updateTimeline();\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${title}'`);\n    setSaveReady(true);\n  }\n  function ResetButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset\",\n      type: \"button\",\n      onClick: resetTimeline,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTitle(\"\");\n      setDescription(\"\");\n      setKeywords([\"\"]);\n      setCreator(currentUser.username);\n      setEvents(new FactList());\n      setTimeline(null);\n    }\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.events);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timelines/create/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    }\n  }, [saveReady, timeline, currentUser, userToken]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Chronoquiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n}\n_s2(Create, \"/Xs6X6vD+6PwIoCr8ElayZGxihE=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useContext","useEffect","useNavigate","User","TimelineEvent","FactList","UserContext","jsxDEV","_jsxDEV","Timeline","constructor","title","description","keywords","creator","events","parseKeywords","inputStr","split","map","s","trim","keywordString","join","addFact","card","cards","json","JSON","stringify","Create","_s2","_s","$RefreshSig$","userContext","authenticated","get","currentUser","userToken","navigate","timeline","setTimeline","saveReady","setSaveReady","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","setTitle","setDescription","setKeywords","setCreator","username","setEvents","updateTimeline","MetadataPanel","setField","setFn","event","target","value","setKeywordsParsed","htmlFor","type","name","onBlur","defaultValue","CurrentFactsPanel","currentFact","item","year","info","img","crypto","randomUUID","id","NewFactForm","testCardDate","setTestCardDate","Date","testCardInfo","setTestCardInfo","testCardImg","setTestCardImg","newFact","newCard","prev","console","debug","CardPreview","date","getFullYear","alt","src","setDate","setFullYear","Number","setInfo","setImg","onChange","onClick","SaveButton","saveTimeline","action","ResetButton","resetTimeline","window","confirm","postTimeline","user","token","response","fetch","SERVER","method","headers","Headers","body","ok","status","statusText","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx"],"sourcesContent":["/*\n * TODO\n * - We can create timeline and add items, but clicking Save sends timeline\n * creation request to server with 0 event items.\n * - On server, create OR update\n */\n\nimport { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport TimelineEvent from \"../classes/TimelineEvent\";\nimport FactList from \"../classes/FactList\";\n\nimport UserContext from \"../store/UserContext\";\n\ninterface TimelineInput {\n  title: string;\n  description: string;\n  keywords: Array<string>;\n  creator: string;\n  events: FactList;\n}\n\nclass Timeline {\n  title: string;\n  description: string;\n  keywords: Array<string>;\n  creator: string;\n  events: Array<TimelineEvent>;\n\n  constructor({ \n    title, \n    description = \"\", \n    keywords = [], \n    creator = \"\", \n    events = []\n  }: TimelineInput) {\n    this.title = title;\n    this.description = description;\n    this.keywords = keywords;\n    this.creator = creator;\n    this.events = events;\n  }\n\n  static parseKeywords(inputStr: string): Array<string> {\n    return inputStr.split(\";\").map(s => s.trim());\n  }\n\n  static keywordString(keywords: Array<string>) {\n    return keywords.join(\"; \");\n  }\n\n  addFact(card: Card): Timeline {\n    return new Timeline({\n      ...this,\n      events: [...this.events.cards, card] // TODO sort by date\n    });\n  }\n\n  json() {\n    return JSON.stringify({\n      title: this.title,\n      description: this.description,\n      keywords: this.keywords,\n      creator: this.creator,\n      events: this.events.json()\n     });\n  }\n\n}\n\nexport default function Create() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n\n  let [timeline, setTimeline] = useState(null);\n  let [saveReady, setSaveReady] = useState(false);\n\n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n  \n  let [title, setTitle] = useState(\"\");\n  let [description, setDescription] = useState(\"\");\n  let [keywords, setKeywords] = useState([\"\"]);\n  let [creator, setCreator] = useState(currentUser.username);\n  let [events, setEvents] = useState(new FactList());\n\n  function updateTimeline() {\n    setTimeline(new Timeline({\n      title: title,\n      description: description,\n      keywords: keywords,\n      creator: creator,\n      events: events\n    }));\n  }\n\n  function MetadataPanel() {\n\n    function setField(setFn) {\n      return function(event) {\n        setFn(event.target.value);\n        updateTimeline();\n      }\n    }\n\n    function setKeywordsParsed(event) {\n      setKeywords(Timeline.parseKeywords(event.target.value));\n    }\n\n    return(\n      <form className=\"timelinePanel\">\n        <div className=\"formInputBlock\">\n          <div className=\"formItem\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" name=\"title\" \n              onBlur={event => setTitle(event.target.value)}\n              defaultValue={title} />\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"description\">Description</label>\n            <input type=\"text\" name=\"description\" \n              onBlur={setField(setDescription)}\n              defaultValue={description} />\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n            <input type=\"text\" name=\"keywords\" \n              onBlur={setKeywordsParsed}\n              defaultValue={Timeline.keywordString(keywords)} />\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n            <input type=\"text\" name=\"creator\" \n              onBlur={setField(setCreator)}\n              defaultValue={creator}/>\n          </div>\n        </div>\n      </form>\n    );\n  }\n\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <p className=\"instructions\">Enter timeline events using the form below</p>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { events ? events.map(currentFact) : null }\n          </tbody>\n        </table>\n        { events ? null : <Instructions /> }\n      </section>\n    );\n  }\n\n  function NewFactForm() {\n\n    let [testCardDate, setTestCardDate] = useState(new Date());\n    let [testCardInfo, setTestCardInfo] = useState(\"Description\");\n    let [testCardImg, setTestCardImg] = useState(\"https://picsum.photos/200.jpg\");\n\n    function newFact(event) {\n      if (testCardDate && testCardInfo) {\n        let newCard = new TimelineEvent(testCardDate, \n                                        testCardInfo, \n                                        testCardImg);\n        setEvents(prev => prev.addFact(newCard));\n        console.debug(\"Added fact to timeline\");\n        updateTimeline();\n      }\n    }\n\n    function CardPreview({ date, info, img }) {\n      let year = date.getFullYear();\n      return(\n        <div className=\"card\" data-when={year} data-noselect=\"noselect\">\n          <span className=\"date\">{year}</span>\n          <img alt={img} src={img} />\n          <span className=\"info\">{info}</span>\n        </div>\n      );\n    }\n\n    function setDate(event) {\n      let date = new Date();\n      date.setFullYear(Number(event.target.value));\n      setTestCardDate(date);\n    }\n\n    function setInfo(event) {\n      setTestCardInfo(event.target.value);\n    }\n\n    function setImg(event) {\n      setTestCardImg(event.target.value);\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addEventForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                onChange={setDate}\n                defaultValue={testCardDate.getFullYear()} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onChange={setInfo}\n                defaultValue={testCardInfo} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onChange={setImg}\n                defaultValue={testCardImg} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview \n              date={testCardDate} \n              info={testCardInfo} \n              img={testCardImg} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function SaveButton() {\n    return(\n      <button id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n \n  function saveTimeline(event) {\n    updateTimeline();\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${title}'`);\n\n    setSaveReady(true);\n  }\n\n  function ResetButton() {\n    return(\n      <button id=\"reset\" type=\"button\" onClick={resetTimeline}>Reset</button>\n    );\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTitle(\"\");\n      setDescription(\"\");\n      setKeywords([\"\"]);\n      setCreator(currentUser.username);\n      setEvents(new FactList());\n      setTimeline(null);\n    }\n  }\n \n \n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.events);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timelines/create/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    } \n  }, [saveReady, timeline, currentUser, userToken]);\n\n\n  return(\n    <main>\n      <h1>Create a Chronoquiz</h1>\n      <Instructions />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <SaveButton />\n      <ResetButton />\n    </main>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}