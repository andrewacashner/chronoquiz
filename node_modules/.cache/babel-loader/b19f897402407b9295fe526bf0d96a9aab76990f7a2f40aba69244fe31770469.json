{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\nfunction userUploadUrl(files) {\n  return URL.createObjectURL(files[0]);\n}\nfunction getInputUrl(source, files) {\n  let url = \"\";\n  if (source) {\n    if (files.length > 0) {\n      url = userUploadUrl(files);\n    } else {\n      url = `input/${source}.json`;\n    }\n  }\n  return url;\n}\nasync function cardArrayFromJson(json) {\n  let cards = [];\n  for (let entry of json) {\n    try {\n      let validCard = await Card.newSafeCard(entry);\n      if (validCard && validCard.isSafe) {\n        cards.push(validCard);\n      } else {\n        throw new Error(`Faulty card input {date: ${entry.date}, info: ${entry.info}}; skipping`);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return cards;\n}\n\n// TODO doesn't work\n// TODO return type\nfunction useTimelineSelection(event) {\n  _s();\n  useEffect(() => {\n    async function loadTimeline(event = null, setGameFn) {\n      let files = event.currentTarget.fileInput.files;\n      let source = event.currentTarget.source.value;\n      let url = getInputUrl(source, files);\n      if (url) {\n        console.log(`Loading file ${url}`);\n        let cards = [];\n        let response = await fetch(url).catch(e => {\n          console.error(e);\n          return cards;\n        });\n        let data = await response.json().catch(e => {\n          console.error(e);\n          return cards;\n        });\n        cards = await cardArrayFromJson(data).catch(e => {\n          console.error(e);\n          throw new Error(\"Could not create cards from JSON input\");\n        });\n        cardList = new FactList(cards);\n        setGameFn(prev => new Game(cardList));\n      }\n    }\n    loadTimeline(event);\n  }, [event]);\n  return loadTimeline;\n}\n_s(useTimelineSelection, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useTimelineSelection;","map":{"version":3,"names":["useEffect","Card","FactList","userUploadUrl","files","URL","createObjectURL","getInputUrl","source","url","length","cardArrayFromJson","json","cards","entry","validCard","newSafeCard","isSafe","push","Error","date","info","e","console","error","useTimelineSelection","event","_s","loadTimeline","setGameFn","currentTarget","fileInput","value","log","response","fetch","catch","data","cardList","prev","Game"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/hooks/useTimelineSelection.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\n\nfunction userUploadUrl(files: FileList): string {\n  return URL.createObjectURL(files[0]);\n}\n\nfunction getInputUrl(source: string, files: FileList): string {\n  let url = \"\";\n  if (source) {\n    if (files.length > 0) {\n      url = userUploadUrl(files);\n    } else {\n      url = `input/${source}.json`;\n    }\n  }\n  return url;\n}\n\nasync function cardArrayFromJson(json: Array<{date, info}>): Array<Card> {\n  let cards = [];\n  for (let entry of json) {\n    try {\n      let validCard = await Card.newSafeCard(entry);\n      if (validCard && validCard.isSafe) {\n        cards.push(validCard);\n      } else {\n        throw new Error(`Faulty card input {date: ${entry.date}, info: ${entry.info}}; skipping`);\n      } \n    } catch(e) {\n      console.error(e);\n    }\n  }\n  return cards;\n}\n\n\n\n// TODO doesn't work\n// TODO return type\nfunction useTimelineSelection(event: React.FormEvent<HTMLFormElement>): (event: React.FormEvent<HTMLFormElement>, setGameFn: (Game) => void) => void {\n\n  useEffect(() => {\n    async function loadTimeline(\n      event: React.FormEvent<HTMLFormElement> = null,\n      setGameFn: (Game) => void\n    ): FactList {\n\n      let files = event.currentTarget.fileInput.files as FileList;\n      let source = event.currentTarget.source.value as string;\n      let url = getInputUrl(source, files);\n\n      if (url) {\n        console.log(`Loading file ${url}`);\n        let cards = [];\n\n        let response = await fetch(url).catch(e => {\n          console.error(e);\n          return cards;\n        });\n\n        let data = await response.json().catch(e => {\n          console.error(e);\n          return cards;\n        });\n\n        cards = await cardArrayFromJson(data).catch(e => {\n          console.error(e);\n          throw new Error(\"Could not create cards from JSON input\");\n        });\n\n        cardList = new FactList(cards);\n        setGameFn(prev => new Game(cardList));\n      }\n    }\n    loadTimeline(event);\n  }, [event]);\n\n  return loadTimeline;\n}\n\nexport default useTimelineSelection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}