{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\nlet [clues, setClues] = useState(new FactList());\nfunction userUploadUrl(files) {\n  return URL.createObjectURL(files[0]);\n}\nfunction getInputUrl(source, files) {\n  let url = \"\";\n  if (source) {\n    if (files.length > 0) {\n      url = userUploadUrl(files);\n    } else {\n      url = `input/${source}.json`;\n    }\n  }\n  return url;\n}\nasync function cardArrayFromJson(json) {\n  let cards = [];\n  for (let entry of json) {\n    try {\n      let validCard = await Card.newSafeCard(entry);\n      if (validCard && validCard.isSafe) {\n        cards.push(validCard);\n      } else {\n        throw new Error(`Faulty card input {date: ${entry.date}, info: ${entry.info}}; skipping`);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return cards;\n}\nasync function loadTimeline(url) {\n  if (url) {\n    console.log(`Loading file ${url}`);\n    let cards = [];\n    let response = await fetch(url).catch(e => {\n      console.error(e);\n      return cards;\n    });\n    let data = await response.json().catch(e => {\n      console.error(e);\n      return cards;\n    });\n    cards = await cardArrayFromJson(data).catch(e => {\n      console.error(e);\n      throw new Error(\"Could not create cards from JSON input\");\n    });\n    return new FactList(cards);\n  }\n}\nfunction useTimelineSelection(event) {\n  _s();\n  let files = event.currentTarget.fileInput.files;\n  let source = event.currentTarget.source.value;\n  let url = getInputUrl(source, files);\n  let cards = useEffect(() => loadTimeline(url), []);\n  setCards(prev => cards);\n}\n_s(useTimelineSelection, \"r05/wi+NKWWSZGC87gWCikBrJ8M=\");\nexport default useTimelineSelection;","map":{"version":3,"names":["useState","Card","FactList","clues","setClues","userUploadUrl","files","URL","createObjectURL","getInputUrl","source","url","length","cardArrayFromJson","json","cards","entry","validCard","newSafeCard","isSafe","push","Error","date","info","e","console","error","loadTimeline","log","response","fetch","catch","data","useTimelineSelection","event","_s","currentTarget","fileInput","value","useEffect","setCards","prev"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/hooks/useTimelineSelection.tsx"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\n\nlet [clues, setClues] = useState(new FactList());\n\nfunction userUploadUrl(files: FileList): string {\n  return URL.createObjectURL(files[0]);\n}\n\nfunction getInputUrl(source: string, files: FileList): string {\n  let url = \"\";\n  if (source) {\n    if (files.length > 0) {\n      url = userUploadUrl(files);\n    } else {\n      url = `input/${source}.json`;\n    }\n  }\n  return url;\n}\n\nasync function cardArrayFromJson(json: Array<{date, info}>): Array<Card> {\n  let cards = [];\n  for (let entry of json) {\n    try {\n      let validCard = await Card.newSafeCard(entry);\n      if (validCard && validCard.isSafe) {\n        cards.push(validCard);\n      } else {\n        throw new Error(`Faulty card input {date: ${entry.date}, info: ${entry.info}}; skipping`);\n      } \n    } catch(e) {\n      console.error(e);\n    }\n  }\n  return cards;\n}\n\nasync function loadTimeline(url: string): FactList {\n  if (url) {\n    console.log(`Loading file ${url}`);\n    let cards = [];\n\n    let response = await fetch(url).catch(e => {\n      console.error(e);\n      return cards;\n    });\n\n    let data = await response.json().catch(e => {\n      console.error(e);\n      return cards;\n    });\n\n    cards = await cardArrayFromJson(data).catch(e => {\n      console.error(e);\n      throw new Error(\"Could not create cards from JSON input\");\n    });\n\n    return new FactList(cards);\n  }\n}\n\nfunction useTimelineSelection(event: React.FormEvent<HTMLFormElement>):  void {\n\n  let files = event.currentTarget.fileInput.files as FileList;\n  let source = event.currentTarget.source.value as string;\n  let url = getInputUrl(source, files);\n\n  let cards = useEffect(() => loadTimeline(url), []);\n\n  setCards(prev => cards);\n}\n\nexport default useTimelineSelection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}