{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminPanel.tsx\",\n  _s3 = $RefreshSig$();\nimport { useState, useContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport UploadForm from \"./UploadForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultTimeline = new Timeline({\n  title: '',\n  description: '',\n  keyword: [],\n  creator: '',\n  facts: []\n});\nfunction timelineReducer(state, action) {\n  let obj = action.payload;\n  let newState = null;\n  switch (action.type) {\n    case \"set\":\n      newState = new Timeline({\n        ...state,\n        ...obj\n      });\n      break;\n    case \"reset\":\n      newState = defaultTimeline;\n      break;\n    case \"addFact\":\n      newState = state.addFact(obj.fact);\n      break;\n    case \"removeFact\":\n      newState = state.removeFact(obj.fact);\n      break;\n    case \"addFacts\":\n      newState = state.addFacts(obj);\n      break;\n    default:\n      newState = state;\n  }\n  return newState;\n}\nconst defaultFact = new Fact({\n  date: new Date(),\n  info: \"Description\",\n  img: \"https://picsum.photos/200.jpg\"\n});\nfunction factReducer(state, action) {\n  let obj = action.payload;\n  let newState = null;\n  switch (action.type) {\n    case \"set\":\n      newState = new Fact({\n        ...state,\n        ...obj\n      });\n      break;\n    case \"reset\":\n      newState = defaultFact;\n      break;\n    default:\n      newState = state;\n  }\n  ;\n  return newState;\n}\nfunction updateReducer(dispatchFn) {\n  return function (field, setValueFn = null) {\n    return function (event) {\n      let value = event.target.value;\n      let newValue = setValueFn ? setValueFn(value) : value;\n      dispatchFn({\n        type: \"set\",\n        payload: {\n          [field]: newValue\n        }\n      });\n    };\n  };\n}\nexport default function AdminPanel() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser = userContext.get.currentUser;\n  let userToken = userContext.get.userToken;\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, defaultTimeline);\n  let [factState, dispatchFact] = useReducer(factReducer, defaultFact);\n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n  let [initialTimeline, setInitialTimeline] = useState(defaultTimeline);\n  let [saveReady, setSaveReady] = useState(false);\n  let [updateTimelineList, setUpdateTimelineList] = useState(true);\n  let [refresh, setRefresh] = useState(true);\n  function activeStyle(isActive) {\n    return isActive ? \"active\" : \"inactive\";\n  }\n  let [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  useEffect(() => {\n    let status = timelineState && initialTimeline && !timelineState.equals(initialTimeline);\n    if (initialTimeline) {\n      console.debug(initialTimeline);\n    }\n    if (timelineState) {\n      console.debug(timelineState);\n    }\n    setHasUnsavedChanges(status);\n  }, [timelineState, initialTimeline]);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated && updateTimelineList) {\n      loadTimelineList(currentUser, userToken);\n      setUpdateTimelineList(false);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, updateTimelineList, currentUser, userToken]);\n  let [timelineID, setTimelineID] = useState(null);\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      console.debug(`Loading timeline id ${timelineID}`);\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n        let creator = json.creator === \"\" ? currentUser.username : json.creator;\n        let newTimeline = new Timeline({\n          id: json.id,\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: creator,\n          facts: json.facts.map(f => Fact.newFromYear(f))\n        });\n        dispatchTimeline({\n          type: \"set\",\n          payload: newTimeline\n        });\n        setInitialTimeline(newTimeline);\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (!hasUnsavedChanges || window.confirm(\"Your quiz has unsaved changes. Do you want to discard the changes and load a new quiz?\")) {\n        if (timelineID === \"create\") {\n          dispatchTimeline({\n            type: \"reset\"\n          });\n        } else {\n          loadTimeline(timelineID, userToken);\n        }\n        setUpdateTimelineList(true);\n        setRefresh(false);\n        setHasUnsavedChanges(false);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken, refresh]);\n  function Chooser() {\n    _s();\n    function loadTimeline(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      let id = data.get(\"select-timeline\");\n      // TODO if there are no unsaved changes\n      setTimelineID(id);\n    }\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this);\n    }\n    let [currentTimelineSelection, setCurrentTimelineSelection] = useState(\"create\");\n    function updateSelection(event) {\n      setCurrentTimelineSelection(event.target.value);\n    }\n    let loadButtonText = currentTimelineSelection === \"create\" ? \"Create\" : \"Load\";\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        onChange: updateSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: loadButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  }\n  _s(Chooser, \"ECb/8ZRfSZVmeJH6rLZNuxC5EmQ=\");\n  function MetadataPanel() {\n    let creator = timelineState.creator === \"\" ? currentUser.username : timelineState.creator;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              onBlur: updateTimeline(\"title\"),\n              defaultValue: timelineState.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              onBlur: updateTimeline(\"description\"),\n              defaultValue: timelineState.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              onBlur: updateTimeline(\"keywords\", Timeline.parseKeywords),\n              defaultValue: timelineState.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              onBlur: updateTimeline(\"creator\"),\n              defaultValue: creator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact?\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({\n            type: \"removeFact\",\n            payload: {\n              fact: item\n            }\n          });\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({\n          type: \"removeFact\",\n          payload: {\n            fact: item\n          }\n        });\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FactListControls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: editFact,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: deleteFact,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: String(item.year)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instructions\",\n          children: \"Enter timeline events manually or upload the data using the forms below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n          dispatch: dispatchTimeline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timelineState.facts.map(currentFact)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this);\n  }\n  function NewFactForm() {\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: {\n            fact: factState\n          }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({\n          type: \"reset\"\n        });\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": factState.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: factState.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: factState.img,\n          src: factState.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: factState.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this);\n    }\n    function dateFromYear(year) {\n      let date = new Date();\n      date.setFullYear(year);\n      return date;\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: defaultFact.year,\n              onChange: updateFact(\"date\", dateFromYear),\n              defaultValue: factState.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onBlur: updateFact(\"info\"),\n              defaultValue: factState.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              onBlur: updateFact(\"img\"),\n              defaultValue: factState.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: factState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this);\n  }\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: activeStyle(hasUnsavedChanges),\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n    setHasUnsavedChanges(false);\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n      setUpdateTimelineList(true);\n    }\n  }, [saveReady, timelineState, currentUser, userToken]);\n  function DeleteTimelineButton() {\n    _s2();\n    let [timelineToDelete, setTimelineToDelete] = useState(null);\n    function deleteTimeline() {\n      if (window.confirm(\"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\")) {\n        console.debug(timelineID);\n        setTimelineToDelete(timelineID);\n      }\n    }\n    useEffect(() => {\n      async function requestDeletion(timelineID, token) {\n        let result = false;\n        let response = await fetch(`${User.SERVER}/timelines/${timelineID}/`, {\n          method: \"DELETE\",\n          headers: new Headers({\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Token ${token}`\n          })\n        });\n        if (response.ok) {\n          let json = await response.json();\n          console.debug(json);\n          result = true;\n        } else {\n          console.debug(`Could not delete timeline with id ${timelineID}: Server status ${response.status}, ${response.statusText}`);\n          result = false;\n        }\n        return result;\n      }\n      if (timelineToDelete !== null) {\n        console.debug(`Deleting timeline with id ${timelineToDelete}`);\n        if (timelineID === \"create\") {\n          dispatchTimeline({\n            type: \"reset\"\n          });\n        } else {\n          let deleted = requestDeletion(timelineToDelete, userToken);\n          if (deleted) {\n            dispatchTimeline({\n              type: \"reset\"\n            });\n            setUpdateTimelineList(true);\n          }\n        }\n        setTimelineToDelete(null);\n      }\n    }, [timelineToDelete]);\n    let msg = timelineID === \"create\" ? \"Reset Quiz\" : \"Delete Quiz\";\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"deleteTimeline\",\n      type: \"button\",\n      onClick: deleteTimeline,\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this);\n  }\n  _s2(DeleteTimelineButton, \"rwotnil7EzBwzm0zKNHwJYsHVHg=\");\n  function DiscardChangesButton() {\n    function discardChanges(event) {\n      setRefresh(true);\n    }\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: activeStyle(hasUnsavedChanges),\n      onClick: discardChanges,\n      children: \"Discard Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this);\n  }\n  function Controls() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiscardChangesButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTimelineButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this);\n  }\n  let navigate = useNavigate();\n  if (authenticated) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Your Quizzes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this);\n  } else {\n    navigate(\"/login\");\n  }\n}\n_s3(AdminPanel, \"N6478WaRDggKafWndmN2gTJKthw=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["useState","useContext","useEffect","useReducer","useNavigate","User","Fact","Timeline","UserContext","UploadForm","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultTimeline","title","description","keyword","creator","facts","timelineReducer","state","action","obj","payload","newState","type","addFact","fact","removeFact","addFacts","defaultFact","date","Date","info","img","factReducer","updateReducer","dispatchFn","field","setValueFn","event","value","target","newValue","AdminPanel","_s3","_s","$RefreshSig$","_s2","userContext","authenticated","get","currentUser","userToken","timelineState","dispatchTimeline","factState","dispatchFact","updateFact","updateTimeline","initialTimeline","setInitialTimeline","saveReady","setSaveReady","updateTimelineList","setUpdateTimelineList","refresh","setRefresh","activeStyle","isActive","hasUnsavedChanges","setHasUnsavedChanges","status","equals","console","debug","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","id","response","fetch","SERVER","method","headers","Headers","ok","json","username","newTimeline","keywords","parseKeywords","map","f","newFromYear","statusText","window","confirm","Chooser","preventDefault","data","FormData","timelineOption","timeline","currentTimelineSelection","setCurrentTimelineSelection","updateSelection","loadButtonText","onSubmit","htmlFor","name","defaultValue","onChange","MetadataPanel","onBlur","keywordString","CurrentFactsPanel","currentFact","item","deleteFact","getFullYear","editFact","onClick","String","year","crypto","randomUUID","dispatch","NewFactForm","newFact","CardPreview","alt","src","dateFromYear","setFullYear","max","SaveButton","saveTimeline","postTimeline","body","DeleteTimelineButton","timelineToDelete","setTimelineToDelete","deleteTimeline","requestDeletion","result","deleted","msg","DiscardChangesButton","discardChanges","Controls","navigate","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminPanel.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nimport UploadForm from \"./UploadForm\";\nconst defaultTimeline = new Timeline({\n  title: '',\n  description: '',\n  keyword: [],\n  creator: '',\n  facts: []\n});\n\nfunction timelineReducer(state, action) {\n  let obj = action.payload;\n\n  let newState = null;\n  \n  switch(action.type) {\n    case \"set\":\n      newState = new Timeline({ ...state, ...obj });\n    break;\n\n    case \"reset\":\n      newState = defaultTimeline;\n    break;\n\n    case \"addFact\":\n      newState = state.addFact(obj.fact);\n    break;\n\n    case \"removeFact\":\n      newState = state.removeFact(obj.fact);\n    break;\n\n    case \"addFacts\":\n      newState = state.addFacts(obj);\n    break;\n\n    default:\n      newState = state; \n  }\n\n  return newState;\n}\n\n\nconst defaultFact = new Fact({\n  date: new Date(),\n  info: \"Description\", \n  img: \"https://picsum.photos/200.jpg\"\n});\n\nfunction factReducer(state, action) {\n  let obj = action.payload;\n  let newState = null;\n\n  switch(action.type) {\n    case \"set\":\n      newState = new Fact({ ...state, ...obj });\n    break;\n\n    case \"reset\":\n      newState = defaultFact;\n    break;\n\n    default:\n      newState = state;\n  };\n\n  return newState;\n}\n\nfunction updateReducer(dispatchFn: (obj: object) => obj) {\n  return function(\n    field: string, \n    setValueFn: (value: any) => any = null\n  ): void {\n    return function(event): void {\n      let value = event.target.value;\n      let newValue = setValueFn ? setValueFn(value) : value;\n      dispatchFn({\n        type: \"set\",\n        payload: { \n          [field]: newValue\n        }\n      });\n    };\n  }\n}\n\n\nexport default function AdminPanel() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser   = userContext.get.currentUser;\n  let userToken     = userContext.get.userToken;\n\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, defaultTimeline);\n  let [factState, dispatchFact] = useReducer(factReducer, defaultFact);\n  \n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n\n  let [initialTimeline, setInitialTimeline] = useState(defaultTimeline);\n\n  let [saveReady, setSaveReady] = useState(false);\n  let [updateTimelineList, setUpdateTimelineList] = useState(true);\n  let [refresh, setRefresh] = useState(true);\n  \n  function activeStyle(isActive) {\n    return isActive ? \"active\" : \"inactive\";\n  }\n\n  let [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n\n  useEffect(() => {\n    let status = ((timelineState && initialTimeline)\n            && !timelineState.equals(initialTimeline));\n            \n    if (initialTimeline) { console.debug(initialTimeline); }\n    if (timelineState) { console.debug(timelineState); }\n\n    setHasUnsavedChanges(status);\n  }, [timelineState, initialTimeline]);\n\n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated && updateTimelineList) {\n      loadTimelineList(currentUser, userToken);\n      setUpdateTimelineList(false);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, updateTimelineList, currentUser, userToken]);\n\n  let [timelineID, setTimelineID] = useState(null);\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      console.debug(`Loading timeline id ${timelineID}`);\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n        let creator = (json.creator === \"\")\n                      ? currentUser.username\n                      : json.creator;\n\n        let newTimeline = new Timeline({\n          id:           json.id,\n          title:        json.title,\n          description:  json.description,\n          keywords:     Timeline.parseKeywords(json.keywords),\n          creator:      creator,\n          facts:        json.facts.map(f => Fact.newFromYear(f))\n        });\n\n        dispatchTimeline({\n          type: \"set\",\n          payload: newTimeline\n        });\n\n        setInitialTimeline(newTimeline);\n\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (!hasUnsavedChanges || window.confirm(\"Your quiz has unsaved changes. Do you want to discard the changes and load a new quiz?\")) {\n        if (timelineID === \"create\") {\n          dispatchTimeline({ type: \"reset\" });\n        } else {\n          loadTimeline(timelineID, userToken);\n        }\n        setUpdateTimelineList(true);\n        setRefresh(false);\n        setHasUnsavedChanges(false);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken, refresh]);\n\n\n  function Chooser() {\n    function loadTimeline(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      let id = data.get(\"select-timeline\");\n      // TODO if there are no unsaved changes\n      setTimelineID(id);\n    }\n\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n\n    let [currentTimelineSelection, setCurrentTimelineSelection] = useState(\"create\");\n\n    function updateSelection(event) {\n      setCurrentTimelineSelection(event.target.value);\n    }\n\n    let loadButtonText = (currentTimelineSelection === \"create\") \n                          ? \"Create\" : \"Load\";\n\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\" onChange={updateSelection}>\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">{ loadButtonText }</button>\n      </form>\n    );\n  }\n\n  function MetadataPanel() {\n    let creator = (timelineState.creator === \"\") \n                  ? currentUser.username \n                  : timelineState.creator;\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                onBlur={updateTimeline(\"title\")}\n                defaultValue={timelineState.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                onBlur={updateTimeline(\"description\")}\n                defaultValue={timelineState.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                onBlur={updateTimeline(\"keywords\", Timeline.parseKeywords)}\n                defaultValue={timelineState.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                onBlur={updateTimeline(\"creator\")}\n                defaultValue={creator}/>\n            </div>\n          </div>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact?\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({ \n            type: \"removeFact\",\n            payload: { fact: item }\n          });\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({ \n          type: \"removeFact\",\n          payload: { fact: item }\n        });\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td>\n            <div className=\"FactListControls\">\n              <button type=\"button\" onClick={editFact}>Edit</button>\n              <button type=\"button\" onClick={deleteFact}>Delete</button>\n            </div>\n          </td>\n          <td>{String(item.year)}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <>\n          <p className=\"instructions\">Enter timeline events manually or upload the data using the forms below</p>\n          <UploadForm dispatch={dispatchTimeline} />\n        </>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <Instructions />\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timelineState.facts.map(currentFact) }\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n\n  function NewFactForm() {\n\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: { fact: factState }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({ type: \"reset\" });\n      }\n    }\n    \n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={factState.year} data-noselect=\"noselect\">\n          <span className=\"date\">{factState.year}</span>\n          <img alt={factState.img} src={factState.img} />\n          <span className=\"info\">{factState.info}</span>\n        </div>\n      );\n    }\n\n\n    function dateFromYear(year: number): Date {\n      let date = new Date();\n      date.setFullYear(year);\n      return date\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={defaultFact.year}\n                onChange={updateFact(\"date\", dateFromYear)}\n                defaultValue={factState.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onBlur={updateFact(\"info\")}\n                defaultValue={factState.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onBlur={updateFact(\"img\")}\n                defaultValue={factState.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={factState} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  \n  function SaveButton() {\n    return(\n      <button className={activeStyle(hasUnsavedChanges)} id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n    setHasUnsavedChanges(false);\n  }\n\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n      setUpdateTimelineList(true);\n    } \n  }, [saveReady, timelineState, currentUser, userToken]);\n  \n\n  function DeleteTimelineButton() {\n    let [timelineToDelete, setTimelineToDelete] = useState(null);\n\n    function deleteTimeline() {\n      if (window.confirm(\"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\")) {\n        console.debug(timelineID);\n        setTimelineToDelete(timelineID);\n      }\n    }\n\n    useEffect(() => {\n      async function requestDeletion(timelineID, token) {\n        let result = false;\n        let response = await fetch(`${User.SERVER}/timelines/${timelineID}/`, {\n          method: \"DELETE\",\n          headers: new Headers({\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Token ${token}`\n          })\n        });\n        if (response.ok) {\n          let json = await response.json();\n          console.debug(json);\n          result = true;\n        } else {\n          console.debug(`Could not delete timeline with id ${timelineID}: Server status ${response.status}, ${response.statusText}`);\n          result = false;\n        }\n        return result;\n      }\n\n      if (timelineToDelete !== null) {\n        console.debug(`Deleting timeline with id ${timelineToDelete}`);\n\n        if (timelineID === \"create\") {\n          dispatchTimeline({ type: \"reset\" });\n        } else {\n          let deleted = requestDeletion(timelineToDelete, userToken);\n          if (deleted) {\n            dispatchTimeline({ type: \"reset\" });\n            setUpdateTimelineList(true);\n          }\n        }\n\n        setTimelineToDelete(null);\n      }\n    }, [timelineToDelete]);\n\n    let msg = (timelineID === \"create\") ? \"Reset Quiz\" : \"Delete Quiz\";\n    return(\n      <button id=\"deleteTimeline\" type=\"button\" onClick={deleteTimeline}>{ msg }</button>\n    );\n  }\n\n\n  function DiscardChangesButton() {\n    function discardChanges(event) {\n      setRefresh(true);\n    }\n\n    return(\n      <button type=\"button\" className={activeStyle(hasUnsavedChanges)} onClick={discardChanges}>Discard Changes</button>\n    );\n  }\n\n  function Controls() {\n    return(\n      <div className=\"controls\">\n        <SaveButton />\n        <DiscardChangesButton />\n        <DeleteTimelineButton />\n      </div>\n    );\n  }\n  let navigate = useNavigate();\n\n  if (authenticated) {\n    return(\n      <main>\n        <h1>Manage Your Quizzes</h1>\n        <Instructions />\n        <Chooser />\n        <MetadataPanel />\n        <CurrentFactsPanel />\n        <NewFactForm />\n        <Controls />\n      </main>\n    );\n  } else {\n    navigate(\"/login\");\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}