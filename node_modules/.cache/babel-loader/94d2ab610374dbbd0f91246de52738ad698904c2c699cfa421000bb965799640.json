{"ast":null,"code":"export default class Fact{constructor(){let{id=-1,date=new Date(),info=\"\",img=\"\"}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.id=void 0;this.date=void 0;this.info=void 0;this.img=void 0;this.id=id;this.date=date;this.info=info;this.img=img;}static dateFromYear(year){let date=new Date();date.setFullYear(year);return date;}static newFromYear(_ref){let{id,date,info,img}=_ref;let realDate=Fact.dateFromYear(date);let event=new Fact({id:id,date:realDate,info:info,img:img});return event;}get year(){return this.date.getFullYear();}set year(numYear){if(year===0){throw new Error(\"Year cannot equal zero. Use 1 or -1.\");}else{this.date.setFullYear(numYear);}}get yearString(){// bce is lowercase because the card date uses small-caps font \nreturn this.year<0?\"\".concat(-this.year,\" bce\"):\"\".concat(this.year);}json(){return{id:this.id,date:this.year,info:this.info,img:this.img};}equals(other){return Object.entries(this).every(_ref2=>{let[key,value]=_ref2;return value===other[key];});}}","map":{"version":3,"names":["Fact","constructor","id","date","Date","info","img","arguments","length","undefined","dateFromYear","year","setFullYear","newFromYear","_ref","realDate","event","getFullYear","numYear","Error","yearString","concat","json","equals","other","Object","entries","every","_ref2","key","value"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/Fact.tsx"],"sourcesContent":["export default class Fact {\n  id: number;\n  date: Date;\n  info: string;\n  img: string;\n\n  constructor({ id = -1, date = new Date(), info = \"\", img = \"\" } = {}) {\n    this.id = id;\n    this.date = date;\n    this.info = info;\n    this.img = img;\n  }\n\n  static dateFromYear(year: number): Date {\n    let date = new Date();\n    date.setFullYear(year);\n    return date;\n  }\n\n  static newFromYear({ id, date, info, img }) {\n    let realDate = Fact.dateFromYear(date);\n    let event = new Fact({ id: id, date: realDate, info: info, img: img });\n    return event;\n  }\n\n  get year(): number {\n    return this.date.getFullYear();\n  }\n\n  set year(numYear: number) {\n    if (year === 0) {\n      throw new Error(\"Year cannot equal zero. Use 1 or -1.\");\n    } else {\n      this.date.setFullYear(numYear);\n    }\n  }\n\n  get yearString(): string {\n    // bce is lowercase because the card date uses small-caps font \n    return (this.year < 0) ? `${-this.year} bce` : `${this.year}`;\n  }\n\n  json() {\n    return {\n      id: this.id,\n      date: this.year,\n      info: this.info,\n      img: this.img\n    }\n  }\n\n  equals(other: Fact): boolean {\n    return Object.entries(this).every(\n      ([key, value]) => value === other[key]);\n  }\n}\n"],"mappings":"AAAA,cAAe,MAAM,CAAAA,IAAK,CAMxBC,WAAWA,CAAA,CAA2D,IAA1D,CAAEC,EAAE,CAAG,CAAC,CAAC,CAAEC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAAEC,IAAI,CAAG,EAAE,CAAEC,GAAG,CAAG,EAAG,CAAC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,MALpEL,EAAE,aACFC,IAAI,aACJE,IAAI,aACJC,GAAG,QAGD,IAAI,CAACJ,EAAE,CAAGA,EAAE,CACZ,IAAI,CAACC,IAAI,CAAGA,IAAI,CAChB,IAAI,CAACE,IAAI,CAAGA,IAAI,CAChB,IAAI,CAACC,GAAG,CAAGA,GAAG,CAChB,CAEA,MAAO,CAAAI,YAAYA,CAACC,IAAY,CAAQ,CACtC,GAAI,CAAAR,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACrBD,IAAI,CAACS,WAAW,CAACD,IAAI,CAAC,CACtB,MAAO,CAAAR,IAAI,CACb,CAEA,MAAO,CAAAU,WAAWA,CAAAC,IAAA,CAA0B,IAAzB,CAAEZ,EAAE,CAAEC,IAAI,CAAEE,IAAI,CAAEC,GAAI,CAAC,CAAAQ,IAAA,CACxC,GAAI,CAAAC,QAAQ,CAAGf,IAAI,CAACU,YAAY,CAACP,IAAI,CAAC,CACtC,GAAI,CAAAa,KAAK,CAAG,GAAI,CAAAhB,IAAI,CAAC,CAAEE,EAAE,CAAEA,EAAE,CAAEC,IAAI,CAAEY,QAAQ,CAAEV,IAAI,CAAEA,IAAI,CAAEC,GAAG,CAAEA,GAAI,CAAC,CAAC,CACtE,MAAO,CAAAU,KAAK,CACd,CAEA,GAAI,CAAAL,IAAIA,CAAA,CAAW,CACjB,MAAO,KAAI,CAACR,IAAI,CAACc,WAAW,CAAC,CAAC,CAChC,CAEA,GAAI,CAAAN,IAAIA,CAACO,OAAe,CAAE,CACxB,GAAIP,IAAI,GAAK,CAAC,CAAE,CACd,KAAM,IAAI,CAAAQ,KAAK,CAAC,sCAAsC,CAAC,CACzD,CAAC,IAAM,CACL,IAAI,CAAChB,IAAI,CAACS,WAAW,CAACM,OAAO,CAAC,CAChC,CACF,CAEA,GAAI,CAAAE,UAAUA,CAAA,CAAW,CACvB;AACA,MAAQ,KAAI,CAACT,IAAI,CAAG,CAAC,IAAAU,MAAA,CAAO,CAAC,IAAI,CAACV,IAAI,YAAAU,MAAA,CAAY,IAAI,CAACV,IAAI,CAAE,CAC/D,CAEAW,IAAIA,CAAA,CAAG,CACL,MAAO,CACLpB,EAAE,CAAE,IAAI,CAACA,EAAE,CACXC,IAAI,CAAE,IAAI,CAACQ,IAAI,CACfN,IAAI,CAAE,IAAI,CAACA,IAAI,CACfC,GAAG,CAAE,IAAI,CAACA,GACZ,CAAC,CACH,CAEAiB,MAAMA,CAACC,KAAW,CAAW,CAC3B,MAAO,CAAAC,MAAM,CAACC,OAAO,CAAC,IAAI,CAAC,CAACC,KAAK,CAC/BC,KAAA,MAAC,CAACC,GAAG,CAAEC,KAAK,CAAC,CAAAF,KAAA,OAAK,CAAAE,KAAK,GAAKN,KAAK,CAACK,GAAG,CAAC,GAAC,CAC3C,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}