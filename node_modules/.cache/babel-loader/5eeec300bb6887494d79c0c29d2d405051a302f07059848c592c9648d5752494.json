{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n  const timelineDefaults = new Timeline({\n    title: '',\n    description: '',\n    keywordString: [],\n    creator: currentUser.username,\n    facts: []\n  });\n  function timelineReducer(state, action) {\n    let toDo = action.type;\n    let obj = action.payload;\n    let newState = state;\n    const actions = {\n      set: new Timeline({\n        ...state,\n        ...obj\n      }),\n      reset: timelineDefaults,\n      addFact: state.addFact(obj.fact),\n      removeFact: state.removeFact(obj.fact)\n    };\n    if (toDo in actions) {\n      newState = actions[toDo];\n    }\n    return newState;\n  }\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, timelineDefaults);\n  const factDefaults = new Fact({\n    date: new Date(),\n    info: \"Description\",\n    img: \"https://picsum.photos/200.jpg\"\n  });\n  function factReducer(state, action) {\n    let toDo = action.type;\n    let obj = action.payload;\n    let newState = state;\n    const actions = {\n      set: new Fact({\n        ...state,\n        ...obj\n      }),\n      reset: factDefaults\n    };\n    if (toDo in actions) {\n      newState = actions[toDo];\n    }\n    return newState;\n  }\n  let [factState, dispatchFact] = useReducer(factReducer, factDefaults);\n  function updateReducer(dispatchFn) {\n    return function (field, setValueFn = null) {\n      return function (event) {\n        let value = event.target.value;\n        let newValue = setValueFn ? setValueFn(value) : value;\n        dispatchFn({\n          type: \"set\",\n          payload: {\n            [field]: newValue\n          }\n        });\n      };\n    };\n  }\n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n  let [saveReady, setSaveReady] = useState(false);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  let [timelineID, setTimelineID] = useState(null);\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        var _Timeline$creator;\n        let json = await response.json();\n        console.debug(json);\n        dispatchTimeline({\n          type: \"set\",\n          payload: {\n            id: json.id,\n            title: json.title,\n            description: json.description,\n            keywords: Timeline.parseKeywords(json.keywords),\n            creator: (_Timeline$creator = Timeline.creator) !== null && _Timeline$creator !== void 0 ? _Timeline$creator : currentUser.username,\n            facts: json.facts.map(f => Fact.newFromYear(f))\n          }\n        });\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({\n          type: \"reset\"\n        });\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken]);\n  function Chooser() {\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n  function MetadataPanel() {\n    function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      dispatchTimeline({\n        type: \"set\",\n        payload: {\n          title: data.get(\"title\"),\n          description: data.get(\"description\"),\n          keywords: Timeline.parseKeywords(data.get(\"keywords\")),\n          creator: data.get(\"creator\")\n        }\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(timelineState);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              onBlur: updateTimeline(\"title\"),\n              defaultValue: timelineState.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              defaultValue: timelineState.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              defaultValue: timelineState.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              defaultValue: timelineState.creator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({\n            type: \"removeFact\",\n            payload: {\n              fact: item\n            }\n          });\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({\n          type: \"removeFact\",\n          payload: {\n            fact: item\n          }\n        });\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: editFact,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: deleteFact,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Enter timeline events using the form below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timelineState.facts.map(currentFact)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), timelineState.facts.length === 0 ? /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 46\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this);\n  }\n  function NewFactForm() {\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: {\n            fact: factState\n          }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({\n          type: \"reset\"\n        });\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": factState.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: factState.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: factState.img,\n          src: factState.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: factState.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this);\n    }\n    function dateFromYear(year) {\n      let date = new Date();\n      date.setFullYear(year);\n      return date;\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: factDefaults.year,\n              onChange: updateFact(\"date\", dateFromYear),\n              defaultValue: factState.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onBlur: updateFact(\"info\"),\n              defaultValue: factState.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              onBlur: updateFact(\"img\"),\n              defaultValue: factState.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: factState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  }\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n  function ResetButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset\",\n      type: \"button\",\n      onClick: resetTimeline,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      dispatchTimeline({\n        type: \"reset\"\n      });\n    }\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n    }\n  }, [saveReady, timelineState, currentUser, userToken]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Chronoquiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"xCE+pGpGEP1a0jy9htuMCB9gjgc=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useContext","useEffect","useReducer","useNavigate","User","Fact","Timeline","UserContext","jsxDEV","_jsxDEV","Create","_s","userContext","authenticated","get","currentUser","userToken","navigate","timelineDefaults","title","description","keywordString","creator","username","facts","timelineReducer","state","action","toDo","type","obj","payload","newState","actions","set","reset","addFact","fact","removeFact","timelineState","dispatchTimeline","factDefaults","date","Date","info","img","factReducer","factState","dispatchFact","updateReducer","dispatchFn","field","setValueFn","event","value","target","newValue","updateFact","updateTimeline","saveReady","setSaveReady","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","preventDefault","data","FormData","id","response","fetch","SERVER","method","headers","Headers","ok","_Timeline$creator","json","console","debug","keywords","parseKeywords","map","f","newFromYear","status","statusText","Chooser","timelineOption","timeline","onSubmit","htmlFor","name","defaultValue","MetadataPanel","updateMetadata","log","onBlur","CurrentFactsPanel","currentFact","item","deleteFact","window","confirm","getFullYear","editFact","onClick","year","crypto","randomUUID","length","NewFactForm","newFact","CardPreview","alt","src","dateFromYear","setFullYear","max","onChange","SaveButton","saveTimeline","ResetButton","resetTimeline","postTimeline","body","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nexport default function Create() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n\n\n  const timelineDefaults = new Timeline({\n    title: '',\n    description: '',\n    keywordString: [],\n    creator: currentUser.username,\n    facts: []\n  });\n\n  function timelineReducer(state, action) {\n    let toDo = action.type;\n    let obj = action.payload;\n\n    let newState = state;\n\n    const actions = {\n      set:        new Timeline({ ...state, ...obj }),\n      reset:      timelineDefaults,\n      addFact:    state.addFact(obj.fact),\n      removeFact: state.removeFact(obj.fact),\n    };\n\n    if (toDo in actions) {\n      newState = actions[toDo];\n    }\n    return newState;\n  }\n\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, timelineDefaults);\n  \n  const factDefaults = new Fact({\n    date: new Date(),\n    info: \"Description\", \n    img: \"https://picsum.photos/200.jpg\"\n  });\n\n  function factReducer(state, action) {\n    let toDo = action.type;\n    let obj = action.payload;\n    let newState = state;\n\n    const actions = {\n      set:    new Fact({ ...state, ...obj }),\n      reset:  factDefaults\n    };\n\n    if (toDo in actions) {\n      newState = actions[toDo];\n    }\n    return newState;\n  }\n\n  let [factState, dispatchFact] = useReducer(factReducer, factDefaults);\n\n\n  function updateReducer(dispatchFn: (obj: object) => obj) {\n    return function(\n      field: string, \n      setValueFn: (value: any) => any = null\n    ): void {\n      return function(event): void {\n        let value = event.target.value;\n        let newValue = setValueFn ? setValueFn(value) : value;\n        dispatchFn({\n          type: \"set\",\n          payload: { \n            [field]: newValue\n          }\n        });\n      };\n    }\n  }\n\n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n\n  let [saveReady, setSaveReady] = useState(false);\n  \n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n\n  let [timelineID, setTimelineID] = useState(null);\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n\n        dispatchTimeline({\n          type: \"set\",\n          payload: {\n            id:           json.id,\n            title:        json.title,\n            description:  json.description,\n            keywords:     Timeline.parseKeywords(json.keywords),\n            creator:      Timeline.creator ?? currentUser.username,\n            facts:        json.facts.map(f => Fact.newFromYear(f))\n          }\n        });\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({ type: \"reset\" })\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, userToken]);\n\n\n  function Chooser() {\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\">\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n\n  function MetadataPanel() {\n    function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      dispatchTimeline({ \n        type: \"set\",\n        payload: {\n          title:        data.get(\"title\"),\n          description:  data.get(\"description\"),\n          keywords:     Timeline.parseKeywords(data.get(\"keywords\")),\n          creator:      data.get(\"creator\")\n        }\n      });\n\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(timelineState);\n    }\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                onBlur={updateTimeline(\"title\")}\n                defaultValue={timelineState.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                defaultValue={timelineState.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                defaultValue={timelineState.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                defaultValue={timelineState.creator}/>\n            </div>\n          </div>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({ \n            type: \"removeFact\",\n            payload: { fact: item }\n          });\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({ \n          type: \"removeFact\",\n          payload: { fact: item }\n        });\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td><button type=\"button\" onClick={editFact}>Edit</button>\n            <button type=\"button\" onClick={deleteFact}>Delete</button></td>\n          <td>{item.id}</td>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <p className=\"instructions\">Enter timeline events using the form below</p>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>ID</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timelineState.facts.map(currentFact) }\n          </tbody>\n        </table>\n        { timelineState.facts.length === 0 ? <Instructions /> : null }\n      </section>\n    );\n  }\n\n  function NewFactForm() {\n\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: { fact: factState }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({ type: \"reset\" });\n      }\n    }\n    \n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={factState.year} data-noselect=\"noselect\">\n          <span className=\"date\">{factState.year}</span>\n          <img alt={factState.img} src={factState.img} />\n          <span className=\"info\">{factState.info}</span>\n        </div>\n      );\n    }\n\n\n\n\n    function dateFromYear(year: number): Date {\n      let date = new Date();\n      date.setFullYear(year);\n      return date\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={factDefaults.year}\n                onChange={updateFact(\"date\", dateFromYear)}\n                defaultValue={factState.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onBlur={updateFact(\"info\")}\n                defaultValue={factState.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onBlur={updateFact(\"img\")}\n                defaultValue={factState.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={factState} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function SaveButton() {\n    return(\n      <button id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n\n  function ResetButton() {\n    return(\n      <button id=\"reset\" type=\"button\" onClick={resetTimeline}>Reset</button>\n    );\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      dispatchTimeline({ type: \"reset\" });\n    }\n  }\n\n   \n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n    } \n  }, [saveReady, timelineState, currentUser, userToken]);\n\n\n  return(\n    <main>\n      <h1>Create a Chronoquiz</h1>\n      <Instructions />\n      <Chooser />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <SaveButton />\n      <ResetButton />\n    </main>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}