{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputForm() {\n  _s();\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n\n  //  // TODO doesn't work (infinite loop of re-renders)\n  //  let loadTimeline = useTimelineSelection(null, setGame);\n  //  useEffect(() => loadTimeline());\n  //\n  //  function setupTimeline(event: React.FormEvent<HTMLFormElement>): void {\n  //    loadTimeline(event, setGame);\n  //  }\n\n  let [url, setUrl] = useState(\"\");\n  function getUrl(event) {\n    let files = event.currentTarget.fileInput.files;\n    let source = event.currentTarget.source.value;\n    if (source) {\n      let url;\n      if (files.length > 0) {\n        setUrl(URL.createObjectURL(files[0]));\n      } else {\n        setUrl(`input/${source}.json`);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"inputForm\",\n    onSubmit: getUrl,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"source\",\n      children: \"Choose a timeline:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"source\",\n      id: \"source\",\n      required: true,\n      defaultValue: \"music\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"music\",\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wars\",\n        children: \"Wars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"upload\",\n        children: \"Upload a custom timeline...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"file\",\n      className: \"hide\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: [\"Upload JSON timeline file (\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"about.html\",\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 63\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        accept: \".json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      id: \"playbutton\",\n      children: \"Play!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"SvP/3uSiJpbdTimVRGpINt6ve7E=\");\n_c = InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useContext","TimelineContext","jsxDEV","_jsxDEV","InputForm","_s","context","setGame","set","url","setUrl","useState","getUrl","event","files","currentTarget","fileInput","source","value","length","URL","createObjectURL","id","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","required","defaultValue","className","href","type","accept","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport useTimelineSelection from \"../hooks/useTimelineSelection\";\n\nexport default function InputForm() {\n\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n\n  //  // TODO doesn't work (infinite loop of re-renders)\n  //  let loadTimeline = useTimelineSelection(null, setGame);\n  //  useEffect(() => loadTimeline());\n  //\n  //  function setupTimeline(event: React.FormEvent<HTMLFormElement>): void {\n  //    loadTimeline(event, setGame);\n  //  }\n\n  let [url, setUrl] = useState(\"\");\n\n  function getUrl(event: React.FormEvent<HTMLFormElement>): void {\n    let files = event.currentTarget.fileInput.files;\n    let source = event.currentTarget.source.value;\n    if (source) {\n      let url;\n      if (files.length > 0) { \n        setUrl(URL.createObjectURL(files[0]));\n      } else {\n        setUrl(`input/${source}.json`);\n      }\n    } \n  }\n\n\n\n  return(\n    <form id=\"inputForm\" onSubmit={getUrl}>\n      <label htmlFor=\"source\">Choose a timeline:</label>\n      <select name=\"source\" id=\"source\" required defaultValue=\"music\">\n        <option value=\"music\">Music</option>\n        <option value=\"wars\">Wars</option>\n        <option value=\"upload\">Upload a custom timeline...</option>\n      </select>\n      <div id=\"file\" className=\"hide\">\n        <label htmlFor=\"fileInput\">Upload JSON timeline file (<a href=\"about.html\">?</a>)</label>\n        <input id=\"fileInput\" type=\"file\" accept=\".json\" />\n      </div>\n      <button type=\"submit\" id=\"playbutton\">Play!</button>\n    </form>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}