{"ast":null,"code":"import _classPrivateFieldLooseKey from \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _shuffle = /*#__PURE__*/_classPrivateFieldLooseKey(\"shuffle\");\nexport default class FactList {\n  constructor(cards = []) {\n    // PRIVATE METHODS\n    /**\n     * Shuffle the array, using the Fisher-Yates/Knuth shuffle\n     * (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n     */\n    Object.defineProperty(this, _shuffle, {\n      value: _shuffle2\n    });\n    this.items = void 0;\n    this.items = cards;\n  }\n  // PUBLIC METHODS\n  isEmpty() {\n    return this.items.length === 0;\n  }\n  allButLast() {\n    return this.items.slice(0, -1);\n  }\n  last() {\n    return this.items.at(-1);\n  }\n}\nfunction _shuffle2() {\n  // Return a random integer up to the given max.\n  function randomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  for (let i = this.length - 1; i > 0; --i) {\n    let j = randomInt(i);\n    [this[i], this[j]] = [this[j], this[i]];\n  }\n}","map":{"version":3,"names":["FactList","constructor","cards","Object","defineProperty","_shuffle","value","_shuffle2","items","isEmpty","length","allButLast","slice","last","at","randomInt","max","Math","floor","random","i","j"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/FactList.tsx"],"sourcesContent":["import Card from \"Card\";\n\nexport default class FactList {\n  items: Array<Card>;\n\n  constructor(cards: Array<Card> = []) {\n    this.items = cards;\n  }\n\n  // PRIVATE METHODS\n  /**\n   * Shuffle the array, using the Fisher-Yates/Knuth shuffle\n   * (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n   */\n  #shuffle(): void {\n    \n    // Return a random integer up to the given max.\n    function randomInt(max: number): number {\n      return Math.floor(Math.random() * max);\n    } \n\n    for (let i = this.length - 1; i > 0; --i) {\n      let j = randomInt(i);\n      [this[i], this[j]] = [this[j], this[i]];\n    }\n  }\n\n  // PUBLIC METHODS\n  isEmpty(): boolean {\n    return this.items.length === 0;\n  }\n\n  allButLast(): Array<Card> {\n    return this.items.slice(0, -1);\n  }\n\n  last(): Card {\n    return this.items.at(-1);\n  }\n}\n\n"],"mappings":";;AAEA,eAAe,MAAMA,QAAQ,CAAC;EAG5BC,WAAWA,CAACC,KAAkB,GAAG,EAAE,EAAE;IAIrC;IACA;AACF;AACA;AACA;IAHEC,MAAA,CAAAC,cAAA,OAAAC,QAAA;MAAAC,KAAA,EAAAC;IAAA;IAAA,KAPAC,KAAK;IAGH,IAAI,CAACA,KAAK,GAAGN,KAAK;EACpB;EAoBA;EACAO,OAAOA,CAAA,EAAY;IACjB,OAAO,IAAI,CAACD,KAAK,CAACE,MAAM,KAAK,CAAC;EAChC;EAEAC,UAAUA,CAAA,EAAgB;IACxB,OAAO,IAAI,CAACH,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC;EAEAC,IAAIA,CAAA,EAAS;IACX,OAAO,IAAI,CAACL,KAAK,CAACM,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1B;AACF;AAAC,SAAAP,UAAA,EAzBkB;EAEf;EACA,SAASQ,SAASA,CAACC,GAAW,EAAU;IACtC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,GAAG,CAAC;EACxC;EAEA,KAAK,IAAII,CAAC,GAAG,IAAI,CAACV,MAAM,GAAG,CAAC,EAAEU,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;IACxC,IAAIC,CAAC,GAAGN,SAAS,CAACK,CAAC,CAAC;IACpB,CAAC,IAAI,CAACA,CAAC,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAACA,CAAC,CAAC,EAAE,IAAI,CAACD,CAAC,CAAC,CAAC;EACzC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}