{"ast":null,"code":"export default class User {\n  constructor({\n    username = \"\",\n    email = \"\",\n    password = \"\",\n    token = \"\",\n    authenticated = false\n  } = {}) {\n    this.username = void 0;\n    this.email = void 0;\n    this.password = void 0;\n    this.token = void 0;\n    this.authenticated = void 0;\n    this.username = username;\n    this.email = email;\n    this.password = password;\n    this.token = token;\n    this.authenticated = authenticated;\n  }\n  get isEmpty() {\n    return this.username === \"\" && this.email === \"\" && this.password === \"\";\n  }\n  json() {\n    return JSON.stringify(this);\n  }\n  async authenticate() {\n    let token = null;\n    let response = await fetch(`${User.SERVER}/login/`, {\n      method: \"POST\",\n      headers: new Headers({\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }),\n      body: this.json()\n    });\n    if (response.ok) {\n      let json = await response.json();\n      token = json.token;\n      console.debug(`Authenticated user ${this.username}`);\n    } else {\n      console.debug(`Problem authenticating user ${this.username}: Response status ${response.status}, ${response.statusText}`);\n    }\n    return token;\n  }\n}\nUser.SERVER = \"http://127.0.0.1:8000\";","map":{"version":3,"names":["User","constructor","username","email","password","token","authenticated","isEmpty","json","JSON","stringify","authenticate","response","fetch","SERVER","method","headers","Headers","body","ok","console","debug","status","statusText"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/User.tsx"],"sourcesContent":["interface UserInput {\n  username: string,\n  email: string,\n  password: string,\n  token: string,\n  authenticated: boolean\n} \n\nexport default class User {\n  username: string;\n  email: string;\n  password: string;\n  token: string;\n  authenticated: boolean;\n\n  constructor(\n    { username = \"\",\n      email    = \"\",\n      password = \"\",\n      token = \"\",\n      authenticated = false\n    }: UserInput = {}\n  ) {\n    this.username = username;\n    this.email = email;\n    this.password = password;\n    this.token = token;\n    this.authenticated = authenticated;\n  }\n\n  get isEmpty(): boolean {\n    return (this.username === \"\"\n            && this.email === \"\"\n            && this.password === \"\");\n  }\n\n  json(): string {\n    return JSON.stringify(this);\n  }\n\n  static SERVER = \"http://127.0.0.1:8000\";\n\n  async authenticate(): string {\n    let token = null;\n    let response = await fetch(`${User.SERVER}/login/`, {\n      method: \"POST\",\n      headers: new Headers({\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }),\n      body: this.json()\n    });\n    if (response.ok) {\n      let json = await response.json();\n      token = json.token;\n      console.debug(`Authenticated user ${this.username}`);\n    } else {\n      console.debug(`Problem authenticating user ${this.username}: Response status ${response.status}, ${response.statusText}`);\n    }\n    return token;\n  }\n}\n"],"mappings":"AAQA,eAAe,MAAMA,IAAI,CAAC;EAOxBC,WAAWA,CACT;IAAEC,QAAQ,GAAG,EAAE;IACbC,KAAK,GAAM,EAAE;IACbC,QAAQ,GAAG,EAAE;IACbC,KAAK,GAAG,EAAE;IACVC,aAAa,GAAG;EACP,CAAC,GAAG,CAAC,CAAC,EACjB;IAAA,KAbFJ,QAAQ;IAAA,KACRC,KAAK;IAAA,KACLC,QAAQ;IAAA,KACRC,KAAK;IAAA,KACLC,aAAa;IAUX,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,aAAa,GAAGA,aAAa;EACpC;EAEA,IAAIC,OAAOA,CAAA,EAAY;IACrB,OAAQ,IAAI,CAACL,QAAQ,KAAK,EAAE,IACjB,IAAI,CAACC,KAAK,KAAK,EAAE,IACjB,IAAI,CAACC,QAAQ,KAAK,EAAE;EACjC;EAEAI,IAAIA,CAAA,EAAW;IACb,OAAOC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC;EAC7B;EAIA,MAAMC,YAAYA,CAAA,EAAW;IAC3B,IAAIN,KAAK,GAAG,IAAI;IAChB,IAAIO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,IAAI,CAACc,MAAO,SAAQ,EAAE;MAClDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,IAAIC,OAAO,CAAC;QACnB,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAClB,CAAC,CAAC;MACFC,IAAI,EAAE,IAAI,CAACV,IAAI,CAAC;IAClB,CAAC,CAAC;IACF,IAAII,QAAQ,CAACO,EAAE,EAAE;MACf,IAAIX,IAAI,GAAG,MAAMI,QAAQ,CAACJ,IAAI,CAAC,CAAC;MAChCH,KAAK,GAAGG,IAAI,CAACH,KAAK;MAClBe,OAAO,CAACC,KAAK,CAAE,sBAAqB,IAAI,CAACnB,QAAS,EAAC,CAAC;IACtD,CAAC,MAAM;MACLkB,OAAO,CAACC,KAAK,CAAE,+BAA8B,IAAI,CAACnB,QAAS,qBAAoBU,QAAQ,CAACU,MAAO,KAAIV,QAAQ,CAACW,UAAW,EAAC,CAAC;IAC3H;IACA,OAAOlB,KAAK;EACd;AACF;AArDqBL,IAAI,CAgChBc,MAAM,GAAG,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}