{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Choose.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BackendRequest from \"../classes/BackendRequest\";\nimport TimelineList from \"../components/TimelineList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Choose() {\n  _s();\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList() {\n      let request = new BackendRequest({\n        url: \"timelines/\",\n        method: \"GET\"\n      });\n      let response = await request.fetch();\n      if (response.ok) {\n        let json = await response.json();\n        setTimelineList(json);\n      }\n    }\n    loadTimelineList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Test your historical knowledge by placing fact cards on a chronological timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin\",\n        children: \"Log in or sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), \" to create and share your own quizzes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose a Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimelineList, {\n      data: timelineList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Choose, \"/+C12HQH6AUgHeQMAX78fwXrII4=\");\n_c = Choose;\nvar _c;\n$RefreshReg$(_c, \"Choose\");","map":{"version":3,"names":["useState","useEffect","Link","BackendRequest","TimelineList","jsxDEV","_jsxDEV","Choose","_s","timelineList","setTimelineList","loadTimelineList","request","url","method","response","fetch","ok","json","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","data","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Choose.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport BackendRequest from \"../classes/BackendRequest\";\nimport User from \"../classes/User\";\nimport TimelineList from \"../components/TimelineList\";\n\nexport default function Choose() {\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList() {\n      let request = new BackendRequest({ url: \"timelines/\" , method: \"GET\" });\n      let response = await request.fetch();\n      if (response.ok) {\n        let json = await response.json();\n        setTimelineList(json);\n      }\n    }\n\n    loadTimelineList();\n  }, []);\n  \n  return(\n    <main>\n      <p className=\"instructions\">Test your historical knowledge by placing fact cards on a chronological timeline</p>\n      <p><Link to=\"/admin\">Log in or sign up</Link> to create and share your own quizzes</p>\n\n      <h1>Choose a Quiz</h1>\n      <TimelineList data={timelineList} />\n    </main>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,cAAc,MAAM,2BAA2B;AAEtD,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,IAAI,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,eAAeU,gBAAgBA,CAAA,EAAG;MAChC,IAAIC,OAAO,GAAG,IAAIT,cAAc,CAAC;QAAEU,GAAG,EAAE,YAAY;QAAGC,MAAM,EAAE;MAAM,CAAC,CAAC;MACvE,IAAIC,QAAQ,GAAG,MAAMH,OAAO,CAACI,KAAK,CAAC,CAAC;MACpC,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,IAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;QAChCR,eAAe,CAACQ,IAAI,CAAC;MACvB;IACF;IAEAP,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAGc,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAgF;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChHlB,OAAA;MAAAa,QAAA,gBAAGb,OAAA,CAACJ,IAAI;QAACuB,EAAE,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,yCAAqC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEtFlB,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA,CAACF,YAAY;MAACsB,IAAI,EAAEjB;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX;AAAChB,EAAA,CAzBuBD,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}