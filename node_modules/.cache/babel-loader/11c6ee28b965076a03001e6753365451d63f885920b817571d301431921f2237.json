{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/UploadForm.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../store/UserContext\";\nimport Timeline from \"../classes/Timeline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadForm({\n  dispatch\n}) {\n  _s();\n  let userContext = useContext(UserContext);\n  let userToken = userContext.get.userToken;\n  let [uploadFile, setUploadFile] = useState(null);\n  function handleUpload(event) {\n    event.preventDefault();\n    let infile = event.target.upload.files[0];\n    setUploadFile(infile);\n  }\n  useEffect(() => {\n    // TODO remove duplication (this may not be needed when reading from\n    // server)\n    function isInputValid(json) {\n      return Array.isArray(json) && json.length > 0 && json.every(i => \"date\" in i && \"info\" in i);\n    }\n    async function loadUserTimeline(token, file) {\n      let text = await file.text();\n      let json = JSON.parse(text);\n      if (isInputValid(json)) {\n        console.debug(\"Valid input\");\n        console.debug(json);\n        let timeline = new Timeline(json);\n        console.debug(timeline);\n        dispatch({\n          type: \"set\",\n          payload: timeline\n        });\n      } else {\n        console.debug(\"Invalid input\");\n      }\n    }\n    if (uploadFile) {\n      loadUserTimeline(userToken, uploadFile);\n    }\n  }, [uploadFile]);\n  return /*#__PURE__*/_jsxDEV(\"details\", {\n    children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n      children: \"Upload a New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Upload a quiz in JSON format (see \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/about\",\n          children: \"instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 46\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"upload-form\",\n        onSubmit: handleUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"upload\",\n          accept: \".json\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"sT2p9IF4ywWJFQS92wuA35SlGP4=\");\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["useContext","useState","useEffect","Link","UserContext","Timeline","jsxDEV","_jsxDEV","UploadForm","dispatch","_s","userContext","userToken","get","uploadFile","setUploadFile","handleUpload","event","preventDefault","infile","target","upload","files","isInputValid","json","Array","isArray","length","every","i","loadUserTimeline","token","file","text","JSON","parse","console","debug","timeline","type","payload","children","fileName","_jsxFileName","lineNumber","columnNumber","id","to","onSubmit","name","accept","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/UploadForm.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport UserContext from \"../store/UserContext\";\nimport Timeline from \"../classes/Timeline\";\n\nexport default function UploadForm({ dispatch }) {\n  let userContext = useContext(UserContext);\n  let userToken = userContext.get.userToken;\n\n  let [uploadFile, setUploadFile] = useState(null);\n\n  function handleUpload(event) {\n    event.preventDefault();\n    let infile = event.target.upload.files[0];\n    setUploadFile(infile);\n  }\n\n  useEffect(() => {\n    // TODO remove duplication (this may not be needed when reading from\n    // server)\n    function isInputValid(json) {\n      return Array.isArray(json) && \n        json.length > 0 &&\n        json.every(i => (\"date\" in i) && (\"info\" in i));\n    }\n\n    async function loadUserTimeline(token, file) {\n      let text = await file.text();\n      let json = JSON.parse(text);\n\n      if (isInputValid(json)) {\n        console.debug(\"Valid input\");\n        console.debug(json);\n        let timeline = new Timeline(json);\n        console.debug(timeline);\n        dispatch({\n          type: \"set\",\n          payload: timeline\n        });\n      } else {\n        console.debug(\"Invalid input\");\n      }\n    }\n\n    if (uploadFile) {\n      loadUserTimeline(userToken, uploadFile);\n    }\n  }, [uploadFile]);\n\n  return(\n    <details>\n      <summary>Upload a New Quiz</summary>\n      <section id=\"upload\">\n        <p>Upload a quiz in JSON format (see <Link to=\"/about\">instructions</Link>)</p>\n\n        <form id=\"upload-form\" onSubmit={handleUpload}>\n          <input type=\"file\" name=\"upload\" accept=\".json\" />\n          <button type=\"submit\">Upload</button>\n        </form>\n      </section>\n    </details>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}