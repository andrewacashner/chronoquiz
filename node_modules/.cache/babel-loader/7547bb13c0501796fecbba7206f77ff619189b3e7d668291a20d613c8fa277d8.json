{"ast":null,"code":"import{useContext,useState,useEffect}from\"react\";import FactCard from\"../classes/FactCard\";import TimelineDeck from\"../classes/TimelineDeck\";import Game from\"../classes/Game\";import RestartButton from\"./RestartButton\";import TimelineContext from\"../store/TimelineContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function isInputValid(json){return typeof json===\"object\"&&Array.isArray(json)&&json.length>0&&json.every(fact=>\"date\"in fact&&\"info\"in fact);}async function clueListFromJson(json){let cards=[];try{if(json&&json.length>0){for(let entry of json){try{let card=await FactCard.newSafeCard(entry);if(card&&card.isSafe){cards.push(card);}else{throw new Error(\"Faulty card input {date: '\".concat(entry.date,\"', info: '\").concat(entry.info.slice(0,15),\"...'}; skipping\"));}}catch(e){console.error(e);}}}}catch(e){console.error(e);}return new TimelineDeck(cards);}export default function InputForm(_ref){let{src}=_ref;let context=useContext(TimelineContext);let setGame=context.set;let[url,setUrl]=useState(\"\");let[json,setJson]=useState(null);let[isGameActive,setIsGameActive]=useState(false);function getUrl(event){setIsGameActive(true);setUrl(src);console.debug(\"Set URL to \".concat(src));}useEffect(()=>{async function fetchUrl(){if(url){console.log(\"Loading file \".concat(url));try{let response=await fetch(url);let newJson;let contentType=response.headers.get(\"content-type\");if(contentType&&contentType.includes(\"application/json\")){newJson=await response.json();}else{throw new Error(\"No JSON input: \".concat(response));}if(isInputValid(newJson)){setJson(newJson);}else{alert(\"Could not create a timeline from JSON file at \".concat(url));window.location.reload();throw new Error(\"Unusable JSON input; restarting\");}}catch(e){console.error(e);}}}fetchUrl();},[url]);useEffect(()=>{async function loadClues(json){try{let newClues=await clueListFromJson(json);newClues.setupClues();setGame(prevGame=>new Game({clues:newClues,timeline:prevGame.timeline,score:prevGame.score,isActive:isGameActive}));}catch(e){console.error(e);}}loadClues(json);},[json,setGame,isGameActive]);function restart(){window.location.reload();}function PlayButton(){return/*#__PURE__*/_jsx(\"button\",{type:\"button\",id:\"playbutton\",onClick:getUrl,children:\"Play!\"});}function PlayAgainButton(){return/*#__PURE__*/_jsx(\"button\",{type:\"button\",id:\"playbutton\",onClick:restart,children:\"Play again!\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[isGameActive?/*#__PURE__*/_jsx(PlayAgainButton,{}):/*#__PURE__*/_jsx(PlayButton,{}),isGameActive?/*#__PURE__*/_jsx(RestartButton,{}):null]});}","map":{"version":3,"names":["useContext","useState","useEffect","FactCard","TimelineDeck","Game","RestartButton","TimelineContext","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","isInputValid","json","Array","isArray","length","every","fact","clueListFromJson","cards","entry","card","newSafeCard","isSafe","push","Error","concat","date","info","slice","e","console","error","InputForm","_ref","src","context","setGame","set","url","setUrl","setJson","isGameActive","setIsGameActive","getUrl","event","debug","fetchUrl","log","response","fetch","newJson","contentType","headers","get","includes","alert","window","location","reload","loadClues","newClues","setupClues","prevGame","clues","timeline","score","isActive","restart","PlayButton","type","id","onClick","children","PlayAgainButton"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\n\nimport FactCard from \"../classes/FactCard\";\nimport TimelineDeck from \"../classes/TimelineDeck\";\nimport Game from \"../classes/Game\";\n\nimport RestartButton from \"./RestartButton\";\n\nimport TimelineContext from \"../store/TimelineContext\";\n\nfunction isInputValid(json: any): boolean {\n  return typeof json === \"object\"\n  && Array.isArray(json) \n  && json.length > 0 \n  && json.every(fact => (\"date\" in fact) && (\"info\" in fact));\n}\n\nasync function clueListFromJson(json: object): TimelineDeck { \n  let cards = [];\n  try {\n    if (json && json.length > 0) {\n      for (let entry of json) {\n        try {\n          let card = await FactCard.newSafeCard(entry);\n          if (card && card.isSafe) {\n            cards.push(card);\n          } else {\n            throw new Error(`Faulty card input {date: '${entry.date}', info: '${entry.info.slice(0, 15)}...'}; skipping`);\n          }\n        } catch(e) {\n          console.error(e);\n        }\n      }\n    }\n  } catch(e) {\n    console.error(e);\n  }\n  return new TimelineDeck(cards);\n}\n\n\nexport default function InputForm({ src }) {\n\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n\n  let [url, setUrl] = useState(\"\");\n  let [json, setJson] = useState(null);\n  let [isGameActive, setIsGameActive] = useState(false);\n\n  function getUrl(event: React.FormEvent<HTMLFormElement>): void {\n    setIsGameActive(true); \n    setUrl(src);\n    console.debug(`Set URL to ${src}`);\n  }\n  \n  useEffect(() => {\n    async function fetchUrl(): void {\n      if (url) {\n        console.log(`Loading file ${url}`);\n\n        try {\n          let response = await fetch(url);\n\n          let newJson;\n          let contentType = response.headers.get(\"content-type\");\n          \n          if (contentType && contentType.includes(\"application/json\")) {\n            newJson = await response.json();\n          } else {\n            throw new Error(`No JSON input: ${response}`);\n          }\n\n          if (isInputValid(newJson)) {\n            setJson(newJson);\n          } else {\n            alert(`Could not create a timeline from JSON file at ${url}`);\n            window.location.reload();\n            throw new Error(\"Unusable JSON input; restarting\");\n          }\n        } catch(e) { \n          console.error(e); \n        }\n      }\n    }\n    fetchUrl();\n  }, [url]);\n\n  useEffect(() => {\n    async function loadClues(json) {\n      try {\n        let newClues = await clueListFromJson(json);\n        newClues.setupClues();\n        setGame(prevGame => new Game({ \n          clues: newClues,\n          timeline: prevGame.timeline,\n          score: prevGame.score,\n          isActive: isGameActive\n        }));\n      } catch(e) {\n        console.error(e);\n      }\n    }\n\n    loadClues(json);\n  }, [json, setGame, isGameActive])\n\n\n  function restart() {\n    window.location.reload();\n  }\n\n  function PlayButton() {\n    return(\n      <button type=\"button\" id=\"playbutton\" onClick={getUrl}>Play!</button>\n    );\n  }\n\n  function PlayAgainButton() {\n    return(\n      <button type=\"button\" id=\"playbutton\" onClick={restart}>Play again!</button>\n    );\n  }\n\n  return(\n    <>\n      { isGameActive ? <PlayAgainButton /> : <PlayButton /> }\n      { isGameActive ? <RestartButton /> : null }\n    </>\n  );\n}\n\n"],"mappings":"AAAA,OAASA,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAEvD,MAAO,CAAAC,QAAQ,KAAM,qBAAqB,CAC1C,MAAO,CAAAC,YAAY,KAAM,yBAAyB,CAClD,MAAO,CAAAC,IAAI,KAAM,iBAAiB,CAElC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAE3C,MAAO,CAAAC,eAAe,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvD,QAAS,CAAAC,YAAYA,CAACC,IAAS,CAAW,CACxC,MAAO,OAAO,CAAAA,IAAI,GAAK,QAAQ,EAC5BC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EACnBA,IAAI,CAACG,MAAM,CAAG,CAAC,EACfH,IAAI,CAACI,KAAK,CAACC,IAAI,EAAK,MAAM,EAAI,CAAAA,IAAI,EAAM,MAAM,EAAI,CAAAA,IAAK,CAAC,CAC7D,CAEA,cAAe,CAAAC,gBAAgBA,CAACN,IAAY,CAAgB,CAC1D,GAAI,CAAAO,KAAK,CAAG,EAAE,CACd,GAAI,CACF,GAAIP,IAAI,EAAIA,IAAI,CAACG,MAAM,CAAG,CAAC,CAAE,CAC3B,IAAK,GAAI,CAAAK,KAAK,GAAI,CAAAR,IAAI,CAAE,CACtB,GAAI,CACF,GAAI,CAAAS,IAAI,CAAG,KAAM,CAAArB,QAAQ,CAACsB,WAAW,CAACF,KAAK,CAAC,CAC5C,GAAIC,IAAI,EAAIA,IAAI,CAACE,MAAM,CAAE,CACvBJ,KAAK,CAACK,IAAI,CAACH,IAAI,CAAC,CAClB,CAAC,IAAM,CACL,KAAM,IAAI,CAAAI,KAAK,8BAAAC,MAAA,CAA8BN,KAAK,CAACO,IAAI,eAAAD,MAAA,CAAaN,KAAK,CAACQ,IAAI,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,mBAAiB,CAAC,CAC/G,CACF,CAAE,MAAMC,CAAC,CAAE,CACTC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAClB,CACF,CACF,CACF,CAAE,MAAMA,CAAC,CAAE,CACTC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAClB,CACA,MAAO,IAAI,CAAA7B,YAAY,CAACkB,KAAK,CAAC,CAChC,CAGA,cAAe,SAAS,CAAAc,SAASA,CAAAC,IAAA,CAAU,IAAT,CAAEC,GAAI,CAAC,CAAAD,IAAA,CAEvC,GAAI,CAAAE,OAAO,CAAGvC,UAAU,CAACO,eAAe,CAAC,CACzC,GAAI,CAAAiC,OAAO,CAAGD,OAAO,CAACE,GAAG,CAEzB,GAAI,CAACC,GAAG,CAAEC,MAAM,CAAC,CAAG1C,QAAQ,CAAC,EAAE,CAAC,CAChC,GAAI,CAACc,IAAI,CAAE6B,OAAO,CAAC,CAAG3C,QAAQ,CAAC,IAAI,CAAC,CACpC,GAAI,CAAC4C,YAAY,CAAEC,eAAe,CAAC,CAAG7C,QAAQ,CAAC,KAAK,CAAC,CAErD,QAAS,CAAA8C,MAAMA,CAACC,KAAuC,CAAQ,CAC7DF,eAAe,CAAC,IAAI,CAAC,CACrBH,MAAM,CAACL,GAAG,CAAC,CACXJ,OAAO,CAACe,KAAK,eAAApB,MAAA,CAAeS,GAAG,CAAE,CAAC,CACpC,CAEApC,SAAS,CAAC,IAAM,CACd,cAAe,CAAAgD,QAAQA,CAAA,CAAS,CAC9B,GAAIR,GAAG,CAAE,CACPR,OAAO,CAACiB,GAAG,iBAAAtB,MAAA,CAAiBa,GAAG,CAAE,CAAC,CAElC,GAAI,CACF,GAAI,CAAAU,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACX,GAAG,CAAC,CAE/B,GAAI,CAAAY,OAAO,CACX,GAAI,CAAAC,WAAW,CAAGH,QAAQ,CAACI,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAEtD,GAAIF,WAAW,EAAIA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,CAAE,CAC3DJ,OAAO,CAAG,KAAM,CAAAF,QAAQ,CAACrC,IAAI,CAAC,CAAC,CACjC,CAAC,IAAM,CACL,KAAM,IAAI,CAAAa,KAAK,mBAAAC,MAAA,CAAmBuB,QAAQ,CAAE,CAAC,CAC/C,CAEA,GAAItC,YAAY,CAACwC,OAAO,CAAC,CAAE,CACzBV,OAAO,CAACU,OAAO,CAAC,CAClB,CAAC,IAAM,CACLK,KAAK,kDAAA9B,MAAA,CAAkDa,GAAG,CAAE,CAAC,CAC7DkB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CACxB,KAAM,IAAI,CAAAlC,KAAK,CAAC,iCAAiC,CAAC,CACpD,CACF,CAAE,MAAMK,CAAC,CAAE,CACTC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAClB,CACF,CACF,CACAiB,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,CAACR,GAAG,CAAC,CAAC,CAETxC,SAAS,CAAC,IAAM,CACd,cAAe,CAAA6D,SAASA,CAAChD,IAAI,CAAE,CAC7B,GAAI,CACF,GAAI,CAAAiD,QAAQ,CAAG,KAAM,CAAA3C,gBAAgB,CAACN,IAAI,CAAC,CAC3CiD,QAAQ,CAACC,UAAU,CAAC,CAAC,CACrBzB,OAAO,CAAC0B,QAAQ,EAAI,GAAI,CAAA7D,IAAI,CAAC,CAC3B8D,KAAK,CAAEH,QAAQ,CACfI,QAAQ,CAAEF,QAAQ,CAACE,QAAQ,CAC3BC,KAAK,CAAEH,QAAQ,CAACG,KAAK,CACrBC,QAAQ,CAAEzB,YACZ,CAAC,CAAC,CAAC,CACL,CAAE,MAAMZ,CAAC,CAAE,CACTC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAClB,CACF,CAEA8B,SAAS,CAAChD,IAAI,CAAC,CACjB,CAAC,CAAE,CAACA,IAAI,CAAEyB,OAAO,CAAEK,YAAY,CAAC,CAAC,CAGjC,QAAS,CAAA0B,OAAOA,CAAA,CAAG,CACjBX,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC1B,CAEA,QAAS,CAAAU,UAAUA,CAAA,CAAG,CACpB,mBACE/D,IAAA,WAAQgE,IAAI,CAAC,QAAQ,CAACC,EAAE,CAAC,YAAY,CAACC,OAAO,CAAE5B,MAAO,CAAA6B,QAAA,CAAC,OAAK,CAAQ,CAAC,CAEzE,CAEA,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACzB,mBACEpE,IAAA,WAAQgE,IAAI,CAAC,QAAQ,CAACC,EAAE,CAAC,YAAY,CAACC,OAAO,CAAEJ,OAAQ,CAAAK,QAAA,CAAC,aAAW,CAAQ,CAAC,CAEhF,CAEA,mBACE/D,KAAA,CAAAF,SAAA,EAAAiE,QAAA,EACI/B,YAAY,cAAGpC,IAAA,CAACoE,eAAe,GAAE,CAAC,cAAGpE,IAAA,CAAC+D,UAAU,GAAE,CAAC,CACnD3B,YAAY,cAAGpC,IAAA,CAACH,aAAa,GAAE,CAAC,CAAG,IAAI,EACzC,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}