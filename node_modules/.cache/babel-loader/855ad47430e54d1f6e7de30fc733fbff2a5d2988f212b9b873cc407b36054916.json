{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminPanel.tsx\",\n  _s3 = $RefreshSig$();\nimport { useState, useContext, useEffect, useReducer, useCallback } from \"react\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport UploadForm from \"./UploadForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultTimeline = new Timeline({\n  title: '',\n  description: '',\n  keyword: [],\n  creator: '',\n  facts: []\n});\nfunction timelineReducer(state, action) {\n  let obj = action.payload;\n  let newState = null;\n  switch (action.type) {\n    case \"set\":\n      newState = new Timeline({\n        ...state,\n        ...obj\n      });\n      break;\n    case \"reset\":\n      newState = defaultTimeline;\n      break;\n    case \"addFact\":\n      newState = state.addFact(obj.fact);\n      break;\n    case \"removeFact\":\n      newState = state.removeFact(obj.fact);\n      break;\n    case \"addFacts\":\n      newState = state.addFacts(obj);\n      break;\n    default:\n      newState = state;\n  }\n  return newState;\n}\nconst defaultFact = new Fact({\n  date: new Date(),\n  info: \"Description\",\n  img: \"https://picsum.photos/200.jpg\"\n});\nfunction factReducer(state, action) {\n  let obj = action.payload;\n  let newState = null;\n  switch (action.type) {\n    case \"set\":\n      newState = new Fact({\n        ...state,\n        ...obj\n      });\n      break;\n    case \"reset\":\n      newState = defaultFact;\n      break;\n    default:\n      newState = state;\n  }\n  ;\n  return newState;\n}\nfunction updateReducer(dispatchFn) {\n  return function (field, setValueFn = null) {\n    return function (event) {\n      let value = event.target.value;\n      let newValue = setValueFn ? setValueFn(value) : value;\n      dispatchFn({\n        type: \"set\",\n        payload: {\n          [field]: newValue\n        }\n      });\n    };\n  };\n}\nexport default function AdminPanel() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser = userContext.get.currentUser;\n  let userToken = userContext.get.userToken;\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, defaultTimeline);\n  let [factState, dispatchFact] = useReducer(factReducer, defaultFact);\n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n  let [initialTimeline, setInitialTimeline] = useState(null);\n  let [saveReady, setSaveReady] = useState(false);\n  let [updateTimelineList, setUpdateTimelineList] = useState(true);\n  let [refresh, setRefresh] = useState(true);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated && updateTimelineList) {\n      loadTimelineList(currentUser, userToken);\n      setUpdateTimelineList(false);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, updateTimelineList, currentUser, userToken]);\n  let [timelineID, setTimelineID] = useState(null);\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      console.debug(`Loading timeline id ${timelineID}`);\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n        let creator = json.creator === \"\" ? currentUser.username : json.creator;\n        let newTimeline = new Timeline({\n          id: json.id,\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: creator,\n          facts: json.facts.map(f => Fact.newFromYear(f))\n        });\n        dispatchTimeline({\n          type: \"set\",\n          payload: newTimeline\n        });\n        setInitialTimeline(newTimeline);\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({\n          type: \"reset\"\n        });\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n      setUpdateTimelineList(true);\n      setRefresh(false);\n    }\n  }, [timelineID, currentUser.username, userToken, refresh]);\n  function Chooser() {\n    _s();\n    function loadTimeline(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      let id = data.get(\"select-timeline\");\n      // TODO if there are no unsaved changes\n      setTimelineID(id);\n    }\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this);\n    }\n    let [currentTimelineSelection, setCurrentTimelineSelection] = useState(\"create\");\n    function updateSelection(event) {\n      setCurrentTimelineSelection(event.target.value);\n    }\n    let loadButtonText = currentTimelineSelection === \"create\" ? \"Create\" : \"Load\";\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        onChange: updateSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: loadButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  }\n  _s(Chooser, \"ECb/8ZRfSZVmeJH6rLZNuxC5EmQ=\");\n  function MetadataPanel() {\n    let creator = timelineState.creator === \"\" ? currentUser.username : timelineState.creator;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              onBlur: updateTimeline(\"title\"),\n              defaultValue: timelineState.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              onBlur: updateTimeline(\"description\"),\n              defaultValue: timelineState.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              onBlur: updateTimeline(\"keywords\", Timeline.parseKeywords),\n              defaultValue: timelineState.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              onBlur: updateTimeline(\"creator\"),\n              defaultValue: creator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({\n            type: \"removeFact\",\n            payload: {\n              fact: item\n            }\n          });\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({\n          type: \"removeFact\",\n          payload: {\n            fact: item\n          }\n        });\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FactListControls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: editFact,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: deleteFact,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instructions\",\n          children: \"Enter timeline events manually or upload the data using the forms below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n          dispatch: dispatchTimeline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timelineState.facts.map(currentFact)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this);\n  }\n  function NewFactForm() {\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: {\n            fact: factState\n          }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({\n          type: \"reset\"\n        });\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": factState.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: factState.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: factState.img,\n          src: factState.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: factState.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this);\n    }\n    function dateFromYear(year) {\n      let date = new Date();\n      date.setFullYear(year);\n      return date;\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: defaultFact.year,\n              onChange: updateFact(\"date\", dateFromYear),\n              defaultValue: factState.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              onBlur: updateFact(\"info\"),\n              defaultValue: factState.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              onBlur: updateFact(\"img\"),\n              defaultValue: factState.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: factState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this);\n  }\n  function activeStyle(isActive) {\n    return isActive ? \"active\" : \"\";\n  }\n  const hasUnsavedChanges = useCallback(() => {\n    console.debug(initialTimeline);\n    console.debug(timelineState);\n    return timelineState && initialTimeline && !timelineState.equals(initialTimeline);\n  }, [timelineState, initialTimeline]);\n\n  // TODO doesn't show changes when fact lists are identical \n  // (e.g., add an item, then delete it; still shows \"unsaved changes\")\n  useEffect(() => {\n    let msg = hasUnsavedChanges() ? \"Unsaved changes\" : \"No changes\";\n    console.debug(msg);\n  }, [hasUnsavedChanges, timelineState, initialTimeline]);\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: activeStyle(hasUnsavedChanges()),\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n      setUpdateTimelineList(true);\n    }\n  }, [saveReady, timelineState, currentUser, userToken]);\n  function DeleteTimelineButton() {\n    _s2();\n    let [timelineToDelete, setTimelineToDelete] = useState(null);\n    function deleteTimeline() {\n      if (window.confirm(\"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\")) {\n        console.debug(timelineID);\n        setTimelineToDelete(timelineID);\n      }\n    }\n    useEffect(() => {\n      async function requestDeletion(timelineID, token) {\n        let result = false;\n        let response = await fetch(`${User.SERVER}/timelines/${timelineID}/`, {\n          method: \"DELETE\",\n          headers: new Headers({\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Token ${token}`\n          })\n        });\n        if (response.ok) {\n          let json = await response.json();\n          console.debug(json);\n          result = true;\n        } else {\n          console.debug(`Could not delete timeline with id ${timelineID}: Server status ${response.status}, ${response.statusText}`);\n          result = false;\n        }\n        return result;\n      }\n      if (timelineToDelete !== null) {\n        console.debug(`Deleting timeline with id ${timelineToDelete}`);\n        if (timelineID === \"create\") {\n          dispatchTimeline({\n            type: \"reset\"\n          });\n        } else {\n          let deleted = requestDeletion(timelineToDelete, userToken);\n          if (deleted) {\n            dispatchTimeline({\n              type: \"reset\"\n            });\n            setUpdateTimelineList(true);\n          }\n        }\n        setTimelineToDelete(null);\n      }\n    }, [timelineToDelete]);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"deleteTimeline\",\n      type: \"button\",\n      onClick: deleteTimeline,\n      children: \"Delete Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this);\n  }\n  _s2(DeleteTimelineButton, \"rwotnil7EzBwzm0zKNHwJYsHVHg=\");\n  function DiscardChangesButton() {\n    function discardChanges(event) {\n      setRefresh(true);\n    }\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: discardChanges,\n      children: \"Discard Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this);\n  }\n  function Controls() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiscardChangesButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTimelineButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Your Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 545,\n    columnNumber: 5\n  }, this);\n}\n_s3(AdminPanel, \"guMV+etcW2jtcrxRjWRTWsNsc1g=\");\n_c = AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["useState","useContext","useEffect","useReducer","useCallback","User","Fact","Timeline","UserContext","UploadForm","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultTimeline","title","description","keyword","creator","facts","timelineReducer","state","action","obj","payload","newState","type","addFact","fact","removeFact","addFacts","defaultFact","date","Date","info","img","factReducer","updateReducer","dispatchFn","field","setValueFn","event","value","target","newValue","AdminPanel","_s3","_s","$RefreshSig$","_s2","userContext","authenticated","get","currentUser","userToken","timelineState","dispatchTimeline","factState","dispatchFact","updateFact","updateTimeline","initialTimeline","setInitialTimeline","saveReady","setSaveReady","updateTimelineList","setUpdateTimelineList","refresh","setRefresh","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","id","console","debug","response","fetch","SERVER","method","headers","Headers","ok","json","username","newTimeline","keywords","parseKeywords","map","f","newFromYear","status","statusText","Chooser","preventDefault","data","FormData","timelineOption","timeline","currentTimelineSelection","setCurrentTimelineSelection","updateSelection","loadButtonText","onSubmit","htmlFor","name","defaultValue","onChange","MetadataPanel","onBlur","keywordString","CurrentFactsPanel","currentFact","item","deleteFact","window","confirm","getFullYear","editFact","onClick","year","crypto","randomUUID","dispatch","NewFactForm","newFact","CardPreview","alt","src","dateFromYear","setFullYear","max","activeStyle","isActive","hasUnsavedChanges","equals","msg","SaveButton","saveTimeline","postTimeline","body","DeleteTimelineButton","timelineToDelete","setTimelineToDelete","deleteTimeline","requestDeletion","result","deleted","DiscardChangesButton","discardChanges","Controls","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminPanel.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useReducer, useCallback } from \"react\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nimport UploadForm from \"./UploadForm\";\n\nconst defaultTimeline = new Timeline({\n  title: '',\n  description: '',\n  keyword: [],\n  creator: '',\n  facts: []\n});\n\nfunction timelineReducer(state, action) {\n  let obj = action.payload;\n\n  let newState = null;\n  \n  switch(action.type) {\n    case \"set\":\n      newState = new Timeline({ ...state, ...obj });\n    break;\n\n    case \"reset\":\n      newState = defaultTimeline;\n    break;\n\n    case \"addFact\":\n      newState = state.addFact(obj.fact);\n    break;\n\n    case \"removeFact\":\n      newState = state.removeFact(obj.fact);\n    break;\n\n    case \"addFacts\":\n      newState = state.addFacts(obj);\n    break;\n\n    default:\n      newState = state; \n  }\n\n  return newState;\n}\n\n\nconst defaultFact = new Fact({\n  date: new Date(),\n  info: \"Description\", \n  img: \"https://picsum.photos/200.jpg\"\n});\n\nfunction factReducer(state, action) {\n  let obj = action.payload;\n  let newState = null;\n\n  switch(action.type) {\n    case \"set\":\n      newState = new Fact({ ...state, ...obj });\n    break;\n\n    case \"reset\":\n      newState = defaultFact;\n    break;\n\n    default:\n      newState = state;\n  };\n\n  return newState;\n}\n\nfunction updateReducer(dispatchFn: (obj: object) => obj) {\n  return function(\n    field: string, \n    setValueFn: (value: any) => any = null\n  ): void {\n    return function(event): void {\n      let value = event.target.value;\n      let newValue = setValueFn ? setValueFn(value) : value;\n      dispatchFn({\n        type: \"set\",\n        payload: { \n          [field]: newValue\n        }\n      });\n    };\n  }\n}\n\n\nexport default function AdminPanel() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser   = userContext.get.currentUser;\n  let userToken     = userContext.get.userToken;\n\n  let [timelineState, dispatchTimeline] = useReducer(timelineReducer, defaultTimeline);\n  let [factState, dispatchFact] = useReducer(factReducer, defaultFact);\n  \n  const updateFact = updateReducer(dispatchFact);\n  const updateTimeline = updateReducer(dispatchTimeline);\n\n  let [initialTimeline, setInitialTimeline] = useState(null);\n\n  let [saveReady, setSaveReady] = useState(false);\n  let [updateTimelineList, setUpdateTimelineList] = useState(true);\n  let [refresh, setRefresh] = useState(true);\n  \n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated && updateTimelineList) {\n      loadTimelineList(currentUser, userToken);\n      setUpdateTimelineList(false);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, updateTimelineList, currentUser, userToken]);\n\n  let [timelineID, setTimelineID] = useState(null);\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      console.debug(`Loading timeline id ${timelineID}`);\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n        let creator = (json.creator === \"\")\n                      ? currentUser.username\n                      : json.creator;\n\n        let newTimeline = new Timeline({\n          id:           json.id,\n          title:        json.title,\n          description:  json.description,\n          keywords:     Timeline.parseKeywords(json.keywords),\n          creator:      creator,\n          facts:        json.facts.map(f => Fact.newFromYear(f))\n        });\n\n        dispatchTimeline({\n          type: \"set\",\n          payload: newTimeline\n        });\n\n        setInitialTimeline(newTimeline);\n\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        dispatchTimeline({ type: \"reset\" });\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n      setUpdateTimelineList(true);\n      setRefresh(false);\n    }\n  }, [timelineID, currentUser.username, userToken, refresh]);\n\n\n  function Chooser() {\n    function loadTimeline(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      let id = data.get(\"select-timeline\");\n      // TODO if there are no unsaved changes\n      setTimelineID(id);\n    }\n\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n\n    let [currentTimelineSelection, setCurrentTimelineSelection] = useState(\"create\");\n\n    function updateSelection(event) {\n      setCurrentTimelineSelection(event.target.value);\n    }\n\n    let loadButtonText = (currentTimelineSelection === \"create\") \n                          ? \"Create\" : \"Load\";\n\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\" onChange={updateSelection}>\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">{ loadButtonText }</button>\n      </form>\n    );\n  }\n\n  function MetadataPanel() {\n    let creator = (timelineState.creator === \"\") \n                  ? currentUser.username \n                  : timelineState.creator;\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                onBlur={updateTimeline(\"title\")}\n                defaultValue={timelineState.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                onBlur={updateTimeline(\"description\")}\n                defaultValue={timelineState.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                onBlur={updateTimeline(\"keywords\", Timeline.parseKeywords)}\n                defaultValue={timelineState.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                onBlur={updateTimeline(\"creator\")}\n                defaultValue={creator}/>\n            </div>\n          </div>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          dispatchTimeline({ \n            type: \"removeFact\",\n            payload: { fact: item }\n          });\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        dispatchFact({\n          type: \"set\",\n          payload: item\n        });\n        dispatchTimeline({ \n          type: \"removeFact\",\n          payload: { fact: item }\n        });\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td>\n            <div className=\"FactListControls\">\n              <button type=\"button\" onClick={editFact}>Edit</button>\n              <button type=\"button\" onClick={deleteFact}>Delete</button>\n            </div>\n          </td>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <>\n          <p className=\"instructions\">Enter timeline events manually or upload the data using the forms below</p>\n          <UploadForm dispatch={dispatchTimeline} />\n        </>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <Instructions />\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timelineState.facts.map(currentFact) }\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n\n  function NewFactForm() {\n\n    function newFact(event) {\n      if (factState.date && factState.info) {\n        dispatchTimeline({\n          type: \"addFact\",\n          payload: { fact: factState }\n        });\n        console.debug(\"Added fact to timeline\");\n        dispatchFact({ type: \"reset\" });\n      }\n    }\n    \n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={factState.year} data-noselect=\"noselect\">\n          <span className=\"date\">{factState.year}</span>\n          <img alt={factState.img} src={factState.img} />\n          <span className=\"info\">{factState.info}</span>\n        </div>\n      );\n    }\n\n\n    function dateFromYear(year: number): Date {\n      let date = new Date();\n      date.setFullYear(year);\n      return date\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\">\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={defaultFact.year}\n                onChange={updateFact(\"date\", dateFromYear)}\n                defaultValue={factState.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                onBlur={updateFact(\"info\")}\n                defaultValue={factState.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                onBlur={updateFact(\"img\")}\n                defaultValue={factState.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={factState} />\n          </section>\n          <button type=\"button\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function activeStyle(isActive) {\n    return isActive ? \"active\" : \"\";\n  }\n\n  const hasUnsavedChanges = useCallback(() => {\n    console.debug(initialTimeline);\n    console.debug(timelineState);\n    return (timelineState && initialTimeline) \n      && !timelineState.equals(initialTimeline);\n  }, [timelineState, initialTimeline]);\n\n  // TODO doesn't show changes when fact lists are identical \n  // (e.g., add an item, then delete it; still shows \"unsaved changes\")\n  useEffect(() => {\n    let msg = hasUnsavedChanges() ? \"Unsaved changes\" : \"No changes\";\n    console.debug(msg);\n\n  }, [hasUnsavedChanges, timelineState, initialTimeline]);\n\n  function SaveButton() {\n    return(\n      <button className={activeStyle(hasUnsavedChanges())} id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timelineState ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timelineState.title}'`);\n    setSaveReady(true);\n  }\n\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timelineState);\n      postTimeline(currentUser, userToken, timelineState);\n      setSaveReady(false);\n      setUpdateTimelineList(true);\n    } \n  }, [saveReady, timelineState, currentUser, userToken]);\n  \n\n  function DeleteTimelineButton() {\n    let [timelineToDelete, setTimelineToDelete] = useState(null);\n\n    function deleteTimeline() {\n      if (window.confirm(\"Are you sure you want to delete this quiz? All of its fact cards will be lost. This action cannot be undone.\")) {\n        console.debug(timelineID);\n        setTimelineToDelete(timelineID);\n      }\n    }\n\n    useEffect(() => {\n      async function requestDeletion(timelineID, token) {\n        let result = false;\n        let response = await fetch(`${User.SERVER}/timelines/${timelineID}/`, {\n          method: \"DELETE\",\n          headers: new Headers({\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Token ${token}`\n          })\n        });\n        if (response.ok) {\n          let json = await response.json();\n          console.debug(json);\n          result = true;\n        } else {\n          console.debug(`Could not delete timeline with id ${timelineID}: Server status ${response.status}, ${response.statusText}`);\n          result = false;\n        }\n        return result;\n      }\n\n      if (timelineToDelete !== null) {\n        console.debug(`Deleting timeline with id ${timelineToDelete}`);\n\n        if (timelineID === \"create\") {\n          dispatchTimeline({ type: \"reset\" });\n        } else {\n          let deleted = requestDeletion(timelineToDelete, userToken);\n          if (deleted) {\n            dispatchTimeline({ type: \"reset\" });\n            setUpdateTimelineList(true);\n          }\n        }\n\n        setTimelineToDelete(null);\n      }\n    }, [timelineToDelete]);\n\n    return(\n      <button id=\"deleteTimeline\" type=\"button\" onClick={deleteTimeline}>Delete Quiz</button>\n    );\n  }\n\n\n  function DiscardChangesButton() {\n    function discardChanges(event) {\n      setRefresh(true);\n    }\n\n    return(\n      <button type=\"button\" onClick={discardChanges}>Discard Changes</button>\n    );\n  }\n\n  function Controls() {\n    return(\n      <div className=\"controls\">\n        <SaveButton />\n        <DiscardChangesButton />\n        <DeleteTimelineButton />\n      </div>\n    );\n  }\n  return(\n    <main>\n      <h1>Manage Your Quizzes</h1>\n      <Instructions />\n      <Chooser />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <Controls />\n    </main>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}