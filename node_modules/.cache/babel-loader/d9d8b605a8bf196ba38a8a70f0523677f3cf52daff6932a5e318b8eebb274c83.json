{"ast":null,"code":"import _classPrivateFieldLooseBase from\"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";import _classPrivateFieldLooseKey from\"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";var _FactList;import Card from\"./Card\";import{default as Color}from\"./RgbColorMix\";var _setColors=/*#__PURE__*/_classPrivateFieldLooseKey(\"setColors\");var _shuffle=/*#__PURE__*/_classPrivateFieldLooseKey(\"shuffle\");export default class FactList{constructor(){let cards=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];// Shuffle the array, using the Fisher-Yates/Knuth shuffle\n// (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\nObject.defineProperty(this,_shuffle,{value:_shuffle2});// PRIVATE METHODS\n// Set the colors of the cards in this list, in chronological order, to\n// evenly spaced intervals along the spectrum.\nObject.defineProperty(this,_setColors,{value:_setColors2});this.items=void 0;this.items=cards;}// PUBLIC METHODS\nclone(){return new FactList([...this.items]);}// Sort the array by the date field, ascending.\nsortByDate(){this.items.sort((c1,c2)=>{return c1.date-c2.date;});return this;}sortedByDate(){return this.clone().sortByDate();}setupClues(){_classPrivateFieldLooseBase(this,_setColors)[_setColors]();_classPrivateFieldLooseBase(this,_shuffle)[_shuffle]();}isEmpty(){return this.items.length===0;}allButLastItems(){return this.items.slice(0,-1);}last(){return this.items.at(-1);}pop(){let card=this.items.pop();return card;}dropLast(){this.pop();return this;}dropLastCopy(){return new FactList(this.items.slice(0,-1));}prepend(item){this.items.unshift(item);return this;}prependCopy(item){return new FactList([item,...this.items]);}// Add event to array and then resort by date.\naddFact(card){this.items.push(card);this.sortByDate();}resetMargins(){let resetItems=[];for(let i of this.items){let card=new Card({...i,expand:false});resetItems.push(card);}return new FactList(resetItems);}addAnswer(answer){return this.prependCopy(answer).sortedByDate().resetMargins();}}_FactList=FactList;function _setColors2(){this.sortByDate();let items=this.items;items.forEach((card,index)=>{items[index].color=Color.colorAtIndex(index,items.length,Color.SPECTRUM);});return this;}function _shuffle2(){function randomInt(max){return Math.floor(Math.random()*max);}let items=this.items;for(let i=items.length-1;i>0;--i){let j=randomInt(i);[items[i],items[j]]=[items[j],items[i]];}return this;}","map":{"version":3,"names":["Card","default","Color","_setColors","_classPrivateFieldLooseKey","_shuffle","FactList","constructor","cards","arguments","length","undefined","Object","defineProperty","value","_shuffle2","_setColors2","items","clone","sortByDate","sort","c1","c2","date","sortedByDate","setupClues","_classPrivateFieldLooseBase","isEmpty","allButLastItems","slice","last","at","pop","card","dropLast","dropLastCopy","prepend","item","unshift","prependCopy","addFact","push","resetMargins","resetItems","i","expand","addAnswer","answer","_FactList","forEach","index","color","colorAtIndex","SPECTRUM","randomInt","max","Math","floor","random","j"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/FactList.tsx"],"sourcesContent":["import Card from \"./Card\";\nimport { default as Color } from \"./RgbColorMix\";\n\nexport default class FactList {\n  items: Array<Card>;\n\n  constructor(cards: Array<Card> = []) {\n    this.items = cards;\n  }\n\n  // PRIVATE METHODS\n  \n  // Set the colors of the cards in this list, in chronological order, to\n  // evenly spaced intervals along the spectrum.\n  #setColors(): FactList {\n    this.sortByDate();\n    let items = this.items;\n\n    items.forEach((card, index) => {\n      items[index].color = Color.colorAtIndex(index, items.length, \n                                              Color.SPECTRUM);\n    });\n    return this;\n  } \n\n  // Shuffle the array, using the Fisher-Yates/Knuth shuffle\n  // (`https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle`)\n  #shuffle(): FactList {\n    \n    function randomInt(max: number): number {\n      return Math.floor(Math.random() * max);\n    } \n\n    let items = this.items;\n\n    for (let i = items.length - 1; i > 0; --i) {\n      let j = randomInt(i);\n      [items[i], items[j]] = [items[j], items[i]];\n    }\n\n    return this;\n  }\n\n  // PUBLIC METHODS\n\n  clone(): FactList {\n    return new FactList([...this.items]);\n  }\n\n  // Sort the array by the date field, ascending.\n  sortByDate(): FactList {\n    this.items.sort((c1, c2) => { return c1.date - c2.date });\n    return this;\n  }\n\n  sortedByDate(): FactList {\n    return this.clone().sortByDate();\n  }\n  \n\n  setupClues() {\n    this.#setColors();\n    this.#shuffle();\n  }\n\n  isEmpty(): boolean {\n    return this.items.length === 0;\n  }\n\n  allButLastItems(): Array<Card> {\n    return this.items.slice(0, -1);\n  }\n\n  last(): Card {\n    return this.items.at(-1);\n  }\n\n  pop(): Card {\n    let card = this.items.pop();\n    return card;\n  }\n\n  dropLast(): FactList {\n    this.pop();\n    return this;\n  }\n\n  dropLastCopy(): FactList {\n    return new FactList(this.items.slice(0, -1));\n  }\n\n  prepend(item): FactList {\n    this.items.unshift(item);\n    return this;\n  }\n  \n  prependCopy(item): FactList {\n    return new FactList([item, ...this.items]);\n  }\n\n  // Add event to array and then resort by date.\n  addFact(card) {\n    this.items.push(card);\n    this.sortByDate();\n  }\n\n  resetMargins(): FactList {\n    let resetItems = [];\n    for (let i of this.items) {\n      let card = new Card({...i, expand: false});\n      resetItems.push(card);\n    }\n    return new FactList(resetItems);\n  }\n\n  addAnswer(answer): FactList {\n    return this.prependCopy(answer).sortedByDate().resetMargins();\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}