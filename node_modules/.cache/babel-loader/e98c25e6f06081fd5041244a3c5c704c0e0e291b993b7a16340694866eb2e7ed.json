{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminChooser.tsx\",\n  _s = $RefreshSig$();\n// Menu to choose which timeline to load (or create new)\n\nimport { useState, useContext, useEffect } from \"react\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminChooser({\n  setID,\n  update,\n  setUpdate\n}) {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser = userContext.get.currentUser;\n  let userToken = userContext.get.userToken;\n  let [timelineList, setTimelineList] = useState([]);\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setID(id);\n  }\n  useEffect(() => {\n    async function loadTimelineList(token) {\n      let list = await Timeline.listTimelines(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated && update) {\n      loadTimelineList(userToken);\n      setUpdate(false);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, update, currentUser, userToken]);\n  function timelineOption(timeline) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: timeline.id,\n      children: timeline.title\n    }, timeline.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Change display of submit button whether creating or loading\n  let [selection, setSelection] = useState(\"create\");\n  function updateSelection(event) {\n    setSelection(event.target.value);\n  }\n  let loadButtonText = selection === \"create\" ? \"Create\" : \"Load\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"chooser\",\n    onSubmit: loadTimeline,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"select-timeline\",\n      children: \"Select a Timeline:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"select-timeline\",\n      defaultValue: \"create\",\n      onChange: updateSelection,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"create\",\n        children: \"Create New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), timelineList.map(timelineOption)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: loadButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminChooser, \"w7SARuwynRokTSqjcCnspYGeY4E=\");\n_c = AdminChooser;\nvar _c;\n$RefreshReg$(_c, \"AdminChooser\");","map":{"version":3,"names":["useState","useContext","useEffect","Timeline","UserContext","jsxDEV","_jsxDEV","AdminChooser","setID","update","setUpdate","_s","userContext","authenticated","get","currentUser","userToken","timelineList","setTimelineList","loadTimeline","event","preventDefault","data","FormData","target","id","loadTimelineList","token","list","listTimelines","timelineOption","timeline","value","children","title","fileName","_jsxFileName","lineNumber","columnNumber","selection","setSelection","updateSelection","loadButtonText","onSubmit","htmlFor","name","defaultValue","onChange","map","type","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/AdminChooser.tsx"],"sourcesContent":["// Menu to choose which timeline to load (or create new)\n\nimport { useState, useContext, useEffect } from \"react\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\ninterface ChooserInput {\n  setID: (id: number) => void,\n  update: boolean,\n  setUpdate: (b: boolean) => void\n}\n\nexport default function AdminChooser({ \n  setID, update, setUpdate \n}: ChooserInput): React.ReactElement {\n\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get.authenticated;\n  let currentUser   = userContext.get.currentUser;\n  let userToken     = userContext.get.userToken;\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  function loadTimeline(event: React.FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimelineList(token: string): void {\n      let list = await Timeline.listTimelines(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n\n    if (authenticated && update) {\n      loadTimelineList(userToken);\n      setUpdate(false);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, update, currentUser, userToken]);\n\n\n  function timelineOption(timeline: Timeline): React.ReactElement {\n    return(\n      <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n    );\n  }\n\n  // Change display of submit button whether creating or loading\n  let [selection, setSelection] = useState(\"create\");\n\n  function updateSelection(event: React.FormEvent<HTMLFormElement>): void {\n    setSelection(event.target.value);\n  }\n\n  let loadButtonText = (selection === \"create\") ? \"Create\" : \"Load\";\n\n  return(\n    <form id=\"chooser\" onSubmit={loadTimeline}>\n      <label htmlFor=\"select-timeline\">Select a Timeline:</label>\n      <select name=\"select-timeline\" \n        defaultValue=\"create\" \n        onChange={updateSelection}>\n        <option value=\"create\">Create New</option>\n        { timelineList.map(timelineOption) }\n      </select>\n      <button type=\"submit\">{ loadButtonText }</button>\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}