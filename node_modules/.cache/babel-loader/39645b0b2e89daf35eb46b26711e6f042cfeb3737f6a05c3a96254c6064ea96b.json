{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport Game from \"../classes/Game\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputForm() {\n  _s();\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n  function userUploadUrl(files) {\n    return URL.createObjectURL(files[0]);\n  }\n  function getInputUrl(source, files) {\n    let url = \"\";\n    if (source) {\n      if (files.length > 0) {\n        url = userUploadUrl(files);\n      } else {\n        url = `input/${source}.json`;\n      }\n    }\n    return url;\n  }\n  async function cardArrayFromJson(json) {\n    let cards = [];\n    for (let entry of json) {\n      try {\n        let validCard = await Card.newSafeCard(entry);\n        if (validCard && validCard.isSafe) {\n          cards.push(validCard);\n        } else {\n          throw new Error(`Faulty card input {date: ${entry.date}, info: ${entry.info}}; skipping`);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    return cards;\n  }\n  async function loadTimeline(url) {\n    let response = await fetch(url).catch(e => {\n      console.error(e);\n      return [];\n    });\n    let data = await response.json().catch(e => {\n      console.error(e);\n      return [];\n    });\n    let cards = await cardArrayFromJson(data).catch(e => {\n      console.error(e);\n      return null;\n    });\n    return cards;\n  }\n  async function loadGame(event) {\n    let files = event.currentTarget.fileInput.files;\n    let source = event.currentTarget.source.value;\n    try {\n      let url = getInputUrl(source, files);\n      if (url) {\n        console.log(`Loading file ${url}`);\n        let clues = await loadTimeline(url).catch(e => {\n          console.error(e);\n          return null;\n        });\n        if (clues) {\n          setGame(prevGame => new Game(clues, prevGame.timeline, prevGame.score));\n        }\n      } else {\n        throw new Error(\"Invalid input, cannot play game.\");\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  useEffect(() => loadAndPlay, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"inputForm\",\n    onSubmit: loadAndPlay,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"source\",\n      children: \"Choose a timeline:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"source\",\n      id: \"source\",\n      required: true,\n      defaultValue: \"music\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"music\",\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wars\",\n        children: \"Wars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"upload\",\n        children: \"Upload a custom timeline...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"file\",\n      className: \"hide\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: [\"Upload JSON timeline file (\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"about.html\",\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 63\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        accept: \".json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      id: \"playbutton\",\n      children: \"Play!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"wqnYpdjMkT3eDhbBjwDmfBO/TFg=\");\n_c = InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useContext","useEffect","TimelineContext","Game","jsxDEV","_jsxDEV","InputForm","_s","context","setGame","set","userUploadUrl","files","URL","createObjectURL","getInputUrl","source","url","length","cardArrayFromJson","json","cards","entry","validCard","Card","newSafeCard","isSafe","push","Error","date","info","e","console","error","loadTimeline","response","fetch","catch","data","loadGame","event","currentTarget","fileInput","value","log","clues","prevGame","timeline","score","loadAndPlay","id","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","required","defaultValue","className","href","type","accept","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport FactList from \"../classes/FactList\";\nimport Game from \"../classes/Game\";\n\nexport default function InputForm() {\n\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n\n  function userUploadUrl(files: FileList): string {\n    return URL.createObjectURL(files[0]);\n  }\n\n  function getInputUrl(source: string, files: FileList): string {\n    let url = \"\";\n    if (source) {\n      if (files.length > 0) {\n        url = userUploadUrl(files);\n      } else {\n        url = `input/${source}.json`;\n      }\n    }\n    return url;\n  }\n\n  async function cardArrayFromJson(json: Array<{date, info}>): Array<Card> {\n    let cards = [];\n    for (let entry of json) {\n      try {\n        let validCard = await Card.newSafeCard(entry);\n        if (validCard && validCard.isSafe) {\n          cards.push(validCard);\n        } else {\n          throw new Error(`Faulty card input {date: ${entry.date}, info: ${entry.info}}; skipping`);\n        } \n      } catch(e) {\n        console.error(e);\n      }\n    }\n    return cards;\n  }\n\n  async function loadTimeline(url: string): FactList | null {\n    let response = await fetch(url).catch(e => {\n      console.error(e);\n      return [];\n    });\n    let data = await response.json().catch(e => {\n      console.error(e);\n      return [];\n    });\n\n    let cards = await cardArrayFromJson(data).catch(e => {\n      console.error(e);\n      return null;\n    });\n    return cards;\n  }\n\n  async function loadGame(event: React.FormEvent<HTMLFormElement>): void {\n    let files = event.currentTarget.fileInput.files as FileList;\n    let source = event.currentTarget.source.value as string;\n\n    try {\n      let url = getInputUrl(source, files);\n      if (url) {\n        console.log(`Loading file ${url}`);\n        let clues = await loadTimeline(url).catch(e => {\n          console.error(e)\n          return null;\n        });\n        if (clues) {\n          setGame(prevGame => new Game(clues, prevGame.timeline, prevGame.score));\n        }\n      } else {\n\n        throw new Error(\"Invalid input, cannot play game.\");\n      }\n    } catch(e) {\n      console.error(e);\n    }\n  }\n    useEffect(() => loadAndPlay, []);\n\n  return(\n    <form id=\"inputForm\" onSubmit={loadAndPlay}>\n      <label htmlFor=\"source\">Choose a timeline:</label>\n      <select name=\"source\" id=\"source\" required defaultValue=\"music\">\n        <option value=\"music\">Music</option>\n        <option value=\"wars\">Wars</option>\n        <option value=\"upload\">Upload a custom timeline...</option>\n      </select>\n      <div id=\"file\" className=\"hide\">\n        <label htmlFor=\"fileInput\">Upload JSON timeline file (<a href=\"about.html\">?</a>)</label>\n        <input id=\"fileInput\" type=\"file\" accept=\".json\" />\n      </div>\n      <button type=\"submit\" id=\"playbutton\">Play!</button>\n    </form>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}