{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/Timeline.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport Card from \"./Card\";\n\n/** CSS value for card's normal left margin when shifted right */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_LEFT_MARGIN_DEFAULT = \"var(--card-margin)\";\nconst CARD_LEFT_MARGIN_EXTRA = `calc(5 * ${CARD_LEFT_MARGIN_DEFAULT})`;\n\n// TODO\n// function setCardLeftMargin(el, length) {\n//   el.style.marginLeft = length;\n// }\n\n/** \n * Return a card element, if found at given coordinates; or null. \n * @param {number} x - horizontal coordinate\n * @param {number} y - vertical coordinate\n * @returns {element} - DOM div.card element at (x,y), if there is one\n */\nfunction cardAtCoord(x, y) {\n  let el = document.elementFromPoint(x, y);\n  return isCard(el) ? el : null;\n}\n\n/**\n * Procedure: Allow to move by dragging. Insert gap to the left of a card when\n * the drag point is in range to guess this card.\n * @param {event} event\n */\nfunction dragoverHandler(event) {\n  event.preventDefault();\n  let bounds = event.target.getBoundingClientRect();\n  let center = midpoint(bounds.left, bounds.right);\n  if (event.clientX <= center) {\n    console.log(\"In range\");\n    let cardUnderDrag = cardAtCoord(event.clientX, event.clientY);\n    if (cardUnderDrag) {\n      insertTimelineGap(cardUnderDrag);\n    }\n  }\n  event.dataTransfer.effectAllowed = \"move\";\n}\n\n/**\n * Procedure: Shift a card to the right (when user is dragging over it)\n * @param {element} cardNode - div.card DOM element in timeline\n */\nfunction insertTimelineGap(cardNode) {\n  setCardLeftMargin(cardNode, CARD_LEFT_MARGIN_EXTRA);\n}\nfunction removeTimelineGap(el) {\n  setCardLeftMargin(el, CARD_LEFT_MARGIN_DEFAULT);\n}\nfunction dragleaveHandler(event) {\n  let el = event.target;\n  if (isCardElement(el)) {\n    removeTimelineGap(el);\n  }\n}\nlet dragDropInterface = {\n  onDrop: dropHandler,\n  onDragOver: dragoverHandler,\n  onDragLeave: dragleaveHandler\n};\nexport default function Clues() {\n  _s();\n  let context = useContext(TimelineContext);\n  let game = context.get;\n  let timeline = game.timeline;\n  let [lmargin, setLmargin] = useState(CARD_LEFT_MARGIN_DEFAULT);\n  function isCardElement(el) {\n    return el.className === \"card\";\n  }\n  if (game.isActive && timeline && !timeline.isEmpty()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline\",\n      ...dragDropInterface,\n      children: timeline.items.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        children: card\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Clues, \"KaOWrO0WMful8lGqC6B6QnTCvDY=\");\n_c = Clues;\nvar _c;\n$RefreshReg$(_c, \"Clues\");","map":{"version":3,"names":["useContext","TimelineContext","Card","jsxDEV","_jsxDEV","CARD_LEFT_MARGIN_DEFAULT","CARD_LEFT_MARGIN_EXTRA","cardAtCoord","x","y","el","document","elementFromPoint","isCard","dragoverHandler","event","preventDefault","bounds","target","getBoundingClientRect","center","midpoint","left","right","clientX","console","log","cardUnderDrag","clientY","insertTimelineGap","dataTransfer","effectAllowed","cardNode","setCardLeftMargin","removeTimelineGap","dragleaveHandler","isCardElement","dragDropInterface","onDrop","dropHandler","onDragOver","onDragLeave","Clues","_s","context","game","get","timeline","lmargin","setLmargin","useState","className","isActive","isEmpty","children","items","map","card","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/Timeline.tsx"],"sourcesContent":["import { useContext } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport Card from \"./Card\";\n\n/** CSS value for card's normal left margin when shifted right */\nconst CARD_LEFT_MARGIN_DEFAULT = \"var(--card-margin)\";\nconst CARD_LEFT_MARGIN_EXTRA = `calc(5 * ${CARD_LEFT_MARGIN_DEFAULT})`;\n\n// TODO\n// function setCardLeftMargin(el, length) {\n//   el.style.marginLeft = length;\n// }\n\n/** \n * Return a card element, if found at given coordinates; or null. \n * @param {number} x - horizontal coordinate\n * @param {number} y - vertical coordinate\n * @returns {element} - DOM div.card element at (x,y), if there is one\n */\nfunction cardAtCoord(x, y) {\n  let el = document.elementFromPoint(x, y);\n  return isCard(el) ? el : null;\n}\n\n\n/**\n * Procedure: Allow to move by dragging. Insert gap to the left of a card when\n * the drag point is in range to guess this card.\n * @param {event} event\n */\nfunction dragoverHandler(event) {\n  event.preventDefault();\n\n  let bounds = event.target.getBoundingClientRect();\n  let center = midpoint(bounds.left, bounds.right);\n\n  if (event.clientX <= center) {\n    console.log(\"In range\");\n    let cardUnderDrag = cardAtCoord(event.clientX, event.clientY);\n    if (cardUnderDrag) {\n      insertTimelineGap(cardUnderDrag);\n    }\n  }\n  event.dataTransfer.effectAllowed = \"move\";\n}\n\n\n/**\n * Procedure: Shift a card to the right (when user is dragging over it)\n * @param {element} cardNode - div.card DOM element in timeline\n */\nfunction insertTimelineGap(cardNode) {\n  setCardLeftMargin(cardNode, CARD_LEFT_MARGIN_EXTRA);\n}\n\nfunction removeTimelineGap(el: HTMLElement): void {\n  setCardLeftMargin(el, CARD_LEFT_MARGIN_DEFAULT);\n}\n\nfunction dragleaveHandler(event: React.DragEvent<HTMLElement>): void {\n  let el = event.target;\n  if (isCardElement(el)) {\n    removeTimelineGap(el);\n  }\n}\n\nlet dragDropInterface = {\n  onDrop: dropHandler,\n  onDragOver: dragoverHandler,\n  onDragLeave: dragleaveHandler\n}\n\n\nexport default function Clues() {\n  let context = useContext(TimelineContext);\n  let game = context.get;\n  let timeline = game.timeline;\n\n  let [lmargin, setLmargin] = useState(CARD_LEFT_MARGIN_DEFAULT);\n\n  function isCardElement(el: HTMLElement): boolean {\n    return el.className === \"card\";\n  }\n\n  if (game.isActive && timeline && !timeline.isEmpty()) {\n    return(\n      <div className=\"timeline\" {...dragDropInterface}>\n        {timeline.items.map(card => <Card key={card.id}>{card}</Card>)}\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}