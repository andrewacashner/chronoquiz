{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/Timeline.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport Card from \"./Card\";\n\n/** CSS value for card's normal left margin when shifted right */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_LEFT_MARGIN_DEFAULT = \"var(--card-margin)\";\nconst CARD_LEFT_MARGIN_EXTRA = `calc(5 * ${CARD_LEFT_MARGIN_DEFAULT})`;\n\n// TODO\n// function setCardLeftMargin(el, length) {\n//   el.style.marginLeft = length;\n// }\n\n/** \n * Return a card element, if found at given coordinates; or null. \n * @param {number} x - horizontal coordinate\n * @param {number} y - vertical coordinate\n * @returns {element} - DOM div.card element at (x,y), if there is one\n */\nfunction cardAtCoord(x, y) {\n  let el = document.elementFromPoint(x, y);\n  return isCard(el) ? el : null;\n}\nfunction isCardElement(el) {\n  return el.className === \"card\";\n}\nexport default function Clues() {\n  _s();\n  let context = useContext(TimelineContext);\n  let game = context.get;\n  let timeline = game.timeline;\n  let [lmargin, setLmargin] = useState(CARD_LEFT_MARGIN_DEFAULT);\n  const expandMargin = () => setLmargin(CARD_LEFT_MARGIN_EXTRA);\n  const restoreMargin = () => setLmargin(CARD_LEFT_MARGIN_DEFAULT);\n\n  // Shift a card to the right (when user is dragging over it)\n  function insertTimelineGap(cardNode) {\n    expandMargin();\n  }\n  function removeTimelineGap(el) {\n    setCardLeftMargin(el, CARD_LEFT_MARGIN_DEFAULT);\n  }\n  // Allow to move by dragging. Insert gap to the left of a card when the drag\n  // point is in range to guess this card.\n  function dragoverHandler(event) {\n    event.preventDefault();\n    let bounds = event.target.getBoundingClientRect();\n    let center = midpoint(bounds.left, bounds.right);\n    if (event.clientX <= center) {\n      console.log(\"In range\");\n      let cardUnderDrag = cardAtCoord(event.clientX, event.clientY);\n      if (cardUnderDrag) {\n        insertTimelineGap(cardUnderDrag);\n      }\n    }\n    event.dataTransfer.effectAllowed = \"move\";\n  }\n  function dragleaveHandler(event) {\n    let el = event.target;\n    if (isCardElement(el)) {\n      removeTimelineGap(el);\n    }\n  }\n  let dragDropInterface = {\n    onDrop: dropHandler,\n    onDragOver: dragoverHandler,\n    onDragLeave: dragleaveHandler\n  };\n  if (game.isActive && timeline && !timeline.isEmpty()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline\",\n      ...dragDropInterface,\n      children: timeline.items.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        children: card\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Clues, \"KaOWrO0WMful8lGqC6B6QnTCvDY=\");\n_c = Clues;\nvar _c;\n$RefreshReg$(_c, \"Clues\");","map":{"version":3,"names":["useContext","TimelineContext","Card","jsxDEV","_jsxDEV","CARD_LEFT_MARGIN_DEFAULT","CARD_LEFT_MARGIN_EXTRA","cardAtCoord","x","y","el","document","elementFromPoint","isCard","isCardElement","className","Clues","_s","context","game","get","timeline","lmargin","setLmargin","useState","expandMargin","restoreMargin","insertTimelineGap","cardNode","removeTimelineGap","setCardLeftMargin","dragoverHandler","event","preventDefault","bounds","target","getBoundingClientRect","center","midpoint","left","right","clientX","console","log","cardUnderDrag","clientY","dataTransfer","effectAllowed","dragleaveHandler","dragDropInterface","onDrop","dropHandler","onDragOver","onDragLeave","isActive","isEmpty","children","items","map","card","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/Timeline.tsx"],"sourcesContent":["import { useContext } from \"react\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport Card from \"./Card\";\n\n/** CSS value for card's normal left margin when shifted right */\nconst CARD_LEFT_MARGIN_DEFAULT = \"var(--card-margin)\";\nconst CARD_LEFT_MARGIN_EXTRA = `calc(5 * ${CARD_LEFT_MARGIN_DEFAULT})`;\n\n// TODO\n// function setCardLeftMargin(el, length) {\n//   el.style.marginLeft = length;\n// }\n\n/** \n * Return a card element, if found at given coordinates; or null. \n * @param {number} x - horizontal coordinate\n * @param {number} y - vertical coordinate\n * @returns {element} - DOM div.card element at (x,y), if there is one\n */\nfunction cardAtCoord(x, y) {\n  let el = document.elementFromPoint(x, y);\n  return isCard(el) ? el : null;\n}\n\n\nfunction isCardElement(el: HTMLElement): boolean {\n  return el.className === \"card\";\n}\n\n\nexport default function Clues() {\n  let context = useContext(TimelineContext);\n  let game = context.get;\n  let timeline = game.timeline;\n\n  let [lmargin, setLmargin] = useState(CARD_LEFT_MARGIN_DEFAULT);\n\n  const expandMargin = () => setLmargin(CARD_LEFT_MARGIN_EXTRA);\n  const restoreMargin = () => setLmargin(CARD_LEFT_MARGIN_DEFAULT);\n\n  // Shift a card to the right (when user is dragging over it)\n  function insertTimelineGap(cardNode) {\n    expandMargin();\n  }\n\n  function removeTimelineGap(el: HTMLElement): void {\n    setCardLeftMargin(el, CARD_LEFT_MARGIN_DEFAULT);\n  }\n  // Allow to move by dragging. Insert gap to the left of a card when the drag\n  // point is in range to guess this card.\n  function dragoverHandler(event) {\n    event.preventDefault();\n\n    let bounds = event.target.getBoundingClientRect();\n    let center = midpoint(bounds.left, bounds.right);\n\n    if (event.clientX <= center) {\n      console.log(\"In range\");\n      let cardUnderDrag = cardAtCoord(event.clientX, event.clientY);\n      if (cardUnderDrag) {\n        insertTimelineGap(cardUnderDrag);\n      }\n    }\n    event.dataTransfer.effectAllowed = \"move\";\n  }\n\n\n\n\n  function dragleaveHandler(event: React.DragEvent<HTMLElement>): void {\n    let el = event.target;\n    if (isCardElement(el)) {\n      removeTimelineGap(el);\n    }\n  }\n\n  let dragDropInterface = {\n    onDrop: dropHandler,\n    onDragOver: dragoverHandler,\n    onDragLeave: dragleaveHandler\n  } \n\n  if (game.isActive && timeline && !timeline.isEmpty()) {\n    return(\n      <div className=\"timeline\" {...dragDropInterface}>\n        {timeline.items.map(card => <Card key={card.id}>{card}</Card>)}\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}