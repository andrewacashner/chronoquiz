{"ast":null,"code":"export default class Timeline{constructor(){let{id=-1,title=\"\",description=\"\",keywords=[],creator=\"\",facts=[]}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.id=void 0;this.title=void 0;this.description=void 0;this.keywords=void 0;this.creator=void 0;this.facts=void 0;this.id=id;this.title=title;this.description=description;this.keywords=keywords;this.creator=creator;this.facts=facts;}static parseKeywords(){let inputStr=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";if(inputStr){return inputStr.split(\";\").map(s=>s.trim());}else{return[];}}get keywordString(){return this.keywords.join(\"; \");}static newFromKeywordString(_ref){let{id,title,description,keywords,creator,facts}=_ref;return new Timeline({id:id,title:title,description:description,keywords:keywords?Timeline.parseKeywords(keywords):[],creator:creator,facts:facts});}json(){return JSON.stringify({id:this.id,title:this.title,description:this.description,keywords:this.keywordString,creator:this.creator,facts:this.facts.map(e=>e.json())});}sortByDate(){this.facts.sort((c1,c2)=>c1.date-c2.date);return this;}addFact(fact){let newTimeline=new Timeline({...this,facts:[...this.facts,fact]});return newTimeline.sortByDate();}removeFact(fact){let filtered=this.facts.filter(f=>f!==fact);return new Timeline({...this,facts:filtered});}addFacts(facts){let newTimeline=new Timeline({...this,facts:[...this.facts,...facts]});return newTimeline.sortByDate();}equals(other){let levelOne=Object.entries(this).every(_ref2=>{let[key,value]=_ref2;return value===other[key];});let[kw,otherKw]=[this.keywords,other.keywords];let keywordTest=kw.length===otherKw.length&&kw.every(k=>otherKw.includes(k));let[facts,otherFacts]=[this.facts,other.facts];let factTest=facts.length===otherFacts.length&&facts.every((f,index)=>f.equals(otherFacts[index]));return levelOne&&keywordTest&&factTest;}}","map":{"version":3,"names":["Timeline","constructor","id","title","description","keywords","creator","facts","arguments","length","undefined","parseKeywords","inputStr","split","map","s","trim","keywordString","join","newFromKeywordString","_ref","json","JSON","stringify","e","sortByDate","sort","c1","c2","date","addFact","fact","newTimeline","removeFact","filtered","filter","f","addFacts","equals","other","levelOne","Object","entries","every","_ref2","key","value","kw","otherKw","keywordTest","k","includes","otherFacts","factTest","index"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/classes/Timeline.tsx"],"sourcesContent":["interface TimelineInput {\n  id: number;\n  title: string;\n  description: string;\n  keywords: Array<string>;\n  creator: string;\n  facts: FactList;\n}\n\nexport default class Timeline {\n  id: number;\n  title: string;\n  description: string;\n  keywords: Array<string>;\n  creator: string;\n  facts: Array<Fact>;\n\n  constructor({ \n    id = -1,\n    title = \"\", \n    description = \"\", \n    keywords = [], \n    creator = \"\", \n    facts = []\n  }: TimelineInput = {}) {\n    this.id = id;\n    this.title = title;\n    this.description = description;\n    this.keywords = keywords;\n    this.creator = creator;\n    this.facts = facts;\n  }\n\n  static parseKeywords(inputStr: string = \"\"): Array<string> {\n    if (inputStr) {\n      return inputStr.split(\";\").map(s => s.trim());\n    } else {\n      return [];\n    }\n  }\n\n  get keywordString() {\n    return this.keywords.join(\"; \");\n  }\n\n  static newFromKeywordString({ id, title, description, keywords, creator, facts }) {\n    return new Timeline({\n      id: id,\n      title: title,\n      description: description,\n      keywords: keywords ? Timeline.parseKeywords(keywords) : [],\n      creator: creator,\n      facts: facts\n    });\n  }\n\n  json() {\n    return JSON.stringify({\n      id: this.id,\n      title: this.title,\n      description: this.description,\n      keywords: this.keywordString,\n      creator: this.creator,\n      facts: this.facts.map(e => e.json())\n     });\n  }\n\n  sortByDate() {\n    this.facts.sort((c1, c2) => c1.date - c2.date);\n    return this;\n  }\n\n  addFact(fact) {\n    let newTimeline = new Timeline({\n      ...this,\n      facts: [...this.facts, fact]\n    });\n    return newTimeline.sortByDate();\n  }\n\n  removeFact(fact) {\n    let filtered = this.facts.filter(f => f !== fact);\n    return new Timeline({\n      ...this,\n      facts: filtered\n    });\n  }\n\n  addFacts(facts) {\n    let newTimeline = new Timeline({\n      ...this,\n      facts: [...this.facts, ...facts]\n    });\n    return newTimeline.sortByDate();\n  }\n\n  equals(other: Timeline): boolean {\n    let levelOne = Object.entries(this).every(\n      ([key, value]) => value === other[key]);\n\n    let [kw, otherKw] = [this.keywords, other.keywords];\n    let keywordTest = (kw.length === otherKw.length) \n    && kw.every(k => otherKw.includes(k));\n\n    let [facts, otherFacts] = [this.facts, other.facts];\n    let factTest = (facts.length === otherFacts.length)\n    && facts.every((f, index) => f.equals(otherFacts[index]));\n\n    return levelOne && keywordTest && factTest;\n  }\n\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}