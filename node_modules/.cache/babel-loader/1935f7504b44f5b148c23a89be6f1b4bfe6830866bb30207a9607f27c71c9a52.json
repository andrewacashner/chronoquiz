{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\nimport UserContext from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n  let [metadata, setMetadata] = useState({\n    title: '',\n    description: '',\n    keywordString: [],\n    creator: currentUser.username\n  });\n  const startingTimeline = useCallback(() => {\n    return new Timeline({\n      creator: currentUser.username\n    });\n  }, [currentUser.username]);\n  let [timeline, setTimeline] = useState(startingTimeline());\n  console.debug(timeline);\n  let [saveReady, setSaveReady] = useState(false);\n  function Instructions() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Your data will not be saved until you click Save.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  let [timelineList, setTimelineList] = useState([]);\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n  let [timelineID, setTimelineID] = useState(null);\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n      if (response.ok) {\n        var _Timeline$creator;\n        let json = await response.json();\n        console.debug(json);\n        setMetadata({\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: (_Timeline$creator = Timeline.creator) !== null && _Timeline$creator !== void 0 ? _Timeline$creator : currentUser.username\n        });\n        setTimeline(new Timeline({\n          id: json.id,\n          ...metadata,\n          facts: json.facts.map(f => Fact.newFromYear(f))\n        }));\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        setTimeline(startingTimeline());\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, startingTimeline, userToken]);\n  function Chooser() {\n    function timelineOption(timeline) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeline.id,\n        children: timeline.title\n      }, timeline.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chooser\",\n      onSubmit: loadTimeline,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"select-timeline\",\n        children: \"Select a Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select-timeline\",\n        defaultValue: \"create\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"create\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), timelineList.map(timelineOption)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n  function setTimelineMetadata(newMetadata) {\n    setTimeline(prev => new Timeline({\n      ...prev,\n      title: newMetadata.title,\n      description: newMetadata.description,\n      keywords: Timeline.parseKeywords(newMetadata.keywordString),\n      creator: newMetadata.creator\n    }));\n  }\n  function MetadataPanel() {\n    function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      setMetadata({\n        title: data.get(\"title\"),\n        description: data.get(\"description\"),\n        keywordString: data.get(\"keywords\"),\n        creator: data.get(\"creator\")\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(metadata);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"metadata\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"timelinePanel\",\n        onSubmit: updateMetadata,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              defaultValue: metadata.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              defaultValue: metadata.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywords\",\n              children: \"Keywords (separated with semicolons)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"keywords\",\n              defaultValue: metadata.keywordString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creator\",\n              children: \"Creator (for public display; default: your username)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"creator\",\n              defaultValue: metadata.creator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Metadata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n  function CurrentFactsPanel() {\n    function currentFact(item) {\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          setTimeline(prev => prev.removeFact(item));\n        }\n      }\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        setTestCard(item);\n        setTimeline(prev => prev.removeFact(item));\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: editFact,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: deleteFact,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, crypto.randomUUID(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this);\n    }\n    function Instructions() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Enter timeline events using the form below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"currentTimeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Timeline Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"timeline\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: timeline ? timeline.facts.map(currentFact) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), timeline ? null : /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n  const startingCard = () => new Fact({\n    date: new Date(),\n    info: \"Description\",\n    img: \"https://picsum.photos/200.jpg\"\n  });\n  let [testCard, setTestCard] = useState(startingCard());\n  function NewFactForm() {\n    function setTimelineFacts(facts) {\n      let newTimeline = new Timeline({\n        ...timeline,\n        facts: facts\n      });\n      newTimeline.sortByDate();\n      setTimeline(newTimeline);\n    }\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        setTimelineFacts([...timeline.facts, testCard]);\n        console.debug(\"Added fact to timeline\");\n        setTestCard(startingCard());\n      }\n    }\n    function CardPreview({\n      fact\n    }) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        \"data-when\": fact.year,\n        \"data-noselect\": \"noselect\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: fact.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: fact.img,\n          src: fact.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: fact.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this);\n    }\n    function preview(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      let newDate = new Date();\n      newDate.setFullYear(data.get(\"date\"));\n      setTestCard(new Fact({\n        date: newDate,\n        info: data.get(\"info\"),\n        img: data.get(\"img\")\n      }));\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"new\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addFactForm\",\n        onSubmit: preview,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"date\",\n              max: startingCard().year,\n              defaultValue: testCard.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"info\",\n              children: \"Description of event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"info\",\n              defaultValue: testCard.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img\",\n              children: \"Complete URL of image (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              name: \"img\",\n              defaultValue: testCard.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardPreview, {\n            fact: testCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"preview\",\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"add\",\n          onClick: newFact,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this);\n  }\n  function SaveButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      type: \"button\",\n      onClick: saveTimeline,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timeline.title}'`);\n    setTimelineMetadata(metadata);\n    setSaveReady(true);\n  }\n  function ResetButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset\",\n      type: \"button\",\n      onClick: resetTimeline,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTimeline(startingTimeline());\n    }\n  }\n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    }\n  }, [saveReady, timeline, currentUser, userToken]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Chronoquiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetadataPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentFactsPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"jHRKu4UPZcWaJGzdSrUmRe6J4nE=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useContext","useEffect","useCallback","useNavigate","User","Fact","Timeline","UserContext","jsxDEV","_jsxDEV","Create","_s","userContext","authenticated","get","currentUser","userToken","navigate","metadata","setMetadata","title","description","keywordString","creator","username","startingTimeline","timeline","setTimeline","console","debug","saveReady","setSaveReady","Instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","timelineList","setTimelineList","loadTimelineList","user","token","list","loadUserTimelineList","timelineID","setTimelineID","loadTimeline","event","preventDefault","data","FormData","target","id","response","fetch","SERVER","method","headers","Headers","ok","_Timeline$creator","json","keywords","parseKeywords","facts","map","f","newFromYear","status","statusText","Chooser","timelineOption","value","onSubmit","for","name","defaultValue","type","setTimelineMetadata","newMetadata","prev","MetadataPanel","updateMetadata","log","htmlFor","CurrentFactsPanel","currentFact","item","deleteFact","window","confirm","date","getFullYear","removeFact","editFact","setTestCard","onClick","year","info","img","crypto","randomUUID","startingCard","Date","testCard","NewFactForm","setTimelineFacts","newTimeline","sortByDate","newFact","CardPreview","fact","alt","src","preview","newDate","setFullYear","max","SaveButton","saveTimeline","action","ResetButton","resetTimeline","postTimeline","body","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/routes/Create.tsx"],"sourcesContent":["import { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport User from \"../classes/User\";\nimport Fact from \"../classes/Fact\";\nimport Timeline from \"../classes/Timeline\";\n\nimport UserContext from \"../store/UserContext\";\n\nexport default function Create() {\n  let userContext = useContext(UserContext);\n  let authenticated = userContext.get(\"authenticated\");\n  let currentUser = userContext.get(\"currentUser\");\n  let userToken = userContext.get(\"userToken\");\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    if (!authenticated) {\n      navigate(\"../admin\");\n    }\n  }, [authenticated, navigate]);\n  \n  let [metadata, setMetadata] = useState({\n    title: '',\n    description: '',\n    keywordString: [],\n    creator: currentUser.username\n  });\n\n\n  const startingTimeline = useCallback(() => {\n    return new Timeline({\n      creator: currentUser.username\n    });\n  }, [currentUser.username]);\n\n  let [timeline, setTimeline] = useState(startingTimeline());\n  console.debug(timeline);\n\n  let [saveReady, setSaveReady] = useState(false);\n  \n  function Instructions() {\n    return(\n      <p className=\"instructions\">Your data will not be saved until you click Save.</p>\n    );\n  }\n\n  let [timelineList, setTimelineList] = useState([]);\n\n  useEffect(() => {\n    async function loadTimelineList(user, token) {\n      let list = await user.loadUserTimelineList(token);\n      if (list) {\n        setTimelineList(list);\n      }\n    }\n    if (authenticated) {\n      loadTimelineList(currentUser, userToken);\n    } else {\n      setTimelineList([]);\n    }\n  }, [authenticated, currentUser, userToken]);\n\n  let [timelineID, setTimelineID] = useState(null);\n\n  function loadTimeline(event) {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let id = data.get(\"select-timeline\");\n    setTimelineID(id);\n  }\n\n  useEffect(() => {\n    async function loadTimeline(id, token) {\n      let response = await fetch(`${User.SERVER}/timeline-full/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Authorization\": `Token ${token}`\n        })\n      });\n\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n        \n        setMetadata({\n          title: json.title,\n          description: json.description,\n          keywords: Timeline.parseKeywords(json.keywords),\n          creator: Timeline.creator ?? currentUser.username\n        });\n\n        setTimeline(new Timeline({\n          id: json.id,\n          ...metadata,\n          facts: json.facts.map(f => Fact.newFromYear(f))\n        }));\n      } else {\n        console.debug(`Problem loading timeline with id ${id}: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n\n    if (timelineID) {\n      if (timelineID === \"create\") {\n        setTimeline(startingTimeline());\n      } else {\n        loadTimeline(timelineID, userToken);\n      }\n    }\n  }, [timelineID, currentUser.username, startingTimeline, userToken]);\n\n\n  function Chooser() {\n    function timelineOption(timeline) {\n      return(\n        <option key={timeline.id} value={timeline.id}>{timeline.title}</option>\n      );\n    }\n    return(\n      <form id=\"chooser\" onSubmit={loadTimeline}>\n        <label for=\"select-timeline\">Select a Timeline:</label>\n        <select name=\"select-timeline\" defaultValue=\"create\">\n          <option value=\"create\">Create New</option>\n          { timelineList.map(timelineOption) }\n        </select>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n\n  function setTimelineMetadata(newMetadata) {\n     setTimeline(prev => new Timeline({\n      ...prev,\n      title: newMetadata.title,\n      description: newMetadata.description,\n      keywords: Timeline.parseKeywords(newMetadata.keywordString),\n      creator: newMetadata.creator\n     }));\n  }\n\n  function MetadataPanel() {\n    function updateMetadata(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      setMetadata({\n        title: data.get(\"title\"),\n        description: data.get(\"description\"),\n        keywordString: data.get(\"keywords\"),\n        creator: data.get(\"creator\")\n      });\n      console.log(\"Updating metadata on client side; remember to save your timeline\");\n      console.debug(metadata);\n    }\n\n    return(\n      <section id=\"metadata\">\n        <h2>Metadata</h2>\n        <form className=\"timelinePanel\" onSubmit={updateMetadata}>\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" name=\"title\" \n                defaultValue={metadata.title} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"description\">Description</label>\n              <input type=\"text\" name=\"description\" \n                defaultValue={metadata.description} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"keywords\">Keywords (separated with semicolons)</label>\n              <input type=\"text\" name=\"keywords\" \n                defaultValue={metadata.keywordString} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"creator\">Creator (for public display; default: your username)</label>\n              <input type=\"text\" name=\"creator\" \n                defaultValue={metadata.creator}/>\n            </div>\n          </div>\n          <button type=\"submit\">Update Metadata</button>\n        </form>\n      </section>\n    );\n  }\n\n  function CurrentFactsPanel() {\n\n    function currentFact(item) {\n\n      function deleteFact(event) {\n        if (window.confirm(\"Are you sure you want to delete the current fact? Deleted facts can be recovered by reloading the timeline without first clicking Save.\")) {\n          console.debug(`Delete item (date ${item.date.getFullYear()})`);\n          setTimeline(prev => prev.removeFact(item));\n        }\n      }\n\n      function editFact(event) {\n        console.debug(`Edit item (date ${item.date.getFullYear()})`);\n        setTestCard(item);\n        setTimeline(prev => prev.removeFact(item));\n      }\n\n      return(\n        <tr key={crypto.randomUUID()}>\n          <td><button type=\"button\" onClick={editFact}>Edit</button>\n            <button type=\"button\" onClick={deleteFact}>Delete</button></td>\n          <td>{item.id}</td>\n          <td>{item.year}</td>\n          <td>{item.info}</td>\n          <td>{item.img}</td>\n        </tr>\n      );\n    }\n\n    function Instructions() {\n      return(\n        <p className=\"instructions\">Enter timeline events using the form below</p>\n      );\n    }\n\n    return(\n      <section id=\"currentTimeline\">\n        <h2>Current Timeline Events</h2>\n        <table className=\"timeline\">\n          <thead>\n            <tr>\n              <th>Controls</th>\n              <th>ID</th>\n              <th>Year</th>\n              <th>Description</th>\n              <th>Image URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            { timeline ? timeline.facts.map(currentFact) : null }\n          </tbody>\n        </table>\n        { timeline ? null : <Instructions /> }\n      </section>\n    );\n  }\n\n  const startingCard = () => new Fact({\n    date: new Date(),\n    info: \"Description\", \n    img: \"https://picsum.photos/200.jpg\"\n  });\n\n  let [testCard, setTestCard] = useState(startingCard());\n\n  function NewFactForm() {\n\n    function setTimelineFacts(facts: Array<Fact>) {\n      let newTimeline = new Timeline({\n        ...timeline,\n        facts: facts\n      });\n      newTimeline.sortByDate();\n      setTimeline(newTimeline);\n    }\n\n    function newFact(event) {\n      if (testCard.date && testCard.info) {\n        setTimelineFacts([...timeline.facts, testCard]);\n        console.debug(\"Added fact to timeline\");\n        setTestCard(startingCard());\n      }\n    }\n\n    function CardPreview({ fact }) {\n      return(\n        <div className=\"card\" data-when={fact.year} data-noselect=\"noselect\">\n          <span className=\"date\">{fact.year}</span>\n          <img alt={fact.img} src={fact.img} />\n          <span className=\"info\">{fact.info}</span>\n        </div>\n      );\n    }\n\n    function preview(event) {\n      event.preventDefault();\n      let data = new FormData(event.target);\n      \n      let newDate = new Date();\n      newDate.setFullYear(data.get(\"date\"));\n\n      setTestCard(new Fact({\n        date: newDate,\n        info: data.get(\"info\"),\n        img: data.get(\"img\") \n      }));\n    }\n\n    return(\n      <section id=\"new\">\n        <h2>Add an Event</h2>\n        <form id=\"addFactForm\" onSubmit={preview}>\n          <div className=\"formInputBlock\">\n            <div className=\"formItem\">\n              <label htmlFor=\"date\">Year</label>\n              <input \n                type=\"number\" \n                name=\"date\" \n                max={startingCard().year}\n                defaultValue={testCard.year} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"info\">Description of event</label>\n              <input \n                type=\"text\" \n                name=\"info\" \n                defaultValue={testCard.info} />\n            </div>\n            <div className=\"formItem\">\n              <label htmlFor=\"img\">Complete URL of image (optional)</label>\n              <input \n                type=\"url\" \n                name=\"img\" \n                defaultValue={testCard.img} />\n            </div>\n          </div>\n          <section id=\"preview\">\n            <h3>Preview</h3>\n            <CardPreview fact={testCard} />\n          </section>\n          <button type=\"submit\" id=\"preview\">Preview</button>\n          <button type=\"submit\" id=\"add\" onClick={newFact}>Add</button>\n        </form>\n      </section>\n    );\n  }\n\n  function SaveButton() {\n    return(\n      <button id=\"save\" type=\"button\" onClick={saveTimeline}>Save</button>\n    );\n  }\n\n\n  // TODO indicate save state: \n  // (1) metadata, (2) facts, (3) whole timeline on server\n  function saveTimeline(event) {\n    let action = timeline ? \"Updated\" : \"Created\";\n    console.debug(`${action} timeline with title '${timeline.title}'`);\n    setTimelineMetadata(metadata);\n    setSaveReady(true);\n  }\n\n  function ResetButton() {\n    return(\n      <button id=\"reset\" type=\"button\" onClick={resetTimeline}>Reset</button>\n    );\n  }\n\n  // TODO reset to last saved version on backend\n  function resetTimeline() {\n    if (window.confirm(\"Are you sure you want to discard changes to the current timeline? This action cannot be undone.\")) {\n      setTimeline(startingTimeline());\n    }\n  }\n\n   \n  useEffect(() => {\n    async function postTimeline(user, token, timeline) {\n      console.debug(timeline.facts);\n      console.debug(timeline.json());\n      let response = await fetch(`${User.SERVER}/timeline-full/`, {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }),\n        body: timeline.json()\n      });\n      if (response.ok) {\n        let json = await response.json();\n        console.debug(json);\n      } else {\n        console.debug(`Problem creating timeline: Server status ${response.status}, ${response.statusText}`);\n      }\n    }\n    if (saveReady) {\n      console.debug(\"Ready to post timeline\");\n      console.debug(timeline);\n      postTimeline(currentUser, userToken, timeline);\n      setSaveReady(false);\n    } \n  }, [saveReady, timeline, currentUser, userToken]);\n\n\n  return(\n    <main>\n      <h1>Create a Chronoquiz</h1>\n      <Instructions />\n      <Chooser />\n      <MetadataPanel />\n      <CurrentFactsPanel />\n      <NewFactForm />\n      <SaveButton />\n      <ResetButton />\n    </main>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}