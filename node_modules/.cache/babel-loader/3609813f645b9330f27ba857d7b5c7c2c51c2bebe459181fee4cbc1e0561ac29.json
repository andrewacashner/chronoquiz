{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\nimport Game from \"../classes/Game\";\nimport RestartButton from \"./RestartButton\";\nimport TimelineContext from \"../store/TimelineContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction isInputValid(json) {\n  return typeof json === \"object\" && Array.isArray(json) && json.length > 0 && json.every(fact => \"date\" in fact && \"info\" in fact);\n}\nasync function clueListFromJson(json) {\n  let cards = [];\n  try {\n    if (json && json.length > 0) {\n      for (let entry of json) {\n        try {\n          let card = await Card.newSafeCard(entry);\n          if (card && card.isSafe) {\n            cards.push(card);\n          } else {\n            throw new Error(`Faulty card input {date: '${entry.date}', info: '${entry.info.slice(0, 15)}...'}; skipping`);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  return new FactList(cards);\n}\nexport default function InputForm() {\n  _s();\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n  let [url, setUrl] = useState(\"\");\n  let [json, setJson] = useState(null);\n  let [uploadVisible, setUploadVisible] = useState(false);\n  let [isGameActive, setIsGameActive] = useState(false);\n  function getUrl(event) {\n    event.preventDefault();\n    setIsGameActive(true);\n    let source = event.target.source.value;\n    let files = event.target.fileInput.files;\n    let newUrl = files.length > 0 ? URL.createObjectURL(files[0]) : `./input/${source}.json`;\n    setUrl(newUrl);\n  }\n  useEffect(() => {\n    async function fetchUrl() {\n      if (url) {\n        console.log(`Loading file ${url}`);\n        try {\n          let response = await fetch(url);\n          let json;\n          let contentType = response.headers.get(\"content-type\");\n          if (contentType && contentType.includes(\"application/json\")) {\n            json = await response.json();\n          } else {\n            throw new Error(`No JSON input: ${response}`);\n          }\n          if (isInputValid(json)) {\n            setJson(json);\n          } else {\n            throw new Error(\"Unusable JSON input\");\n            console.error(json);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    fetchUrl();\n  }, [url]);\n  useEffect(() => {\n    async function loadClues(json) {\n      try {\n        let newClues = await clueListFromJson(json);\n        newClues.setupClues();\n        setGame(prevGame => new Game({\n          clues: newClues,\n          timeline: prevGame.timeline,\n          score: prevGame.score\n        }));\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    loadClues(json);\n  }, [json, setGame]);\n  function showUploadButton(event) {\n    let value = event.target.value;\n    setUploadVisible(value === \"upload\");\n  }\n  function visibility(isVisible) {\n    return isVisible ? \"show\" : \"hide\";\n  }\n  function playMsg(isGameActive) {\n    return isGameActive ? \"Play again!\" : \"Play!\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"inputForm\",\n      onSubmit: getUrl,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: visibility(!isGameActive),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"source\",\n          children: \"Choose a timeline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"source\",\n          id: \"source\",\n          onChange: showUploadButton,\n          required: true,\n          defaultValue: \"music\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"music\",\n            children: \"Music\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"wars\",\n            children: \"Wars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"upload\",\n            children: \"Upload a custom timeline...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file\",\n        className: visibility(!isGameActive && uploadVisible),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: [\"Upload JSON timeline file (\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"about.html\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 65\n          }, this), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \".json\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"playbutton\",\n        children: playMsg(isGameActive)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), isGameActive ? /*#__PURE__*/_jsxDEV(RestartButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true);\n}\n_s(InputForm, \"gzdQsjfzIVYkZ07r8eeF2DNsZRs=\");\n_c = InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useContext","useState","useEffect","Card","FactList","Game","RestartButton","TimelineContext","jsxDEV","_jsxDEV","Fragment","_Fragment","isInputValid","json","Array","isArray","length","every","fact","clueListFromJson","cards","entry","card","newSafeCard","isSafe","push","Error","date","info","slice","e","console","error","InputForm","_s","context","setGame","set","url","setUrl","setJson","uploadVisible","setUploadVisible","isGameActive","setIsGameActive","getUrl","event","preventDefault","source","target","value","files","fileInput","newUrl","URL","createObjectURL","fetchUrl","log","response","fetch","contentType","headers","get","includes","loadClues","newClues","setupClues","prevGame","clues","timeline","score","showUploadButton","visibility","isVisible","playMsg","children","id","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","required","defaultValue","href","type","accept","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/components/InputForm.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\n\nimport Card from \"../classes/Card\";\nimport FactList from \"../classes/FactList\";\nimport Game from \"../classes/Game\";\n\nimport RestartButton from \"./RestartButton\";\n\nimport TimelineContext from \"../store/TimelineContext\";\n\nfunction isInputValid(json: any): boolean {\n  return typeof json === \"object\"\n  && Array.isArray(json) \n  && json.length > 0 \n  && json.every(fact => (\"date\" in fact) && (\"info\" in fact));\n}\n\nasync function clueListFromJson(json: object): FactList { \n  let cards = [];\n  try {\n    if (json && json.length > 0) {\n      for (let entry of json) {\n        try {\n          let card = await Card.newSafeCard(entry);\n          if (card && card.isSafe) {\n            cards.push(card);\n          } else {\n            throw new Error(`Faulty card input {date: '${entry.date}', info: '${entry.info.slice(0, 15)}...'}; skipping`);\n          }\n        } catch(e) {\n          console.error(e);\n        }\n      }\n    }\n  } catch(e) {\n    console.error(e);\n  }\n  return new FactList(cards);\n}\n\n\nexport default function InputForm() {\n\n  let context = useContext(TimelineContext);\n  let setGame = context.set;\n\n  let [url, setUrl] = useState(\"\");\n  let [json, setJson] = useState(null);\n  let [uploadVisible, setUploadVisible] = useState(false);\n  let [isGameActive, setIsGameActive] = useState(false);\n\n  function getUrl(event: React.FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n    setIsGameActive(true); \n    let source = event.target.source.value;\n    let files = event.target.fileInput.files;\n    let newUrl = (files.length > 0) \n                  ? URL.createObjectURL(files[0]) \n                  : `./input/${source}.json`;\n    setUrl(newUrl);\n  }\n  \n  useEffect(() => {\n    async function fetchUrl(): void {\n      if (url) {\n        console.log(`Loading file ${url}`);\n\n        try {\n          let response = await fetch(url);\n\n          let json;\n          let contentType = response.headers.get(\"content-type\");\n          \n          if (contentType && contentType.includes(\"application/json\")) {\n            json = await response.json();\n          } else {\n            throw new Error(`No JSON input: ${response}`);\n          }\n\n          if (isInputValid(json)) {\n            setJson(json);\n          } else {\n            throw new Error(\"Unusable JSON input\"); \n            console.error(json);\n          }\n        } catch(e) { \n          console.error(e); \n        }\n      }\n    }\n    fetchUrl();\n  }, [url]);\n\n  useEffect(() => {\n    async function loadClues(json) {\n      try {\n        let newClues = await clueListFromJson(json);\n        newClues.setupClues();\n        setGame(prevGame => new Game({ \n          clues: newClues,\n          timeline: prevGame.timeline,\n          score: prevGame.score\n        }));\n      } catch(e) {\n        console.error(e);\n      }\n    }\n\n    loadClues(json);\n  }, [json, setGame])\n\n\n  function showUploadButton(event: React.FormEvent<HTMLFormElement>): void {\n    let value = event.target.value;\n    setUploadVisible(value === \"upload\");\n  }\n\n  function visibility(isVisible: boolean): string {\n    return (isVisible) ? \"show\" : \"hide\";\n  }\n\n  function playMsg(isGameActive: boolean): string {\n    return (isGameActive) ? \"Play again!\" : \"Play!\";\n  }\n\n  return(\n    <>\n      <form id=\"inputForm\" onSubmit={getUrl}>\n        <div className={visibility(!isGameActive)}>\n          <label htmlFor=\"source\">Choose a timeline:</label>\n          <select name=\"source\" id=\"source\" \n            onChange={showUploadButton}\n            required defaultValue=\"music\">\n            <option value=\"music\">Music</option>\n            <option value=\"wars\">Wars</option>\n            <option value=\"upload\">Upload a custom timeline...</option>\n          </select>\n        </div>\n        <div id=\"file\" className={visibility(!isGameActive && uploadVisible)}>\n          <label htmlFor=\"fileInput\">Upload JSON timeline file (<a href=\"about.html\">?</a>)</label>\n          <input id=\"fileInput\" type=\"file\" accept=\".json\" />\n        </div>\n        <button type=\"submit\" id=\"playbutton\">{playMsg(isGameActive)}</button>\n      </form>\n      { isGameActive ? <RestartButton /> : null }\n    </>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}