{"ast":null,"code":"import{defaultTimeline}from\"./timelineReducer\";const defaultAdminState={// ID of timeline user wants to load\ntimelineID:null,initialTimeline:defaultTimeline,// Update the timeline select options?\nupdateTimelineList:true,// Save client-side timeline to the backend DB?\nsaveReady:false,// Update timeline display?\nrefresh:true,// Does client-side timeline differ from version originally loaded from\n// backend server?  \nhasUnsavedChanges:false};function adminReducer(state,action){let obj=action.payload;let newState=null;switch(action.type){case\"set\":newState={...state,...obj};break;case\"reset\":newState=defaultAdminState;break;default:newState=state;}return newState;}export{adminReducer,defaultAdminState};","map":{"version":3,"names":["defaultTimeline","defaultAdminState","timelineID","initialTimeline","updateTimelineList","saveReady","refresh","hasUnsavedChanges","adminReducer","state","action","obj","payload","newState","type"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/chronoquiz/src/reducers/adminReducer.tsx"],"sourcesContent":["import { defaultTimeline } from \"./timelineReducer\";\n\ninterface AdminState {\n  timelineID: number,\n  initialTimeline: Timeline,\n  updateTimelineList: boolean,\n  saveReady: boolean,\n  refresh: boolean,\n  hasUnsavedChanges: boolean\n}\n\nconst defaultAdminState: AdminState = {\n  // ID of timeline user wants to load\n  timelineID: null,  \n\n  initialTimeline: defaultTimeline,\n\n  // Update the timeline select options?\n  updateTimelineList: true,\n  \n  // Save client-side timeline to the backend DB?\n  saveReady: false,\n  \n  // Update timeline display?\n  refresh: true,\n\n  // Does client-side timeline differ from version originally loaded from\n  // backend server?  \n  hasUnsavedChanges: false, \n};\n\nfunction adminReducer(state: AdminState, action: object): AdminState {\n  let obj = action.payload;\n  let newState = null;\n\n  switch(action.type) {\n    case \"set\":\n      newState = { ...state, ...obj };\n    break;\n\n    case \"reset\":\n      newState = defaultAdminState;\n    break;\n\n    default:\n      newState = state;\n  }\n  return newState;\n}\n\nexport { adminReducer, defaultAdminState };\n"],"mappings":"AAAA,OAASA,eAAe,KAAQ,mBAAmB,CAWnD,KAAM,CAAAC,iBAA6B,CAAG,CACpC;AACAC,UAAU,CAAE,IAAI,CAEhBC,eAAe,CAAEH,eAAe,CAEhC;AACAI,kBAAkB,CAAE,IAAI,CAExB;AACAC,SAAS,CAAE,KAAK,CAEhB;AACAC,OAAO,CAAE,IAAI,CAEb;AACA;AACAC,iBAAiB,CAAE,KACrB,CAAC,CAED,QAAS,CAAAC,YAAYA,CAACC,KAAiB,CAAEC,MAAc,CAAc,CACnE,GAAI,CAAAC,GAAG,CAAGD,MAAM,CAACE,OAAO,CACxB,GAAI,CAAAC,QAAQ,CAAG,IAAI,CAEnB,OAAOH,MAAM,CAACI,IAAI,EAChB,IAAK,KAAK,CACRD,QAAQ,CAAG,CAAE,GAAGJ,KAAK,CAAE,GAAGE,GAAI,CAAC,CACjC,MAEA,IAAK,OAAO,CACVE,QAAQ,CAAGZ,iBAAiB,CAC9B,MAEA,QACEY,QAAQ,CAAGJ,KAAK,CACpB,CACA,MAAO,CAAAI,QAAQ,CACjB,CAEA,OAASL,YAAY,CAAEP,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}